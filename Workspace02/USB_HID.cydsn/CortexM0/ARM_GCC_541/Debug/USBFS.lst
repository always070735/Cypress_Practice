ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_Init,"ax",%progbits
  20              		.align	2
  21              		.global	USBFS_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	USBFS_Init, %function
  25              	USBFS_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\USBFS.c"
   1:Generated_Source\PSoC4/USBFS.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/USBFS.c **** * \file USBFS.c
   3:Generated_Source\PSoC4/USBFS.c **** * \version 3.20
   4:Generated_Source\PSoC4/USBFS.c **** *
   5:Generated_Source\PSoC4/USBFS.c **** * \brief
   6:Generated_Source\PSoC4/USBFS.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC4/USBFS.c **** *
   8:Generated_Source\PSoC4/USBFS.c **** * Note:
   9:Generated_Source\PSoC4/USBFS.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC4/USBFS.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC4/USBFS.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC4/USBFS.c **** *
  13:Generated_Source\PSoC4/USBFS.c **** ********************************************************************************
  14:Generated_Source\PSoC4/USBFS.c **** * \copyright
  15:Generated_Source\PSoC4/USBFS.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC4/USBFS.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC4/USBFS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC4/USBFS.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
  20:Generated_Source\PSoC4/USBFS.c **** 
  21:Generated_Source\PSoC4/USBFS.c **** #include "USBFS_pvt.h"
  22:Generated_Source\PSoC4/USBFS.c **** #include "USBFS_cydmac.h"
  23:Generated_Source\PSoC4/USBFS.c **** #include "USBFS_hid.h"
  24:Generated_Source\PSoC4/USBFS.c **** #include "USBFS_Dp.h"
  25:Generated_Source\PSoC4/USBFS.c **** 
  26:Generated_Source\PSoC4/USBFS.c **** 
  27:Generated_Source\PSoC4/USBFS.c **** /***************************************
  28:Generated_Source\PSoC4/USBFS.c **** * Global data allocation
  29:Generated_Source\PSoC4/USBFS.c **** ***************************************/
  30:Generated_Source\PSoC4/USBFS.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 2


  31:Generated_Source\PSoC4/USBFS.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC4/USBFS.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC4/USBFS.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC4/USBFS.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC4/USBFS.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC4/USBFS.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC4/USBFS.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC4/USBFS.c **** * functions.
  39:Generated_Source\PSoC4/USBFS.c **** */
  40:Generated_Source\PSoC4/USBFS.c **** uint8 USBFS_initVar = 0u;
  41:Generated_Source\PSoC4/USBFS.c **** 
  42:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC4/USBFS.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC4/USBFS.c ****         static void USBFS_InitEpDma(void);
  45:Generated_Source\PSoC4/USBFS.c **** 
  46:Generated_Source\PSoC4/USBFS.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC4/USBFS.c ****         const uint8 USBFS_DmaChan[USBFS_MAX_EP] =
  48:Generated_Source\PSoC4/USBFS.c ****         {
  49:Generated_Source\PSoC4/USBFS.c ****             0u,
  50:Generated_Source\PSoC4/USBFS.c ****             0u,
  51:Generated_Source\PSoC4/USBFS.c ****             0u,
  52:Generated_Source\PSoC4/USBFS.c ****             0u,
  53:Generated_Source\PSoC4/USBFS.c ****             0u,
  54:Generated_Source\PSoC4/USBFS.c ****             0u,
  55:Generated_Source\PSoC4/USBFS.c ****             0u,
  56:Generated_Source\PSoC4/USBFS.c ****             0u,
  57:Generated_Source\PSoC4/USBFS.c ****             0u,
  58:Generated_Source\PSoC4/USBFS.c ****         };        
  59:Generated_Source\PSoC4/USBFS.c ****     #else
  60:Generated_Source\PSoC4/USBFS.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC4/USBFS.c ****         uint8 USBFS_DmaChan[USBFS_MAX_EP];
  62:Generated_Source\PSoC4/USBFS.c ****         
  63:Generated_Source\PSoC4/USBFS.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC4/USBFS.c ****         uint8 USBFS_DmaTd[USBFS_MAX_EP];
  65:Generated_Source\PSoC4/USBFS.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC4/USBFS.c **** 
  68:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC4/USBFS.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC4/USBFS.c ****     uint8  USBFS_DmaEpBurstCnt   [USBFS_MAX_EP];
  72:Generated_Source\PSoC4/USBFS.c ****     
  73:Generated_Source\PSoC4/USBFS.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC4/USBFS.c ****     uint8  USBFS_DmaEpLastBurstEl[USBFS_MAX_EP];
  75:Generated_Source\PSoC4/USBFS.c **** 
  76:Generated_Source\PSoC4/USBFS.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC4/USBFS.c ****     uint8  USBFS_DmaEpBurstCntBackup  [USBFS_MAX_EP];
  78:Generated_Source\PSoC4/USBFS.c ****     uint32 USBFS_DmaEpBufferAddrBackup[USBFS_MAX_EP];
  79:Generated_Source\PSoC4/USBFS.c ****      
  80:Generated_Source\PSoC4/USBFS.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC4/USBFS.c ****     const uint8 USBFS_DmaReqOut[USBFS_MAX_EP] =
  82:Generated_Source\PSoC4/USBFS.c ****     {
  83:Generated_Source\PSoC4/USBFS.c ****         0u,
  84:Generated_Source\PSoC4/USBFS.c ****         USBFS_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC4/USBFS.c ****         0u,
  86:Generated_Source\PSoC4/USBFS.c ****         0u,
  87:Generated_Source\PSoC4/USBFS.c ****         0u,
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 3


  88:Generated_Source\PSoC4/USBFS.c ****         0u,
  89:Generated_Source\PSoC4/USBFS.c ****         0u,
  90:Generated_Source\PSoC4/USBFS.c ****         0u,
  91:Generated_Source\PSoC4/USBFS.c ****         0u,
  92:Generated_Source\PSoC4/USBFS.c ****     };
  93:Generated_Source\PSoC4/USBFS.c **** 
  94:Generated_Source\PSoC4/USBFS.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC4/USBFS.c ****     const uint8 USBFS_DmaBurstEndOut[USBFS_MAX_EP] =
  96:Generated_Source\PSoC4/USBFS.c ****     {
  97:Generated_Source\PSoC4/USBFS.c ****         0u,
  98:Generated_Source\PSoC4/USBFS.c ****         USBFS_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC4/USBFS.c ****         USBFS_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC4/USBFS.c ****         USBFS_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC4/USBFS.c ****         USBFS_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC4/USBFS.c ****         USBFS_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC4/USBFS.c ****         USBFS_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC4/USBFS.c ****         USBFS_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC4/USBFS.c ****         USBFS_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC4/USBFS.c ****     };
 107:Generated_Source\PSoC4/USBFS.c ****     
 108:Generated_Source\PSoC4/USBFS.c **** #else
 109:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC4/USBFS.c ****         static uint8 clearInDataRdyStatus = USBFS_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC4/USBFS.c ****         uint8 USBFS_DmaNextTd[USBFS_MAX_EP];
 112:Generated_Source\PSoC4/USBFS.c ****         const uint8 USBFS_epX_TD_TERMOUT_EN[USBFS_MAX_EP] =
 113:Generated_Source\PSoC4/USBFS.c ****         {
 114:Generated_Source\PSoC4/USBFS.c ****             0u,
 115:Generated_Source\PSoC4/USBFS.c ****             0u,
 116:Generated_Source\PSoC4/USBFS.c ****             0u,
 117:Generated_Source\PSoC4/USBFS.c ****             0u,
 118:Generated_Source\PSoC4/USBFS.c ****             0u,
 119:Generated_Source\PSoC4/USBFS.c ****             0u,
 120:Generated_Source\PSoC4/USBFS.c ****             0u,
 121:Generated_Source\PSoC4/USBFS.c ****             0u,
 122:Generated_Source\PSoC4/USBFS.c ****             0u,
 123:Generated_Source\PSoC4/USBFS.c ****         };
 124:Generated_Source\PSoC4/USBFS.c **** 
 125:Generated_Source\PSoC4/USBFS.c ****         volatile uint16 USBFS_inLength[USBFS_MAX_EP];
 126:Generated_Source\PSoC4/USBFS.c ****         const uint8 *USBFS_inDataPointer[USBFS_MAX_EP];
 127:Generated_Source\PSoC4/USBFS.c ****         volatile uint8 USBFS_inBufFull[USBFS_MAX_EP];
 128:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC4/USBFS.c **** 
 132:Generated_Source\PSoC4/USBFS.c **** 
 133:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 134:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_Start
 135:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 136:Generated_Source\PSoC4/USBFS.c **** *
 137:Generated_Source\PSoC4/USBFS.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC4/USBFS.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC4/USBFS.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC4/USBFS.c **** *   operation.
 141:Generated_Source\PSoC4/USBFS.c **** *
 142:Generated_Source\PSoC4/USBFS.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC4/USBFS.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC4/USBFS.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 4


 145:Generated_Source\PSoC4/USBFS.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC4/USBFS.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC4/USBFS.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC4/USBFS.c **** *
 149:Generated_Source\PSoC4/USBFS.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC4/USBFS.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC4/USBFS.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC4/USBFS.c **** *
 153:Generated_Source\PSoC4/USBFS.c **** *  \param device
 154:Generated_Source\PSoC4/USBFS.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC4/USBFS.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC4/USBFS.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC4/USBFS.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC4/USBFS.c **** *  \param mode:
 159:Generated_Source\PSoC4/USBFS.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC4/USBFS.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC4/USBFS.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC4/USBFS.c **** *   following list.
 163:Generated_Source\PSoC4/USBFS.c **** *
 164:Generated_Source\PSoC4/USBFS.c **** *       *USBFS_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC4/USBFS.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC4/USBFS.c **** *
 167:Generated_Source\PSoC4/USBFS.c **** *       *USBFS_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC4/USBFS.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC4/USBFS.c **** *
 170:Generated_Source\PSoC4/USBFS.c **** *       *USBFS_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC4/USBFS.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC4/USBFS.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC4/USBFS.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC4/USBFS.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC4/USBFS.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC4/USBFS.c **** * \globalvars
 177:Generated_Source\PSoC4/USBFS.c **** *  \ref USBFS_initVar
 178:Generated_Source\PSoC4/USBFS.c **** *
 179:Generated_Source\PSoC4/USBFS.c **** * \sideeffect
 180:Generated_Source\PSoC4/USBFS.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC4/USBFS.c **** *
 182:Generated_Source\PSoC4/USBFS.c **** * \reentrant
 183:Generated_Source\PSoC4/USBFS.c **** *  No.
 184:Generated_Source\PSoC4/USBFS.c **** *
 185:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 186:Generated_Source\PSoC4/USBFS.c **** void USBFS_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC4/USBFS.c **** {
 188:Generated_Source\PSoC4/USBFS.c ****     if (0u == USBFS_initVar)
 189:Generated_Source\PSoC4/USBFS.c ****     {
 190:Generated_Source\PSoC4/USBFS.c ****         USBFS_Init();
 191:Generated_Source\PSoC4/USBFS.c ****         USBFS_initVar = 1u;
 192:Generated_Source\PSoC4/USBFS.c ****     }
 193:Generated_Source\PSoC4/USBFS.c **** 
 194:Generated_Source\PSoC4/USBFS.c ****     USBFS_InitComponent(device, mode);
 195:Generated_Source\PSoC4/USBFS.c **** }
 196:Generated_Source\PSoC4/USBFS.c **** 
 197:Generated_Source\PSoC4/USBFS.c **** 
 198:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 199:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_Init
 200:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 201:Generated_Source\PSoC4/USBFS.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 5


 202:Generated_Source\PSoC4/USBFS.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC4/USBFS.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC4/USBFS.c **** * USBFS_Init() because the USBFS_Start() routine calls
 205:Generated_Source\PSoC4/USBFS.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC4/USBFS.c **** *
 207:Generated_Source\PSoC4/USBFS.c **** * \reentrant
 208:Generated_Source\PSoC4/USBFS.c **** *  No.
 209:Generated_Source\PSoC4/USBFS.c **** *
 210:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 211:Generated_Source\PSoC4/USBFS.c **** void USBFS_Init(void) 
 212:Generated_Source\PSoC4/USBFS.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 213:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC4/USBFS.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC4/USBFS.c ****     USBFS_USB_CLK_EN_REG = USBFS_USB_CLK_CSR_CLK_EN;
  36              		.loc 1 215 0
  37 0002 0122     		movs	r2, #1
  38 0004 244B     		ldr	r3, .L3
  39 0006 1A60     		str	r2, [r3]
 216:Generated_Source\PSoC4/USBFS.c **** 
 217:Generated_Source\PSoC4/USBFS.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC4/USBFS.c ****     * USBFS_InitComponent() if it is required.
 219:Generated_Source\PSoC4/USBFS.c ****     */
 220:Generated_Source\PSoC4/USBFS.c **** 
 221:Generated_Source\PSoC4/USBFS.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC4/USBFS.c ****     USBFS_USBIO_CR1_REG &= ~ (uint32) USBFS_USBIO_CR1_IOMODE;
  40              		.loc 1 222 0
  41 0008 244A     		ldr	r2, .L3+4
  42 000a 1368     		ldr	r3, [r2]
  43 000c 2021     		movs	r1, #32
  44 000e 8B43     		bics	r3, r1
  45 0010 1360     		str	r3, [r2]
 223:Generated_Source\PSoC4/USBFS.c **** 
 224:Generated_Source\PSoC4/USBFS.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC4/USBFS.c ****     USBFS_BUS_RST_CNT_REG = USBFS_DEFUALT_BUS_RST_CNT;
  46              		.loc 1 225 0
  47 0012 0A22     		movs	r2, #10
  48 0014 224B     		ldr	r3, .L3+8
  49 0016 1A60     		str	r2, [r3]
 226:Generated_Source\PSoC4/USBFS.c **** 
 227:Generated_Source\PSoC4/USBFS.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC4/USBFS.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC4/USBFS.c ****     */
 230:Generated_Source\PSoC4/USBFS.c ****     USBFS_POWER_CTRL_REG = USBFS_DEFAULT_POWER_CTRL_VBUS;
  50              		.loc 1 230 0
  51 0018 224C     		ldr	r4, .L3+12
  52 001a 234B     		ldr	r3, .L3+16
  53 001c 2360     		str	r3, [r4]
 231:Generated_Source\PSoC4/USBFS.c **** 
 232:Generated_Source\PSoC4/USBFS.c ****     /* Enable PHY detector and single-ended and differential receivers. */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 6


 233:Generated_Source\PSoC4/USBFS.c ****     USBFS_POWER_CTRL_REG |= USBFS_DEFAULT_POWER_CTRL_PHY;
  54              		.loc 1 233 0
  55 001e 2368     		ldr	r3, [r4]
  56 0020 224A     		ldr	r2, .L3+20
  57 0022 1343     		orrs	r3, r2
  58 0024 2360     		str	r3, [r4]
 234:Generated_Source\PSoC4/USBFS.c **** 
 235:Generated_Source\PSoC4/USBFS.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC4/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_SUSPEND;
  59              		.loc 1 236 0
  60 0026 2368     		ldr	r3, [r4]
  61 0028 0422     		movs	r2, #4
  62 002a 9343     		bics	r3, r2
  63 002c 2360     		str	r3, [r4]
 237:Generated_Source\PSoC4/USBFS.c ****     CyDelayUs(USBFS_WAIT_SUSPEND_DEL_DISABLE);
  64              		.loc 1 237 0
  65 002e 0220     		movs	r0, #2
  66 0030 FFF7FEFF 		bl	CyDelayUs
  67              	.LVL0:
 238:Generated_Source\PSoC4/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_SUSPEND_DEL;
  68              		.loc 1 238 0
  69 0034 2368     		ldr	r3, [r4]
  70 0036 0822     		movs	r2, #8
  71 0038 9343     		bics	r3, r2
  72 003a 2360     		str	r3, [r4]
 239:Generated_Source\PSoC4/USBFS.c **** 
 240:Generated_Source\PSoC4/USBFS.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC4/USBFS.c ****     USBFS_CR1_REG = USBFS_DEFUALT_CR1;
  73              		.loc 1 241 0
  74 003c FFF7FEFF 		bl	CySysClkImoGetUsbLock
  75              	.LVL1:
  76 0040 0028     		cmp	r0, #0
  77 0042 00D0     		beq	.L2
  78 0044 0220     		movs	r0, #2
  79              	.L2:
  80              		.loc 1 241 0 is_stmt 0 discriminator 4
  81 0046 1A4B     		ldr	r3, .L3+24
  82 0048 1860     		str	r0, [r3]
 242:Generated_Source\PSoC4/USBFS.c **** 
 243:Generated_Source\PSoC4/USBFS.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC4/USBFS.c ****     USBFS_INTR_LVL_SEL_REG = USBFS_DEFAULT_INTR_LVL_SEL;
  83              		.loc 1 244 0 is_stmt 1 discriminator 4
  84 004a 1A4A     		ldr	r2, .L3+28
  85 004c 1A4B     		ldr	r3, .L3+32
  86 004e 1A60     		str	r2, [r3]
 245:Generated_Source\PSoC4/USBFS.c **** 
 246:Generated_Source\PSoC4/USBFS.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC4/USBFS.c ****     USBFS_INTR_SIE_MASK_REG = USBFS_DEFAULT_INTR_SIE_MASK;
  87              		.loc 1 247 0 discriminator 4
  88 0050 0622     		movs	r2, #6
  89 0052 1A4B     		ldr	r3, .L3+36
  90 0054 1A60     		str	r2, [r3]
 248:Generated_Source\PSoC4/USBFS.c **** 
 249:Generated_Source\PSoC4/USBFS.c **** #else
 250:Generated_Source\PSoC4/USBFS.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 251:Generated_Source\PSoC4/USBFS.c **** 
 252:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 7


 253:Generated_Source\PSoC4/USBFS.c ****     uint16 i;
 254:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC4/USBFS.c **** 
 256:Generated_Source\PSoC4/USBFS.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC4/USBFS.c ****     USBFS_PM_ACT_CFG_REG |= USBFS_PM_ACT_EN_FSUSB;
 258:Generated_Source\PSoC4/USBFS.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC4/USBFS.c ****     USBFS_PM_STBY_CFG_REG |= USBFS_PM_STBY_EN_FSUSB;
 260:Generated_Source\PSoC4/USBFS.c **** 
 261:Generated_Source\PSoC4/USBFS.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC4/USBFS.c ****     USBFS_USB_CLK_EN_REG = USBFS_USB_CLK_ENABLE;
 263:Generated_Source\PSoC4/USBFS.c **** 
 264:Generated_Source\PSoC4/USBFS.c ****     USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK;
 265:Generated_Source\PSoC4/USBFS.c **** 
 266:Generated_Source\PSoC4/USBFS.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC4/USBFS.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC4/USBFS.c ****     USBFS_USBIO_CR0_REG &= (uint8) ~USBFS_USBIO_CR0_TEN;
 269:Generated_Source\PSoC4/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 270:Generated_Source\PSoC4/USBFS.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC4/USBFS.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC4/USBFS.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC4/USBFS.c ****     */
 274:Generated_Source\PSoC4/USBFS.c ****     USBFS_PM_USB_CR0_REG &= (uint8) ~(USBFS_PM_USB_CR0_PD_N |
 275:Generated_Source\PSoC4/USBFS.c ****                                                  USBFS_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC4/USBFS.c **** 
 277:Generated_Source\PSoC4/USBFS.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC4/USBFS.c ****     USBFS_USBIO_CR1_REG &= (uint8) ~USBFS_USBIO_CR1_IOMODE;
 279:Generated_Source\PSoC4/USBFS.c **** 
 280:Generated_Source\PSoC4/USBFS.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC4/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_REF_EN;
 282:Generated_Source\PSoC4/USBFS.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC4/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_1US);
 284:Generated_Source\PSoC4/USBFS.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC4/USBFS.c ****     CyDelayUs(USBFS_WAIT_VREF_RESTORE);
 286:Generated_Source\PSoC4/USBFS.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC4/USBFS.c ****     USBFS_DM_INP_DIS_REG &= (uint8) ~USBFS_DM_MASK;
 288:Generated_Source\PSoC4/USBFS.c ****     USBFS_DP_INP_DIS_REG &= (uint8) ~USBFS_DP_MASK;
 289:Generated_Source\PSoC4/USBFS.c **** 
 290:Generated_Source\PSoC4/USBFS.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC4/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_N;
 292:Generated_Source\PSoC4/USBFS.c ****     CyDelayUs(USBFS_WAIT_PD_PULLUP_N_ENABLE);
 293:Generated_Source\PSoC4/USBFS.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC4/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_PULLUP_N;
 295:Generated_Source\PSoC4/USBFS.c **** 
 296:Generated_Source\PSoC4/USBFS.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC4/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_PTR,     0u);
 298:Generated_Source\PSoC4/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_MSB_PTR, 0u);
 299:Generated_Source\PSoC4/USBFS.c **** 
 300:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC4/USBFS.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC4/USBFS.c ****     for (i = 0u; i < USBFS_MAX_EP; ++i)
 303:Generated_Source\PSoC4/USBFS.c ****     {
 304:Generated_Source\PSoC4/USBFS.c ****         USBFS_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC4/USBFS.c **** 
 306:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC4/USBFS.c ****         USBFS_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC4/USBFS.c ****     }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 8


 310:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC4/USBFS.c **** 
 312:Generated_Source\PSoC4/USBFS.c ****     CyExitCriticalSection(enableInterrupts);
 313:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC4/USBFS.c **** 
 315:Generated_Source\PSoC4/USBFS.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC4/USBFS.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC4/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_HI_VECT_NUM,  USBFS_INTR_HI_PRIORITY);
  91              		.loc 1 318 0 discriminator 4
  92 0056 0321     		movs	r1, #3
  93 0058 1E20     		movs	r0, #30
  94 005a FFF7FEFF 		bl	CyIntSetPriority
  95              	.LVL2:
 319:Generated_Source\PSoC4/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_HI_VECT_NUM, &USBFS_INTR_HI_ISR);
  96              		.loc 1 319 0 discriminator 4
  97 005e 1849     		ldr	r1, .L3+40
  98 0060 1E20     		movs	r0, #30
  99 0062 FFF7FEFF 		bl	CyIntSetVector
 100              	.LVL3:
 320:Generated_Source\PSoC4/USBFS.c **** 
 321:Generated_Source\PSoC4/USBFS.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC4/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_LO_VECT_NUM,  USBFS_INTR_LO_PRIORITY);
 101              		.loc 1 322 0 discriminator 4
 102 0066 0321     		movs	r1, #3
 103 0068 1F20     		movs	r0, #31
 104 006a FFF7FEFF 		bl	CyIntSetPriority
 105              	.LVL4:
 323:Generated_Source\PSoC4/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_LO_VECT_NUM, &USBFS_INTR_LO_ISR);
 106              		.loc 1 323 0 discriminator 4
 107 006e 1549     		ldr	r1, .L3+44
 108 0070 1F20     		movs	r0, #31
 109 0072 FFF7FEFF 		bl	CyIntSetVector
 110              	.LVL5:
 324:Generated_Source\PSoC4/USBFS.c **** 
 325:Generated_Source\PSoC4/USBFS.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC4/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_MED_VECT_NUM,  USBFS_INTR_MED_PRIORITY);
 111              		.loc 1 326 0 discriminator 4
 112 0076 0321     		movs	r1, #3
 113 0078 0020     		movs	r0, #0
 114 007a FFF7FEFF 		bl	CyIntSetPriority
 115              	.LVL6:
 327:Generated_Source\PSoC4/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_MED_VECT_NUM, &USBFS_INTR_MED_ISR);
 116              		.loc 1 327 0 discriminator 4
 117 007e 1249     		ldr	r1, .L3+48
 118 0080 0020     		movs	r0, #0
 119 0082 FFF7FEFF 		bl	CyIntSetVector
 120              	.LVL7:
 328:Generated_Source\PSoC4/USBFS.c **** 
 329:Generated_Source\PSoC4/USBFS.c **** #else
 330:Generated_Source\PSoC4/USBFS.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC4/USBFS.c ****     CyIntSetPriority(USBFS_BUS_RESET_VECT_NUM, USBFS_BUS_RESET_PRIOR);
 332:Generated_Source\PSoC4/USBFS.c ****     (void) CyIntSetVector(USBFS_BUS_RESET_VECT_NUM,   &USBFS_BUS_RESET_ISR);
 333:Generated_Source\PSoC4/USBFS.c **** 
 334:Generated_Source\PSoC4/USBFS.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC4/USBFS.c ****     CyIntSetPriority(USBFS_EP_0_VECT_NUM, USBFS_EP_0_PRIOR);
 336:Generated_Source\PSoC4/USBFS.c ****     (void) CyIntSetVector(USBFS_EP_0_VECT_NUM,   &USBFS_EP_0_ISR);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 9


 337:Generated_Source\PSoC4/USBFS.c **** 
 338:Generated_Source\PSoC4/USBFS.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC4/USBFS.c ****         CyIntSetPriority     (USBFS_SOF_VECT_NUM,  USBFS_SOF_PRIOR);
 341:Generated_Source\PSoC4/USBFS.c ****         (void) CyIntSetVector(USBFS_SOF_VECT_NUM, &USBFS_SOF_ISR);
 342:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC4/USBFS.c **** 
 344:Generated_Source\PSoC4/USBFS.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC4/USBFS.c ****         CyIntSetPriority     (USBFS_EP_1_VECT_NUM,  USBFS_EP_1_PRIOR);
 347:Generated_Source\PSoC4/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_1_VECT_NUM,  &USBFS_EP_1_ISR);
 348:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC4/USBFS.c **** 
 350:Generated_Source\PSoC4/USBFS.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC4/USBFS.c ****         CyIntSetPriority     (USBFS_EP_2_VECT_NUM,  USBFS_EP_2_PRIOR);
 353:Generated_Source\PSoC4/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_2_VECT_NUM, &USBFS_EP_2_ISR);
 354:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC4/USBFS.c **** 
 356:Generated_Source\PSoC4/USBFS.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC4/USBFS.c ****         CyIntSetPriority     (USBFS_EP_3_VECT_NUM,  USBFS_EP_3_PRIOR);
 359:Generated_Source\PSoC4/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_3_VECT_NUM, &USBFS_EP_3_ISR);
 360:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC4/USBFS.c **** 
 362:Generated_Source\PSoC4/USBFS.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC4/USBFS.c ****         CyIntSetPriority     (USBFS_EP_4_VECT_NUM,  USBFS_EP_4_PRIOR);
 365:Generated_Source\PSoC4/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_4_VECT_NUM, &USBFS_EP_4_ISR);
 366:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC4/USBFS.c **** 
 368:Generated_Source\PSoC4/USBFS.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC4/USBFS.c ****         CyIntSetPriority     (USBFS_EP_5_VECT_NUM,  USBFS_EP_5_PRIOR);
 371:Generated_Source\PSoC4/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_5_VECT_NUM, &USBFS_EP_5_ISR);
 372:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC4/USBFS.c **** 
 374:Generated_Source\PSoC4/USBFS.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC4/USBFS.c ****         CyIntSetPriority     (USBFS_EP_6_VECT_NUM,  USBFS_EP_6_PRIOR);
 377:Generated_Source\PSoC4/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_6_VECT_NUM, &USBFS_EP_6_ISR);
 378:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC4/USBFS.c **** 
 380:Generated_Source\PSoC4/USBFS.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC4/USBFS.c ****         CyIntSetPriority     (USBFS_EP_7_VECT_NUM,  USBFS_EP_7_PRIOR);
 383:Generated_Source\PSoC4/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_7_VECT_NUM, &USBFS_EP_7_ISR);
 384:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC4/USBFS.c **** 
 386:Generated_Source\PSoC4/USBFS.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC4/USBFS.c ****         CyIntSetPriority     (USBFS_EP_8_VECT_NUM,  USBFS_EP_8_PRIOR);
 389:Generated_Source\PSoC4/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_8_VECT_NUM, &USBFS_EP_8_ISR);
 390:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC4/USBFS.c **** 
 392:Generated_Source\PSoC4/USBFS.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 10


 394:Generated_Source\PSoC4/USBFS.c ****         CyIntSetPriority     (USBFS_ARB_VECT_NUM,  USBFS_ARB_PRIOR);
 395:Generated_Source\PSoC4/USBFS.c ****         (void) CyIntSetVector(USBFS_ARB_VECT_NUM, &USBFS_ARB_ISR);
 396:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC4/USBFS.c **** 
 399:Generated_Source\PSoC4/USBFS.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC4/USBFS.c ****     CyIntSetPriority     (USBFS_DP_INTC_VECT_NUM,  USBFS_DP_INTC_PRIORITY);
 121              		.loc 1 401 0 discriminator 4
 122 0086 0321     		movs	r1, #3
 123 0088 0520     		movs	r0, #5
 124 008a FFF7FEFF 		bl	CyIntSetPriority
 125              	.LVL8:
 402:Generated_Source\PSoC4/USBFS.c ****     (void) CyIntSetVector(USBFS_DP_INTC_VECT_NUM, &USBFS_DP_ISR);
 126              		.loc 1 402 0 discriminator 4
 127 008e 0F49     		ldr	r1, .L3+52
 128 0090 0520     		movs	r0, #5
 129 0092 FFF7FEFF 		bl	CyIntSetVector
 130              	.LVL9:
 403:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC4/USBFS.c **** 
 405:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC4/USBFS.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC4/USBFS.c ****     USBFS_InitEpDma();
 408:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC4/USBFS.c **** }
 131              		.loc 1 409 0 discriminator 4
 132              		@ sp needed
 133 0096 10BD     		pop	{r4, pc}
 134              	.L4:
 135              		.align	2
 136              	.L3:
 137 0098 74022C40 		.word	1076626036
 138 009c 48002C40 		.word	1076625480
 139 00a0 30032C40 		.word	1076626224
 140 00a4 00202C40 		.word	1076633600
 141 00a8 01000004 		.word	67108865
 142 00ac 0C0000B8 		.word	-1207959540
 143 00b0 24002C40 		.word	1076625444
 144 00b4 18000100 		.word	65560
 145 00b8 30202C40 		.word	1076633648
 146 00bc 28202C40 		.word	1076633640
 147 00c0 00000000 		.word	USBFS_INTR_HI_ISR
 148 00c4 00000000 		.word	USBFS_INTR_LO_ISR
 149 00c8 00000000 		.word	USBFS_INTR_MED_ISR
 150 00cc 00000000 		.word	USBFS_DP_ISR
 151              		.cfi_endproc
 152              	.LFE2:
 153              		.size	USBFS_Init, .-USBFS_Init
 154              		.section	.text.USBFS_InitComponent,"ax",%progbits
 155              		.align	2
 156              		.global	USBFS_InitComponent
 157              		.code	16
 158              		.thumb_func
 159              		.type	USBFS_InitComponent, %function
 160              	USBFS_InitComponent:
 161              	.LFB3:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 11


 410:Generated_Source\PSoC4/USBFS.c **** 
 411:Generated_Source\PSoC4/USBFS.c **** 
 412:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 413:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_InitComponent
 414:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 415:Generated_Source\PSoC4/USBFS.c **** *
 416:Generated_Source\PSoC4/USBFS.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC4/USBFS.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC4/USBFS.c **** *
 419:Generated_Source\PSoC4/USBFS.c **** * \param device:
 420:Generated_Source\PSoC4/USBFS.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC4/USBFS.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC4/USBFS.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC4/USBFS.c **** *   field.
 424:Generated_Source\PSoC4/USBFS.c **** *  \param mode:
 425:Generated_Source\PSoC4/USBFS.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC4/USBFS.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC4/USBFS.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC4/USBFS.c **** *   following list.
 429:Generated_Source\PSoC4/USBFS.c **** *
 430:Generated_Source\PSoC4/USBFS.c **** *       *USBFS_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC4/USBFS.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC4/USBFS.c **** *
 433:Generated_Source\PSoC4/USBFS.c **** *       *USBFS_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC4/USBFS.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC4/USBFS.c **** *
 436:Generated_Source\PSoC4/USBFS.c **** *       *USBFS_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC4/USBFS.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC4/USBFS.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC4/USBFS.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC4/USBFS.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC4/USBFS.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC4/USBFS.c **** *
 443:Generated_Source\PSoC4/USBFS.c **** * \globalvars
 444:Generated_Source\PSoC4/USBFS.c **** *   \ref USBFS_device
 445:Generated_Source\PSoC4/USBFS.c **** *   \ref USBFS_transferState
 446:Generated_Source\PSoC4/USBFS.c **** *   \ref USBFS_configuration
 447:Generated_Source\PSoC4/USBFS.c **** *   \ref USBFS_deviceStatus
 448:Generated_Source\PSoC4/USBFS.c **** *
 449:Generated_Source\PSoC4/USBFS.c **** *   \ref USBFS_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC4/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC4/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC4/USBFS.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC4/USBFS.c **** *
 454:Generated_Source\PSoC4/USBFS.c **** *   \ref USBFS_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC4/USBFS.c **** *
 456:Generated_Source\PSoC4/USBFS.c **** * \reentrant
 457:Generated_Source\PSoC4/USBFS.c **** *  No.
 458:Generated_Source\PSoC4/USBFS.c **** *
 459:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 460:Generated_Source\PSoC4/USBFS.c **** void USBFS_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC4/USBFS.c **** {
 162              		.loc 1 461 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL10:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 12


 167 0000 10B5     		push	{r4, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 4, -8
 170              		.cfi_offset 14, -4
 171 0002 0C00     		movs	r4, r1
 172              	.LVL11:
 462:Generated_Source\PSoC4/USBFS.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC4/USBFS.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC4/USBFS.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC4/USBFS.c ****     */
 466:Generated_Source\PSoC4/USBFS.c **** #if defined(USBFS_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC4/USBFS.c ****     uint8 i;
 468:Generated_Source\PSoC4/USBFS.c **** 
 469:Generated_Source\PSoC4/USBFS.c ****     for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 173              		.loc 1 469 0
 174 0004 0023     		movs	r3, #0
 175 0006 04E0     		b	.L6
 176              	.LVL12:
 177              	.L7:
 470:Generated_Source\PSoC4/USBFS.c ****     {
 471:Generated_Source\PSoC4/USBFS.c ****         USBFS_hidProtocol[i] = USBFS_PROTOCOL_REPORT;
 178              		.loc 1 471 0 discriminator 3
 179 0008 0121     		movs	r1, #1
 180 000a 234A     		ldr	r2, .L13
 181 000c D154     		strb	r1, [r2, r3]
 469:Generated_Source\PSoC4/USBFS.c ****     {
 182              		.loc 1 469 0 discriminator 3
 183 000e 0133     		adds	r3, r3, #1
 184              	.LVL13:
 185 0010 DBB2     		uxtb	r3, r3
 186              	.LVL14:
 187              	.L6:
 469:Generated_Source\PSoC4/USBFS.c ****     {
 188              		.loc 1 469 0 is_stmt 0 discriminator 1
 189 0012 002B     		cmp	r3, #0
 190 0014 F8D0     		beq	.L7
 472:Generated_Source\PSoC4/USBFS.c ****     }
 473:Generated_Source\PSoC4/USBFS.c **** #endif /* USBFS_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC4/USBFS.c **** 
 475:Generated_Source\PSoC4/USBFS.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC4/USBFS.c ****     USBFS_device = device;
 191              		.loc 1 476 0 is_stmt 1
 192 0016 214B     		ldr	r3, .L13+4
 193              	.LVL15:
 194 0018 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC4/USBFS.c **** 
 478:Generated_Source\PSoC4/USBFS.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC4/USBFS.c ****     USBFS_transferState   = USBFS_TRANS_STATE_IDLE;
 195              		.loc 1 479 0
 196 001a 0023     		movs	r3, #0
 197 001c 204A     		ldr	r2, .L13+8
 198 001e 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC4/USBFS.c ****     USBFS_configurationChanged = 0u;
 199              		.loc 1 480 0
 200 0020 204A     		ldr	r2, .L13+12
 201 0022 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC4/USBFS.c ****     USBFS_configuration   = 0u;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 13


 202              		.loc 1 481 0
 203 0024 204A     		ldr	r2, .L13+16
 204 0026 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC4/USBFS.c ****     USBFS_interfaceNumber = 0u;
 205              		.loc 1 482 0
 206 0028 204A     		ldr	r2, .L13+20
 207 002a 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC4/USBFS.c ****     USBFS_deviceAddress   = 0u;
 208              		.loc 1 483 0
 209 002c 204A     		ldr	r2, .L13+24
 210 002e 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC4/USBFS.c ****     USBFS_deviceStatus    = 0u;
 211              		.loc 1 484 0
 212 0030 204A     		ldr	r2, .L13+28
 213 0032 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC4/USBFS.c ****     USBFS_lastPacketSize  = 0u;
 214              		.loc 1 485 0
 215 0034 204A     		ldr	r2, .L13+32
 216 0036 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC4/USBFS.c **** 
 487:Generated_Source\PSoC4/USBFS.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC4/USBFS.c ****     CyIntEnable(USBFS_INTR_HI_VECT_NUM);
 217              		.loc 1 489 0
 218 0038 1E20     		movs	r0, #30
 219              	.LVL16:
 220 003a FFF7FEFF 		bl	CyIntEnable
 221              	.LVL17:
 490:Generated_Source\PSoC4/USBFS.c ****     CyIntEnable(USBFS_INTR_MED_VECT_NUM);
 222              		.loc 1 490 0
 223 003e 0020     		movs	r0, #0
 224 0040 FFF7FEFF 		bl	CyIntEnable
 225              	.LVL18:
 491:Generated_Source\PSoC4/USBFS.c ****     CyIntEnable(USBFS_INTR_LO_VECT_NUM);
 226              		.loc 1 491 0
 227 0044 1F20     		movs	r0, #31
 228 0046 FFF7FEFF 		bl	CyIntEnable
 229              	.LVL19:
 492:Generated_Source\PSoC4/USBFS.c **** #else
 493:Generated_Source\PSoC4/USBFS.c ****     CyIntEnable(USBFS_BUS_RESET_VECT_NUM);
 494:Generated_Source\PSoC4/USBFS.c ****     CyIntEnable(USBFS_EP_0_VECT_NUM);
 495:Generated_Source\PSoC4/USBFS.c **** 
 496:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_SOF_VECT_NUM);
 498:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC4/USBFS.c **** 
 500:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_EP_1_VECT_NUM);
 502:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC4/USBFS.c **** 
 504:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_EP_2_VECT_NUM);
 506:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC4/USBFS.c **** 
 508:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_EP_3_VECT_NUM);
 510:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 14


 511:Generated_Source\PSoC4/USBFS.c **** 
 512:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_EP_4_VECT_NUM);
 514:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC4/USBFS.c **** 
 516:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_EP_5_VECT_NUM);
 518:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC4/USBFS.c **** 
 520:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_EP_6_VECT_NUM);
 522:Generated_Source\PSoC4/USBFS.c ****     #endif /* USBFS_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC4/USBFS.c **** 
 524:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_EP_7_VECT_NUM);
 526:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC4/USBFS.c **** 
 528:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_EP_8_VECT_NUM);
 530:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC4/USBFS.c **** 
 533:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC4/USBFS.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC4/USBFS.c ****     USBFS_ARB_INT_EN_REG = USBFS_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC4/USBFS.c **** 
 537:Generated_Source\PSoC4/USBFS.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_ARB_VECT_NUM);
 539:Generated_Source\PSoC4/USBFS.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC4/USBFS.c **** #endif   /* (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC4/USBFS.c **** 
 542:Generated_Source\PSoC4/USBFS.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC4/USBFS.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC4/USBFS.c ****     USBFS_ARB_CFG_REG = USBFS_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC4/USBFS.c **** 
 547:Generated_Source\PSoC4/USBFS.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC4/USBFS.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC4/USBFS.c ****         CyDmaEnable();
 550:Generated_Source\PSoC4/USBFS.c **** 
 551:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC4/USBFS.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC4/USBFS.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBFS_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC4/USBFS.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC4/USBFS.c **** 
 557:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC4/USBFS.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC4/USBFS.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC4/USBFS.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC4/USBFS.c ****         #else
 562:Generated_Source\PSoC4/USBFS.c ****             #if (USBFS_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC4/USBFS.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC4/USBFS.c ****                 USBFS_EP_DMA_Done_isr_StartEx(&USBFS_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC4/USBFS.c ****                 USBFS_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC4/USBFS.c ****                 USBFS_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC4/USBFS.c ****             #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 15


 568:Generated_Source\PSoC4/USBFS.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC4/USBFS.c **** 
 572:Generated_Source\PSoC4/USBFS.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC4/USBFS.c ****     switch(mode)
 230              		.loc 1 573 0
 231 004a 002C     		cmp	r4, #0
 232 004c 02D0     		beq	.L9
 233 004e 012C     		cmp	r4, #1
 234 0050 06D0     		beq	.L10
 235 0052 0BE0     		b	.L12
 236              	.L9:
 574:Generated_Source\PSoC4/USBFS.c ****     {
 575:Generated_Source\PSoC4/USBFS.c ****     case USBFS_3V_OPERATION:
 576:Generated_Source\PSoC4/USBFS.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC4/USBFS.c ****         USBFS_CR1_REG &= (uint32) ~USBFS_CR1_REG_ENABLE;
 237              		.loc 1 577 0
 238 0054 194A     		ldr	r2, .L13+36
 239 0056 1368     		ldr	r3, [r2]
 240 0058 0121     		movs	r1, #1
 241 005a 8B43     		bics	r3, r1
 242 005c 1360     		str	r3, [r2]
 578:Generated_Source\PSoC4/USBFS.c ****         break;
 243              		.loc 1 578 0
 244 005e 0AE0     		b	.L11
 245              	.L10:
 579:Generated_Source\PSoC4/USBFS.c **** 
 580:Generated_Source\PSoC4/USBFS.c ****     case USBFS_5V_OPERATION:
 581:Generated_Source\PSoC4/USBFS.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC4/USBFS.c ****         USBFS_CR1_REG |= (uint32)  USBFS_CR1_REG_ENABLE;
 246              		.loc 1 582 0
 247 0060 164A     		ldr	r2, .L13+36
 248 0062 1168     		ldr	r1, [r2]
 249 0064 0123     		movs	r3, #1
 250 0066 0B43     		orrs	r3, r1
 251 0068 1360     		str	r3, [r2]
 583:Generated_Source\PSoC4/USBFS.c ****         break;
 252              		.loc 1 583 0
 253 006a 04E0     		b	.L11
 254              	.L12:
 584:Generated_Source\PSoC4/USBFS.c **** 
 585:Generated_Source\PSoC4/USBFS.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_VDDD_MV < USBFS_3500MV)
 587:Generated_Source\PSoC4/USBFS.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC4/USBFS.c ****         USBFS_CR1_REG &= (uint32) ~USBFS_CR1_REG_ENABLE;
 589:Generated_Source\PSoC4/USBFS.c ****     #else
 590:Generated_Source\PSoC4/USBFS.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC4/USBFS.c ****         USBFS_CR1_REG |= (uint32)  USBFS_CR1_REG_ENABLE;
 255              		.loc 1 591 0
 256 006c 134A     		ldr	r2, .L13+36
 257 006e 1168     		ldr	r1, [r2]
 258 0070 0123     		movs	r3, #1
 259 0072 0B43     		orrs	r3, r1
 260 0074 1360     		str	r3, [r2]
 261              	.L11:
 592:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_VDDD_MV < USBFS_3500MV) */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 16


 593:Generated_Source\PSoC4/USBFS.c ****         break;
 594:Generated_Source\PSoC4/USBFS.c ****     }
 595:Generated_Source\PSoC4/USBFS.c **** 
 596:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC4/USBFS.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC4/USBFS.c ****     USBFS_CR1_REG &= (uint32) ~USBFS_CR1_BUS_ACTIVITY;
 262              		.loc 1 598 0
 263 0076 1149     		ldr	r1, .L13+36
 264 0078 0B68     		ldr	r3, [r1]
 265 007a 0422     		movs	r2, #4
 266 007c 9343     		bics	r3, r2
 267 007e 0B60     		str	r3, [r1]
 599:Generated_Source\PSoC4/USBFS.c **** 
 600:Generated_Source\PSoC4/USBFS.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC4/USBFS.c ****     USBFS_EP0_CNT_REG = USBFS_CLEAR_REG;
 268              		.loc 1 601 0
 269 0080 0021     		movs	r1, #0
 270 0082 0F4B     		ldr	r3, .L13+40
 271 0084 1960     		str	r1, [r3]
 602:Generated_Source\PSoC4/USBFS.c **** 
 603:Generated_Source\PSoC4/USBFS.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC4/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_NAK_IN_OUT;
 272              		.loc 1 604 0
 273 0086 0131     		adds	r1, r1, #1
 274 0088 0E4B     		ldr	r3, .L13+44
 275 008a 1960     		str	r1, [r3]
 605:Generated_Source\PSoC4/USBFS.c **** 
 606:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_LPM_ACTIVE)
 607:Generated_Source\PSoC4/USBFS.c ****         if (NULL != USBFS_GetBOSPtr())
 608:Generated_Source\PSoC4/USBFS.c ****         {
 609:Generated_Source\PSoC4/USBFS.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC4/USBFS.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC4/USBFS.c ****             */
 612:Generated_Source\PSoC4/USBFS.c ****             USBFS_LPM_CTRL_REG = (USBFS_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC4/USBFS.c ****                                              USBFS_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC4/USBFS.c ****         }
 615:Generated_Source\PSoC4/USBFS.c ****         else
 616:Generated_Source\PSoC4/USBFS.c ****         {
 617:Generated_Source\PSoC4/USBFS.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC4/USBFS.c ****             USBFS_LPM_CTRL_REG &= (uint32) ~USBFS_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC4/USBFS.c ****         }
 620:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_LPM_ACTIVE) */
 621:Generated_Source\PSoC4/USBFS.c **** 
 622:Generated_Source\PSoC4/USBFS.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC4/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 276              		.loc 1 623 0
 277 008c 7F31     		adds	r1, r1, #127
 278 008e 0E4B     		ldr	r3, .L13+48
 279 0090 1960     		str	r1, [r3]
 624:Generated_Source\PSoC4/USBFS.c **** 
 625:Generated_Source\PSoC4/USBFS.c **** #else
 626:Generated_Source\PSoC4/USBFS.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC4/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_STALL_IN_OUT;
 628:Generated_Source\PSoC4/USBFS.c **** 
 629:Generated_Source\PSoC4/USBFS.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC4/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 631:Generated_Source\PSoC4/USBFS.c ****     CyDelayCycles(USBFS_WAIT_CR0_REG_STABILITY);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 17


 632:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC4/USBFS.c **** 
 634:Generated_Source\PSoC4/USBFS.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC4/USBFS.c ****     USBFS_USBIO_CR1_REG = USBFS_USBIO_CR1_USBPUEN;
 280              		.loc 1 635 0
 281 0092 0E4B     		ldr	r3, .L13+52
 282 0094 1A60     		str	r2, [r3]
 636:Generated_Source\PSoC4/USBFS.c **** }
 283              		.loc 1 636 0
 284              		@ sp needed
 285 0096 10BD     		pop	{r4, pc}
 286              	.L14:
 287              		.align	2
 288              	.L13:
 289 0098 00000000 		.word	USBFS_hidProtocol
 290 009c 00000000 		.word	USBFS_device
 291 00a0 00000000 		.word	USBFS_transferState
 292 00a4 00000000 		.word	USBFS_configurationChanged
 293 00a8 00000000 		.word	USBFS_configuration
 294 00ac 00000000 		.word	USBFS_interfaceNumber
 295 00b0 00000000 		.word	USBFS_deviceAddress
 296 00b4 00000000 		.word	USBFS_deviceStatus
 297 00b8 00000000 		.word	USBFS_lastPacketSize
 298 00bc 24002C40 		.word	1076625444
 299 00c0 A4002C40 		.word	1076625572
 300 00c4 A0002C40 		.word	1076625568
 301 00c8 20002C40 		.word	1076625440
 302 00cc 48002C40 		.word	1076625480
 303              		.cfi_endproc
 304              	.LFE3:
 305              		.size	USBFS_InitComponent, .-USBFS_InitComponent
 306              		.section	.text.USBFS_Start,"ax",%progbits
 307              		.align	2
 308              		.global	USBFS_Start
 309              		.code	16
 310              		.thumb_func
 311              		.type	USBFS_Start, %function
 312              	USBFS_Start:
 313              	.LFB1:
 187:Generated_Source\PSoC4/USBFS.c ****     if (0u == USBFS_initVar)
 314              		.loc 1 187 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              	.LVL20:
 319 0000 70B5     		push	{r4, r5, r6, lr}
 320              		.cfi_def_cfa_offset 16
 321              		.cfi_offset 4, -16
 322              		.cfi_offset 5, -12
 323              		.cfi_offset 6, -8
 324              		.cfi_offset 14, -4
 325 0002 0400     		movs	r4, r0
 326 0004 0D00     		movs	r5, r1
 188:Generated_Source\PSoC4/USBFS.c ****     {
 327              		.loc 1 188 0
 328 0006 074B     		ldr	r3, .L17
 329 0008 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 18


 330 000a 002B     		cmp	r3, #0
 331 000c 04D1     		bne	.L16
 190:Generated_Source\PSoC4/USBFS.c ****         USBFS_initVar = 1u;
 332              		.loc 1 190 0
 333 000e FFF7FEFF 		bl	USBFS_Init
 334              	.LVL21:
 191:Generated_Source\PSoC4/USBFS.c ****     }
 335              		.loc 1 191 0
 336 0012 0122     		movs	r2, #1
 337 0014 034B     		ldr	r3, .L17
 338 0016 1A70     		strb	r2, [r3]
 339              	.L16:
 194:Generated_Source\PSoC4/USBFS.c **** }
 340              		.loc 1 194 0
 341 0018 2900     		movs	r1, r5
 342 001a 2000     		movs	r0, r4
 343 001c FFF7FEFF 		bl	USBFS_InitComponent
 344              	.LVL22:
 195:Generated_Source\PSoC4/USBFS.c **** 
 345              		.loc 1 195 0
 346              		@ sp needed
 347 0020 70BD     		pop	{r4, r5, r6, pc}
 348              	.L18:
 349 0022 C046     		.align	2
 350              	.L17:
 351 0024 00000000 		.word	.LANCHOR0
 352              		.cfi_endproc
 353              	.LFE1:
 354              		.size	USBFS_Start, .-USBFS_Start
 355              		.section	.text.USBFS_ReInitComponent,"ax",%progbits
 356              		.align	2
 357              		.global	USBFS_ReInitComponent
 358              		.code	16
 359              		.thumb_func
 360              		.type	USBFS_ReInitComponent, %function
 361              	USBFS_ReInitComponent:
 362              	.LFB4:
 637:Generated_Source\PSoC4/USBFS.c **** 
 638:Generated_Source\PSoC4/USBFS.c **** 
 639:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 640:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_ReInitComponent
 641:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 642:Generated_Source\PSoC4/USBFS.c **** *
 643:Generated_Source\PSoC4/USBFS.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC4/USBFS.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC4/USBFS.c **** *
 646:Generated_Source\PSoC4/USBFS.c **** * \globalvars
 647:Generated_Source\PSoC4/USBFS.c **** *   USBFS_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC4/USBFS.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC4/USBFS.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC4/USBFS.c **** *       in the Device Number field.
 651:Generated_Source\PSoC4/USBFS.c **** *   USBFS_transferState - This variable is used by the communication
 652:Generated_Source\PSoC4/USBFS.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC4/USBFS.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC4/USBFS.c **** *   USBFS_configuration - Contains the current configuration number
 655:Generated_Source\PSoC4/USBFS.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC4/USBFS.c **** *       Initialized to zero in this API.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 19


 657:Generated_Source\PSoC4/USBFS.c **** *   USBFS_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC4/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC4/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC4/USBFS.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC4/USBFS.c **** *   USBFS_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC4/USBFS.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC4/USBFS.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC4/USBFS.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC4/USBFS.c **** *   USBFS_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC4/USBFS.c **** *
 667:Generated_Source\PSoC4/USBFS.c **** * \reentrant
 668:Generated_Source\PSoC4/USBFS.c **** *  No.
 669:Generated_Source\PSoC4/USBFS.c **** *
 670:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 671:Generated_Source\PSoC4/USBFS.c **** void USBFS_ReInitComponent(void) 
 672:Generated_Source\PSoC4/USBFS.c **** {
 363              		.loc 1 672 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367              		@ link register save eliminated.
 368              	.LVL23:
 673:Generated_Source\PSoC4/USBFS.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC4/USBFS.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC4/USBFS.c ****     */
 676:Generated_Source\PSoC4/USBFS.c **** #if defined(USBFS_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC4/USBFS.c ****     uint8 i;
 678:Generated_Source\PSoC4/USBFS.c **** 
 679:Generated_Source\PSoC4/USBFS.c ****     for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 369              		.loc 1 679 0
 370 0000 0023     		movs	r3, #0
 371 0002 04E0     		b	.L20
 372              	.LVL24:
 373              	.L21:
 680:Generated_Source\PSoC4/USBFS.c ****     {
 681:Generated_Source\PSoC4/USBFS.c ****         USBFS_hidProtocol[i] = USBFS_PROTOCOL_REPORT;
 374              		.loc 1 681 0 discriminator 3
 375 0004 0121     		movs	r1, #1
 376 0006 0E4A     		ldr	r2, .L22
 377 0008 D154     		strb	r1, [r2, r3]
 679:Generated_Source\PSoC4/USBFS.c ****     {
 378              		.loc 1 679 0 discriminator 3
 379 000a 0133     		adds	r3, r3, #1
 380              	.LVL25:
 381 000c DBB2     		uxtb	r3, r3
 382              	.LVL26:
 383              	.L20:
 679:Generated_Source\PSoC4/USBFS.c ****     {
 384              		.loc 1 679 0 is_stmt 0 discriminator 1
 385 000e 002B     		cmp	r3, #0
 386 0010 F8D0     		beq	.L21
 682:Generated_Source\PSoC4/USBFS.c ****     }
 683:Generated_Source\PSoC4/USBFS.c **** #endif /* USBFS_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC4/USBFS.c **** 
 685:Generated_Source\PSoC4/USBFS.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC4/USBFS.c ****     USBFS_transferState   = USBFS_TRANS_STATE_IDLE;
 387              		.loc 1 686 0 is_stmt 1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 20


 388 0012 0023     		movs	r3, #0
 389              	.LVL27:
 390 0014 0B4A     		ldr	r2, .L22+4
 391 0016 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC4/USBFS.c ****     USBFS_configurationChanged = 0u;
 392              		.loc 1 687 0
 393 0018 0B4A     		ldr	r2, .L22+8
 394 001a 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC4/USBFS.c ****     USBFS_configuration   = 0u;
 395              		.loc 1 688 0
 396 001c 0B4A     		ldr	r2, .L22+12
 397 001e 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC4/USBFS.c ****     USBFS_interfaceNumber = 0u;
 398              		.loc 1 689 0
 399 0020 0B4A     		ldr	r2, .L22+16
 400 0022 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC4/USBFS.c ****     USBFS_deviceAddress   = 0u;
 401              		.loc 1 690 0
 402 0024 0B4A     		ldr	r2, .L22+20
 403 0026 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC4/USBFS.c ****     USBFS_deviceStatus    = 0u;
 404              		.loc 1 691 0
 405 0028 0B4A     		ldr	r2, .L22+24
 406 002a 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC4/USBFS.c ****     USBFS_lastPacketSize  = 0u;
 407              		.loc 1 692 0
 408 002c 0B4A     		ldr	r2, .L22+28
 409 002e 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC4/USBFS.c **** 
 694:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC4/USBFS.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC4/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_NAK_IN_OUT;
 410              		.loc 1 696 0
 411 0030 0122     		movs	r2, #1
 412 0032 0B4B     		ldr	r3, .L22+32
 413 0034 1A60     		str	r2, [r3]
 697:Generated_Source\PSoC4/USBFS.c **** #else
 698:Generated_Source\PSoC4/USBFS.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC4/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_STALL_IN_OUT;
 700:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC4/USBFS.c **** 
 702:Generated_Source\PSoC4/USBFS.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC4/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 414              		.loc 1 703 0
 415 0036 7F32     		adds	r2, r2, #127
 416 0038 0A4B     		ldr	r3, .L22+36
 417 003a 1A60     		str	r2, [r3]
 704:Generated_Source\PSoC4/USBFS.c **** }
 418              		.loc 1 704 0
 419              		@ sp needed
 420 003c 7047     		bx	lr
 421              	.L23:
 422 003e C046     		.align	2
 423              	.L22:
 424 0040 00000000 		.word	USBFS_hidProtocol
 425 0044 00000000 		.word	USBFS_transferState
 426 0048 00000000 		.word	USBFS_configurationChanged
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 21


 427 004c 00000000 		.word	USBFS_configuration
 428 0050 00000000 		.word	USBFS_interfaceNumber
 429 0054 00000000 		.word	USBFS_deviceAddress
 430 0058 00000000 		.word	USBFS_deviceStatus
 431 005c 00000000 		.word	USBFS_lastPacketSize
 432 0060 A0002C40 		.word	1076625568
 433 0064 20002C40 		.word	1076625440
 434              		.cfi_endproc
 435              	.LFE4:
 436              		.size	USBFS_ReInitComponent, .-USBFS_ReInitComponent
 437              		.section	.text.USBFS_Stop,"ax",%progbits
 438              		.align	2
 439              		.global	USBFS_Stop
 440              		.code	16
 441              		.thumb_func
 442              		.type	USBFS_Stop, %function
 443              	USBFS_Stop:
 444              	.LFB5:
 705:Generated_Source\PSoC4/USBFS.c **** 
 706:Generated_Source\PSoC4/USBFS.c **** 
 707:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 708:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_Stop
 709:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 710:Generated_Source\PSoC4/USBFS.c **** *
 711:Generated_Source\PSoC4/USBFS.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC4/USBFS.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC4/USBFS.c **** *
 714:Generated_Source\PSoC4/USBFS.c **** * \globalvars
 715:Generated_Source\PSoC4/USBFS.c **** *   \ref USBFS_configuration
 716:Generated_Source\PSoC4/USBFS.c **** *
 717:Generated_Source\PSoC4/USBFS.c **** *   USBFS_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC4/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC4/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC4/USBFS.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC4/USBFS.c **** *
 722:Generated_Source\PSoC4/USBFS.c **** *   \ref USBFS_deviceStatus
 723:Generated_Source\PSoC4/USBFS.c **** *
 724:Generated_Source\PSoC4/USBFS.c **** *   \ref USBFS_configurationChanged
 725:Generated_Source\PSoC4/USBFS.c **** *
 726:Generated_Source\PSoC4/USBFS.c **** *   USBFS_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC4/USBFS.c **** *
 728:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 729:Generated_Source\PSoC4/USBFS.c **** void USBFS_Stop(void) 
 730:Generated_Source\PSoC4/USBFS.c **** {
 445              		.loc 1 730 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449 0000 10B5     		push	{r4, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
 731:Generated_Source\PSoC4/USBFS.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC4/USBFS.c **** 
 733:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC4/USBFS.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC4/USBFS.c ****     USBFS_Stop_DMA(USBFS_MAX_EP);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 22


 736:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC4/USBFS.c **** 
 738:Generated_Source\PSoC4/USBFS.c ****     enableInterrupts = CyEnterCriticalSection();
 453              		.loc 1 738 0
 454 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 455              	.LVL28:
 739:Generated_Source\PSoC4/USBFS.c **** 
 740:Generated_Source\PSoC4/USBFS.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC4/USBFS.c ****     USBFS_CR0_REG &= (uint32) ~USBFS_CR0_ENABLE;
 456              		.loc 1 741 0
 457 0006 144A     		ldr	r2, .L25
 458 0008 1368     		ldr	r3, [r2]
 459 000a 8021     		movs	r1, #128
 460 000c 8B43     		bics	r3, r1
 461 000e 1360     		str	r3, [r2]
 742:Generated_Source\PSoC4/USBFS.c **** 
 743:Generated_Source\PSoC4/USBFS.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC4/USBFS.c ****     USBFS_USBIO_CR1_REG &= (uint32) ~ USBFS_USBIO_CR1_USBPUEN;
 462              		.loc 1 744 0
 463 0010 124A     		ldr	r2, .L25+4
 464 0012 1368     		ldr	r3, [r2]
 465 0014 7C39     		subs	r1, r1, #124
 466 0016 8B43     		bics	r3, r1
 467 0018 1360     		str	r3, [r2]
 745:Generated_Source\PSoC4/USBFS.c **** 
 746:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC4/USBFS.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC4/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_ENABLE;
 468              		.loc 1 748 0
 469 001a 114A     		ldr	r2, .L25+8
 470 001c 1368     		ldr	r3, [r2]
 471 001e 5B00     		lsls	r3, r3, #1
 472 0020 5B08     		lsrs	r3, r3, #1
 473 0022 1360     		str	r3, [r2]
 749:Generated_Source\PSoC4/USBFS.c **** #else
 750:Generated_Source\PSoC4/USBFS.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC4/USBFS.c ****     USBFS_PM_ACT_CFG_REG  &= (uint8) ~USBFS_PM_ACT_EN_FSUSB;
 752:Generated_Source\PSoC4/USBFS.c ****     USBFS_PM_STBY_CFG_REG &= (uint8) ~USBFS_PM_STBY_EN_FSUSB;
 753:Generated_Source\PSoC4/USBFS.c **** 
 754:Generated_Source\PSoC4/USBFS.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC4/USBFS.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC4/USBFS.c ****     USBFS_DM_INP_DIS_REG |= (uint8) USBFS_DM_MASK;
 757:Generated_Source\PSoC4/USBFS.c ****     USBFS_DP_INP_DIS_REG |= (uint8) USBFS_DP_MASK;
 758:Generated_Source\PSoC4/USBFS.c **** 
 759:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC4/USBFS.c **** 
 761:Generated_Source\PSoC4/USBFS.c ****     CyExitCriticalSection(enableInterrupts);
 474              		.loc 1 761 0
 475 0024 FFF7FEFF 		bl	CyExitCriticalSection
 476              	.LVL29:
 762:Generated_Source\PSoC4/USBFS.c **** 
 763:Generated_Source\PSoC4/USBFS.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC4/USBFS.c ****     CyIntDisable(USBFS_INTR_HI_VECT_NUM);
 477              		.loc 1 765 0
 478 0028 1E20     		movs	r0, #30
 479 002a FFF7FEFF 		bl	CyIntDisable
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 23


 480              	.LVL30:
 766:Generated_Source\PSoC4/USBFS.c ****     CyIntDisable(USBFS_INTR_LO_VECT_NUM);
 481              		.loc 1 766 0
 482 002e 1F20     		movs	r0, #31
 483 0030 FFF7FEFF 		bl	CyIntDisable
 484              	.LVL31:
 767:Generated_Source\PSoC4/USBFS.c ****     CyIntDisable(USBFS_INTR_MED_VECT_NUM);
 485              		.loc 1 767 0
 486 0034 0020     		movs	r0, #0
 487 0036 FFF7FEFF 		bl	CyIntDisable
 488              	.LVL32:
 768:Generated_Source\PSoC4/USBFS.c **** #else
 769:Generated_Source\PSoC4/USBFS.c **** 
 770:Generated_Source\PSoC4/USBFS.c ****     CyIntDisable(USBFS_BUS_RESET_VECT_NUM);
 771:Generated_Source\PSoC4/USBFS.c ****     CyIntDisable(USBFS_EP_0_VECT_NUM);
 772:Generated_Source\PSoC4/USBFS.c **** 
 773:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC4/USBFS.c ****         CyIntDisable(USBFS_SOF_VECT_NUM);
 775:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC4/USBFS.c **** 
 777:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC4/USBFS.c ****         CyIntDisable(USBFS_EP_1_VECT_NUM);
 779:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC4/USBFS.c **** 
 781:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC4/USBFS.c ****         CyIntDisable(USBFS_EP_2_VECT_NUM);
 783:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC4/USBFS.c **** 
 785:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC4/USBFS.c ****         CyIntDisable(USBFS_EP_3_VECT_NUM);
 787:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC4/USBFS.c **** 
 789:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC4/USBFS.c ****         CyIntDisable(USBFS_EP_4_VECT_NUM);
 791:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC4/USBFS.c **** 
 793:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC4/USBFS.c ****         CyIntDisable(USBFS_EP_5_VECT_NUM);
 795:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC4/USBFS.c **** 
 797:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC4/USBFS.c ****         CyIntDisable(USBFS_EP_6_VECT_NUM);
 799:Generated_Source\PSoC4/USBFS.c ****     #endif /* USBFS_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC4/USBFS.c **** 
 801:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC4/USBFS.c ****         CyIntDisable(USBFS_EP_7_VECT_NUM);
 803:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC4/USBFS.c **** 
 805:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC4/USBFS.c ****         CyIntDisable(USBFS_EP_8_VECT_NUM);
 807:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC4/USBFS.c **** 
 809:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC4/USBFS.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC4/USBFS.c ****         (void) USBFS_Dp_ClearInterrupt();
 812:Generated_Source\PSoC4/USBFS.c ****         CyIntClearPending(USBFS_DP_INTC_VECT_NUM);
 813:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DP_ISR_ACTIVE). */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 24


 814:Generated_Source\PSoC4/USBFS.c **** 
 815:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC4/USBFS.c **** 
 817:Generated_Source\PSoC4/USBFS.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC4/USBFS.c ****     USBFS_configurationChanged = 0u;
 489              		.loc 1 818 0
 490 003a 0023     		movs	r3, #0
 491 003c 094A     		ldr	r2, .L25+12
 492 003e 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC4/USBFS.c ****     USBFS_configuration   = 0u;
 493              		.loc 1 819 0
 494 0040 094A     		ldr	r2, .L25+16
 495 0042 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC4/USBFS.c ****     USBFS_interfaceNumber = 0u;
 496              		.loc 1 820 0
 497 0044 094A     		ldr	r2, .L25+20
 498 0046 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC4/USBFS.c ****     USBFS_deviceAddress   = 0u;
 499              		.loc 1 821 0
 500 0048 094A     		ldr	r2, .L25+24
 501 004a 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC4/USBFS.c ****     USBFS_deviceStatus    = 0u;
 502              		.loc 1 822 0
 503 004c 094A     		ldr	r2, .L25+28
 504 004e 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC4/USBFS.c **** 
 824:Generated_Source\PSoC4/USBFS.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC4/USBFS.c ****     USBFS_initVar = 0u;
 505              		.loc 1 825 0
 506 0050 094A     		ldr	r2, .L25+32
 507 0052 1370     		strb	r3, [r2]
 826:Generated_Source\PSoC4/USBFS.c **** }
 508              		.loc 1 826 0
 509              		@ sp needed
 510 0054 10BD     		pop	{r4, pc}
 511              	.L26:
 512 0056 C046     		.align	2
 513              	.L25:
 514 0058 20002C40 		.word	1076625440
 515 005c 48002C40 		.word	1076625480
 516 0060 00202C40 		.word	1076633600
 517 0064 00000000 		.word	USBFS_configurationChanged
 518 0068 00000000 		.word	USBFS_configuration
 519 006c 00000000 		.word	USBFS_interfaceNumber
 520 0070 00000000 		.word	USBFS_deviceAddress
 521 0074 00000000 		.word	USBFS_deviceStatus
 522 0078 00000000 		.word	.LANCHOR0
 523              		.cfi_endproc
 524              	.LFE5:
 525              		.size	USBFS_Stop, .-USBFS_Stop
 526              		.section	.text.USBFS_CheckActivity,"ax",%progbits
 527              		.align	2
 528              		.global	USBFS_CheckActivity
 529              		.code	16
 530              		.thumb_func
 531              		.type	USBFS_CheckActivity, %function
 532              	USBFS_CheckActivity:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 25


 533              	.LFB6:
 827:Generated_Source\PSoC4/USBFS.c **** 
 828:Generated_Source\PSoC4/USBFS.c **** 
 829:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 830:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_CheckActivity
 831:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 832:Generated_Source\PSoC4/USBFS.c **** *
 833:Generated_Source\PSoC4/USBFS.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC4/USBFS.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC4/USBFS.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC4/USBFS.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC4/USBFS.c **** *  conditions are met.
 838:Generated_Source\PSoC4/USBFS.c **** *
 839:Generated_Source\PSoC4/USBFS.c **** *
 840:Generated_Source\PSoC4/USBFS.c **** * \return
 841:Generated_Source\PSoC4/USBFS.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC4/USBFS.c **** *  Return Value |   Description
 843:Generated_Source\PSoC4/USBFS.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC4/USBFS.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC4/USBFS.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC4/USBFS.c **** *
 847:Generated_Source\PSoC4/USBFS.c **** *
 848:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/USBFS.c **** uint8 USBFS_CheckActivity(void) 
 850:Generated_Source\PSoC4/USBFS.c **** {
 534              		.loc 1 850 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 851:Generated_Source\PSoC4/USBFS.c ****     uint32 cr1Reg = USBFS_CR1_REG;
 539              		.loc 1 851 0
 540 0000 0549     		ldr	r1, .L30
 541 0002 0B68     		ldr	r3, [r1]
 542              	.LVL33:
 852:Generated_Source\PSoC4/USBFS.c **** 
 853:Generated_Source\PSoC4/USBFS.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC4/USBFS.c ****     USBFS_CR1_REG = (cr1Reg & (uint32) ~USBFS_CR1_BUS_ACTIVITY);
 543              		.loc 1 854 0
 544 0004 0422     		movs	r2, #4
 545 0006 1800     		movs	r0, r3
 546 0008 9043     		bics	r0, r2
 547 000a 0860     		str	r0, [r1]
 855:Generated_Source\PSoC4/USBFS.c **** 
 856:Generated_Source\PSoC4/USBFS.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC4/USBFS.c ****     return ((0u != (cr1Reg & USBFS_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 548              		.loc 1 857 0
 549 000c 1A42     		tst	r2, r3
 550 000e 01D0     		beq	.L29
 551 0010 0120     		movs	r0, #1
 552 0012 00E0     		b	.L28
 553              	.L29:
 554 0014 0020     		movs	r0, #0
 555              	.L28:
 858:Generated_Source\PSoC4/USBFS.c **** }
 556              		.loc 1 858 0 discriminator 4
 557              		@ sp needed
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 26


 558 0016 7047     		bx	lr
 559              	.L31:
 560              		.align	2
 561              	.L30:
 562 0018 24002C40 		.word	1076625444
 563              		.cfi_endproc
 564              	.LFE6:
 565              		.size	USBFS_CheckActivity, .-USBFS_CheckActivity
 566              		.section	.text.USBFS_GetConfiguration,"ax",%progbits
 567              		.align	2
 568              		.global	USBFS_GetConfiguration
 569              		.code	16
 570              		.thumb_func
 571              		.type	USBFS_GetConfiguration, %function
 572              	USBFS_GetConfiguration:
 573              	.LFB7:
 859:Generated_Source\PSoC4/USBFS.c **** 
 860:Generated_Source\PSoC4/USBFS.c **** 
 861:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 862:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_GetConfiguration
 863:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 864:Generated_Source\PSoC4/USBFS.c **** *
 865:Generated_Source\PSoC4/USBFS.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC4/USBFS.c **** *
 867:Generated_Source\PSoC4/USBFS.c **** * \return
 868:Generated_Source\PSoC4/USBFS.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC4/USBFS.c **** *  is not configured
 870:Generated_Source\PSoC4/USBFS.c **** *
 871:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 872:Generated_Source\PSoC4/USBFS.c **** uint8 USBFS_GetConfiguration(void) 
 873:Generated_Source\PSoC4/USBFS.c **** {
 574              		.loc 1 873 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 874:Generated_Source\PSoC4/USBFS.c ****     return (USBFS_configuration);
 579              		.loc 1 874 0
 580 0000 014B     		ldr	r3, .L33
 581 0002 1878     		ldrb	r0, [r3]
 582 0004 C0B2     		uxtb	r0, r0
 875:Generated_Source\PSoC4/USBFS.c **** }
 583              		.loc 1 875 0
 584              		@ sp needed
 585 0006 7047     		bx	lr
 586              	.L34:
 587              		.align	2
 588              	.L33:
 589 0008 00000000 		.word	USBFS_configuration
 590              		.cfi_endproc
 591              	.LFE7:
 592              		.size	USBFS_GetConfiguration, .-USBFS_GetConfiguration
 593              		.section	.text.USBFS_IsConfigurationChanged,"ax",%progbits
 594              		.align	2
 595              		.global	USBFS_IsConfigurationChanged
 596              		.code	16
 597              		.thumb_func
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 27


 598              		.type	USBFS_IsConfigurationChanged, %function
 599              	USBFS_IsConfigurationChanged:
 600              	.LFB8:
 876:Generated_Source\PSoC4/USBFS.c **** 
 877:Generated_Source\PSoC4/USBFS.c **** 
 878:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 879:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_IsConfigurationChanged
 880:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 881:Generated_Source\PSoC4/USBFS.c **** *
 882:Generated_Source\PSoC4/USBFS.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC4/USBFS.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC4/USBFS.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC4/USBFS.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC4/USBFS.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC4/USBFS.c **** *
 888:Generated_Source\PSoC4/USBFS.c **** * \return
 889:Generated_Source\PSoC4/USBFS.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC4/USBFS.c **** *  returned.
 891:Generated_Source\PSoC4/USBFS.c **** *
 892:Generated_Source\PSoC4/USBFS.c **** * \globalvars
 893:Generated_Source\PSoC4/USBFS.c **** *
 894:Generated_Source\PSoC4/USBFS.c **** *  \ref USBFS_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC4/USBFS.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC4/USBFS.c **** *
 897:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 898:Generated_Source\PSoC4/USBFS.c **** uint8 USBFS_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC4/USBFS.c **** {
 601              		.loc 1 899 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606              	.LVL34:
 900:Generated_Source\PSoC4/USBFS.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC4/USBFS.c **** 
 902:Generated_Source\PSoC4/USBFS.c ****     if (USBFS_configurationChanged != 0u)
 607              		.loc 1 902 0
 608 0000 054B     		ldr	r3, .L38
 609 0002 1B78     		ldrb	r3, [r3]
 610 0004 002B     		cmp	r3, #0
 611 0006 05D0     		beq	.L37
 903:Generated_Source\PSoC4/USBFS.c ****     {
 904:Generated_Source\PSoC4/USBFS.c ****         res = USBFS_configurationChanged;
 612              		.loc 1 904 0
 613 0008 034B     		ldr	r3, .L38
 614 000a 1878     		ldrb	r0, [r3]
 615 000c C0B2     		uxtb	r0, r0
 616              	.LVL35:
 905:Generated_Source\PSoC4/USBFS.c ****         USBFS_configurationChanged = 0u;
 617              		.loc 1 905 0
 618 000e 0022     		movs	r2, #0
 619 0010 1A70     		strb	r2, [r3]
 620 0012 00E0     		b	.L36
 621              	.LVL36:
 622              	.L37:
 900:Generated_Source\PSoC4/USBFS.c ****     uint8 res = 0u;
 623              		.loc 1 900 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 28


 624 0014 0020     		movs	r0, #0
 625              	.LVL37:
 626              	.L36:
 906:Generated_Source\PSoC4/USBFS.c ****     }
 907:Generated_Source\PSoC4/USBFS.c **** 
 908:Generated_Source\PSoC4/USBFS.c ****     return (res);
 909:Generated_Source\PSoC4/USBFS.c **** }
 627              		.loc 1 909 0
 628              		@ sp needed
 629 0016 7047     		bx	lr
 630              	.L39:
 631              		.align	2
 632              	.L38:
 633 0018 00000000 		.word	USBFS_configurationChanged
 634              		.cfi_endproc
 635              	.LFE8:
 636              		.size	USBFS_IsConfigurationChanged, .-USBFS_IsConfigurationChanged
 637              		.section	.text.USBFS_GetInterfaceSetting,"ax",%progbits
 638              		.align	2
 639              		.global	USBFS_GetInterfaceSetting
 640              		.code	16
 641              		.thumb_func
 642              		.type	USBFS_GetInterfaceSetting, %function
 643              	USBFS_GetInterfaceSetting:
 644              	.LFB9:
 910:Generated_Source\PSoC4/USBFS.c **** 
 911:Generated_Source\PSoC4/USBFS.c **** 
 912:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 913:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_GetInterfaceSetting
 914:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 915:Generated_Source\PSoC4/USBFS.c **** *
 916:Generated_Source\PSoC4/USBFS.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC4/USBFS.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC4/USBFS.c **** *  interface.
 919:Generated_Source\PSoC4/USBFS.c **** *
 920:Generated_Source\PSoC4/USBFS.c **** *  \param
 921:Generated_Source\PSoC4/USBFS.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC4/USBFS.c **** *
 923:Generated_Source\PSoC4/USBFS.c **** * \return
 924:Generated_Source\PSoC4/USBFS.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC4/USBFS.c **** *
 926:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 927:Generated_Source\PSoC4/USBFS.c **** uint8  USBFS_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC4/USBFS.c ****                                                     
 929:Generated_Source\PSoC4/USBFS.c **** {
 645              		.loc 1 929 0
 646              		.cfi_startproc
 647              		@ args = 0, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		@ link register save eliminated.
 650              	.LVL38:
 930:Generated_Source\PSoC4/USBFS.c ****     return (USBFS_interfaceSetting[interfaceNumber]);
 651              		.loc 1 930 0
 652 0000 014B     		ldr	r3, .L41
 653 0002 185C     		ldrb	r0, [r3, r0]
 654              	.LVL39:
 655 0004 C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 29


 931:Generated_Source\PSoC4/USBFS.c **** }
 656              		.loc 1 931 0
 657              		@ sp needed
 658 0006 7047     		bx	lr
 659              	.L42:
 660              		.align	2
 661              	.L41:
 662 0008 00000000 		.word	USBFS_interfaceSetting
 663              		.cfi_endproc
 664              	.LFE9:
 665              		.size	USBFS_GetInterfaceSetting, .-USBFS_GetInterfaceSetting
 666              		.section	.text.USBFS_GetEPState,"ax",%progbits
 667              		.align	2
 668              		.global	USBFS_GetEPState
 669              		.code	16
 670              		.thumb_func
 671              		.type	USBFS_GetEPState, %function
 672              	USBFS_GetEPState:
 673              	.LFB10:
 932:Generated_Source\PSoC4/USBFS.c **** 
 933:Generated_Source\PSoC4/USBFS.c **** 
 934:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 935:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_GetEPState
 936:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 937:Generated_Source\PSoC4/USBFS.c **** *
 938:Generated_Source\PSoC4/USBFS.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC4/USBFS.c **** *
 940:Generated_Source\PSoC4/USBFS.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC4/USBFS.c **** *
 942:Generated_Source\PSoC4/USBFS.c **** * \return
 943:Generated_Source\PSoC4/USBFS.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC4/USBFS.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC4/USBFS.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC4/USBFS.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC4/USBFS.c **** *
 948:Generated_Source\PSoC4/USBFS.c **** *  Return Value           | Description
 949:Generated_Source\PSoC4/USBFS.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC4/USBFS.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC4/USBFS.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC4/USBFS.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC4/USBFS.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC4/USBFS.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC4/USBFS.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC4/USBFS.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC4/USBFS.c **** *
 958:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 959:Generated_Source\PSoC4/USBFS.c **** uint8 USBFS_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC4/USBFS.c **** {
 674              		.loc 1 960 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679              	.LVL40:
 961:Generated_Source\PSoC4/USBFS.c ****     return (USBFS_EP[epNumber].apiEpState);
 680              		.loc 1 961 0
 681 0000 4300     		lsls	r3, r0, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 30


 682 0002 1818     		adds	r0, r3, r0
 683              	.LVL41:
 684 0004 8300     		lsls	r3, r0, #2
 685 0006 024A     		ldr	r2, .L44
 686 0008 D318     		adds	r3, r2, r3
 687 000a 5878     		ldrb	r0, [r3, #1]
 688 000c C0B2     		uxtb	r0, r0
 962:Generated_Source\PSoC4/USBFS.c **** }
 689              		.loc 1 962 0
 690              		@ sp needed
 691 000e 7047     		bx	lr
 692              	.L45:
 693              		.align	2
 694              	.L44:
 695 0010 00000000 		.word	USBFS_EP
 696              		.cfi_endproc
 697              	.LFE10:
 698              		.size	USBFS_GetEPState, .-USBFS_GetEPState
 699              		.section	.text.USBFS_GetEPCount,"ax",%progbits
 700              		.align	2
 701              		.global	USBFS_GetEPCount
 702              		.code	16
 703              		.thumb_func
 704              		.type	USBFS_GetEPCount, %function
 705              	USBFS_GetEPCount:
 706              	.LFB11:
 963:Generated_Source\PSoC4/USBFS.c **** 
 964:Generated_Source\PSoC4/USBFS.c **** 
 965:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
 966:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_GetEPCount
 967:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
 968:Generated_Source\PSoC4/USBFS.c **** *
 969:Generated_Source\PSoC4/USBFS.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC4/USBFS.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC4/USBFS.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC4/USBFS.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC4/USBFS.c **** *
 974:Generated_Source\PSoC4/USBFS.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC4/USBFS.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC4/USBFS.c **** *
 977:Generated_Source\PSoC4/USBFS.c **** * \return
 978:Generated_Source\PSoC4/USBFS.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC4/USBFS.c **** *  invalid endpoint.
 980:Generated_Source\PSoC4/USBFS.c **** *
 981:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
 982:Generated_Source\PSoC4/USBFS.c **** uint16 USBFS_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC4/USBFS.c **** {
 707              		.loc 1 983 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712              	.LVL42:
 984:Generated_Source\PSoC4/USBFS.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC4/USBFS.c **** 
 986:Generated_Source\PSoC4/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 713              		.loc 1 986 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 31


 714 0000 431E     		subs	r3, r0, #1
 715 0002 DBB2     		uxtb	r3, r3
 716 0004 072B     		cmp	r3, #7
 717 0006 10D8     		bhi	.L48
 987:Generated_Source\PSoC4/USBFS.c ****     {
 988:Generated_Source\PSoC4/USBFS.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC4/USBFS.c ****         cntr  = ((uint16) USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBFS_EPX_CNT0_MASK;
 718              		.loc 1 989 0
 719 0008 8301     		lsls	r3, r0, #6
 720 000a 094A     		ldr	r2, .L49
 721 000c 9858     		ldr	r0, [r3, r2]
 722              	.LVL43:
 723 000e 80B2     		uxth	r0, r0
 724              	.LVL44:
 990:Generated_Source\PSoC4/USBFS.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 725              		.loc 1 990 0
 726 0010 0002     		lsls	r0, r0, #8
 727              	.LVL45:
 728 0012 F022     		movs	r2, #240
 729 0014 1201     		lsls	r2, r2, #4
 730 0016 1040     		ands	r0, r2
 731 0018 054A     		ldr	r2, .L49
 732 001a 9446     		mov	ip, r2
 733 001c 6344     		add	r3, r3, ip
 734 001e 5B68     		ldr	r3, [r3, #4]
 735 0020 1843     		orrs	r0, r3
 736 0022 80B2     		uxth	r0, r0
 737              	.LVL46:
 991:Generated_Source\PSoC4/USBFS.c ****         cntr -= USBFS_EPX_CNTX_CRC_COUNT;
 738              		.loc 1 991 0
 739 0024 0238     		subs	r0, r0, #2
 740              	.LVL47:
 741 0026 80B2     		uxth	r0, r0
 742              	.LVL48:
 743 0028 00E0     		b	.L47
 744              	.LVL49:
 745              	.L48:
 984:Generated_Source\PSoC4/USBFS.c **** 
 746              		.loc 1 984 0
 747 002a 0020     		movs	r0, #0
 748              	.LVL50:
 749              	.L47:
 992:Generated_Source\PSoC4/USBFS.c ****     }
 993:Generated_Source\PSoC4/USBFS.c **** 
 994:Generated_Source\PSoC4/USBFS.c ****     return (cntr);
 995:Generated_Source\PSoC4/USBFS.c **** }
 750              		.loc 1 995 0
 751              		@ sp needed
 752 002c 7047     		bx	lr
 753              	.L50:
 754 002e C046     		.align	2
 755              	.L49:
 756 0030 F0FF2B40 		.word	1076625392
 757              		.cfi_endproc
 758              	.LFE11:
 759              		.size	USBFS_GetEPCount, .-USBFS_GetEPCount
 760              		.section	.text.USBFS_LoadInEP,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 32


 761              		.align	2
 762              		.global	USBFS_LoadInEP
 763              		.code	16
 764              		.thumb_func
 765              		.type	USBFS_LoadInEP, %function
 766              	USBFS_LoadInEP:
 767              	.LFB12:
 996:Generated_Source\PSoC4/USBFS.c **** 
 997:Generated_Source\PSoC4/USBFS.c **** 
 998:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC4/USBFS.c ****     /*******************************************************************************
1001:Generated_Source\PSoC4/USBFS.c ****     * Function Name: USBFS_InitEpDma
1002:Generated_Source\PSoC4/USBFS.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC4/USBFS.c ****     *
1004:Generated_Source\PSoC4/USBFS.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC4/USBFS.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC4/USBFS.c ****     *
1007:Generated_Source\PSoC4/USBFS.c ****     *******************************************************************************/
1008:Generated_Source\PSoC4/USBFS.c ****     static void USBFS_InitEpDma(void)
1009:Generated_Source\PSoC4/USBFS.c ****     {
1010:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA1_ACTIVE)
1011:Generated_Source\PSoC4/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep1_dma_CHANNEL] = USBFS_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA1_ACTIVE) */
1013:Generated_Source\PSoC4/USBFS.c **** 
1014:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA2_ACTIVE)
1015:Generated_Source\PSoC4/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep2_dma_CHANNEL] = USBFS_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA2_ACTIVE) */
1017:Generated_Source\PSoC4/USBFS.c **** 
1018:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA3_ACTIVE)
1019:Generated_Source\PSoC4/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep3_dma_CHANNEL] = USBFS_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA3_ACTIVE) */
1021:Generated_Source\PSoC4/USBFS.c **** 
1022:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA4_ACTIVE)
1023:Generated_Source\PSoC4/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep4_dma_CHANNEL] = USBFS_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA4_ACTIVE) */
1025:Generated_Source\PSoC4/USBFS.c **** 
1026:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA5_ACTIVE)
1027:Generated_Source\PSoC4/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep5_dma_CHANNEL] = USBFS_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA5_ACTIVE) */
1029:Generated_Source\PSoC4/USBFS.c **** 
1030:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA6_ACTIVE)
1031:Generated_Source\PSoC4/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep6_dma_CHANNEL] = USBFS_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA6_ACTIVE) */
1033:Generated_Source\PSoC4/USBFS.c **** 
1034:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA7_ACTIVE)
1035:Generated_Source\PSoC4/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep7_dma_CHANNEL] = USBFS_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA7_ACTIVE) */
1037:Generated_Source\PSoC4/USBFS.c **** 
1038:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA8_ACTIVE)
1039:Generated_Source\PSoC4/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep8_dma_CHANNEL] = USBFS_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA8_ACTIVE) */
1041:Generated_Source\PSoC4/USBFS.c **** 
1042:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC4/USBFS.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_DMA1_ACTIVE)
1045:Generated_Source\PSoC4/USBFS.c ****             (void) USBFS_ep1_dma_SetInterruptCallback(&USBFS_EP1_DMA_DONE_ISR);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 33


1046:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_DMA1_ACTIVE) */
1047:Generated_Source\PSoC4/USBFS.c **** 
1048:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_DMA2_ACTIVE)
1049:Generated_Source\PSoC4/USBFS.c ****             (void) USBFS_ep2_dma_SetInterruptCallback(&USBFS_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_DMA2_ACTIVE) */
1051:Generated_Source\PSoC4/USBFS.c **** 
1052:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_DMA3_ACTIVE)
1053:Generated_Source\PSoC4/USBFS.c ****             (void) USBFS_ep3_dma_SetInterruptCallback(&USBFS_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_DMA3_ACTIVE) */
1055:Generated_Source\PSoC4/USBFS.c **** 
1056:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_DMA4_ACTIVE)
1057:Generated_Source\PSoC4/USBFS.c ****             (void) USBFS_ep4_dma_SetInterruptCallback(&USBFS_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_DMA4_ACTIVE) */
1059:Generated_Source\PSoC4/USBFS.c **** 
1060:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_DMA5_ACTIVE)
1061:Generated_Source\PSoC4/USBFS.c ****             (void) USBFS_ep5_dma_SetInterruptCallback(&USBFS_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_DMA5_ACTIVE) */
1063:Generated_Source\PSoC4/USBFS.c **** 
1064:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_DMA6_ACTIVE)
1065:Generated_Source\PSoC4/USBFS.c ****             (void) USBFS_ep6_dma_SetInterruptCallback(&USBFS_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_DMA6_ACTIVE) */
1067:Generated_Source\PSoC4/USBFS.c **** 
1068:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_DMA7_ACTIVE)
1069:Generated_Source\PSoC4/USBFS.c ****             (void) USBFS_ep7_dma_SetInterruptCallback(&USBFS_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_DMA7_ACTIVE) */
1071:Generated_Source\PSoC4/USBFS.c **** 
1072:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_DMA8_ACTIVE)
1073:Generated_Source\PSoC4/USBFS.c ****             (void) USBFS_ep8_dma_SetInterruptCallback(&USBFS_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_DMA8_ACTIVE) */
1075:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC4/USBFS.c ****     }
1077:Generated_Source\PSoC4/USBFS.c **** #else
1078:Generated_Source\PSoC4/USBFS.c **** 
1079:Generated_Source\PSoC4/USBFS.c **** 
1080:Generated_Source\PSoC4/USBFS.c ****     /***************************************************************************
1081:Generated_Source\PSoC4/USBFS.c ****     * Function Name: USBFS_InitEP_DMA
1082:Generated_Source\PSoC4/USBFS.c ****     ************************************************************************//**
1083:Generated_Source\PSoC4/USBFS.c ****     *
1084:Generated_Source\PSoC4/USBFS.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC4/USBFS.c ****     *  USBFS_LoadInEP() or USBFS_ReadOutEP() APIs for data
1086:Generated_Source\PSoC4/USBFS.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC4/USBFS.c ****     *  is set to DMA.
1088:Generated_Source\PSoC4/USBFS.c ****     *
1089:Generated_Source\PSoC4/USBFS.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC4/USBFS.c ****     *
1091:Generated_Source\PSoC4/USBFS.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC4/USBFS.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC4/USBFS.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC4/USBFS.c ****     *
1095:Generated_Source\PSoC4/USBFS.c ****     * \reentrant No.
1096:Generated_Source\PSoC4/USBFS.c ****     *
1097:Generated_Source\PSoC4/USBFS.c ****     ***************************************************************************/
1098:Generated_Source\PSoC4/USBFS.c ****     void USBFS_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC4/USBFS.c ****                                                                     
1100:Generated_Source\PSoC4/USBFS.c ****     {
1101:Generated_Source\PSoC4/USBFS.c ****         uint16 src;
1102:Generated_Source\PSoC4/USBFS.c ****         uint16 dst;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 34


1103:Generated_Source\PSoC4/USBFS.c **** 
1104:Generated_Source\PSoC4/USBFS.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC4/USBFS.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC4/USBFS.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC4/USBFS.c ****         pData = pData;
1108:Generated_Source\PSoC4/USBFS.c ****     #else
1109:Generated_Source\PSoC4/USBFS.c ****         if ((USBFS_EP[epNumber].addr & USBFS_DIR_IN) != 0u)
1110:Generated_Source\PSoC4/USBFS.c ****         {
1111:Generated_Source\PSoC4/USBFS.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC4/USBFS.c ****             src = HI16(pData);
1113:Generated_Source\PSoC4/USBFS.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC4/USBFS.c ****         }
1115:Generated_Source\PSoC4/USBFS.c ****         else
1116:Generated_Source\PSoC4/USBFS.c ****         {
1117:Generated_Source\PSoC4/USBFS.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC4/USBFS.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC4/USBFS.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC4/USBFS.c ****         }
1121:Generated_Source\PSoC4/USBFS.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC4/USBFS.c **** 
1123:Generated_Source\PSoC4/USBFS.c ****         switch(epNumber)
1124:Generated_Source\PSoC4/USBFS.c ****         {
1125:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA1_ACTIVE)
1126:Generated_Source\PSoC4/USBFS.c ****         case USBFS_EP1:
1127:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep1_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC4/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1129:Generated_Source\PSoC4/USBFS.c ****             break;
1130:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA1_ACTIVE) */
1131:Generated_Source\PSoC4/USBFS.c **** 
1132:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA2_ACTIVE)
1133:Generated_Source\PSoC4/USBFS.c ****         case USBFS_EP2:
1134:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep2_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC4/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1136:Generated_Source\PSoC4/USBFS.c ****             break;
1137:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA2_ACTIVE) */
1138:Generated_Source\PSoC4/USBFS.c **** 
1139:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA3_ACTIVE)
1140:Generated_Source\PSoC4/USBFS.c ****             case USBFS_EP3:
1141:Generated_Source\PSoC4/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep3_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC4/USBFS.c ****                                                                                         USBFS_DMA_R
1143:Generated_Source\PSoC4/USBFS.c ****             break;
1144:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA3_ACTIVE) */
1145:Generated_Source\PSoC4/USBFS.c **** 
1146:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA4_ACTIVE)
1147:Generated_Source\PSoC4/USBFS.c ****             case USBFS_EP4:
1148:Generated_Source\PSoC4/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep4_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC4/USBFS.c ****                                                                                         USBFS_DMA_R
1150:Generated_Source\PSoC4/USBFS.c ****             break;
1151:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA4_ACTIVE) */
1152:Generated_Source\PSoC4/USBFS.c **** 
1153:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA5_ACTIVE)
1154:Generated_Source\PSoC4/USBFS.c ****             case USBFS_EP5:
1155:Generated_Source\PSoC4/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep5_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC4/USBFS.c ****                                                                                         USBFS_DMA_R
1157:Generated_Source\PSoC4/USBFS.c ****             break;
1158:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA5_ACTIVE) */
1159:Generated_Source\PSoC4/USBFS.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 35


1160:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA6_ACTIVE)
1161:Generated_Source\PSoC4/USBFS.c ****         case USBFS_EP6:
1162:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep6_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC4/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1164:Generated_Source\PSoC4/USBFS.c ****             break;
1165:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA6_ACTIVE) */
1166:Generated_Source\PSoC4/USBFS.c **** 
1167:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA7_ACTIVE)
1168:Generated_Source\PSoC4/USBFS.c ****         case USBFS_EP7:
1169:Generated_Source\PSoC4/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep7_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC4/USBFS.c ****                                                                                         USBFS_DMA_R
1171:Generated_Source\PSoC4/USBFS.c ****             break;
1172:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA7_ACTIVE) */
1173:Generated_Source\PSoC4/USBFS.c **** 
1174:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_DMA8_ACTIVE)
1175:Generated_Source\PSoC4/USBFS.c ****         case USBFS_EP8:
1176:Generated_Source\PSoC4/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep8_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC4/USBFS.c ****                                                                                         USBFS_DMA_R
1178:Generated_Source\PSoC4/USBFS.c ****             break;
1179:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_DMA8_ACTIVE) */
1180:Generated_Source\PSoC4/USBFS.c **** 
1181:Generated_Source\PSoC4/USBFS.c ****         default:
1182:Generated_Source\PSoC4/USBFS.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC4/USBFS.c ****             break;
1184:Generated_Source\PSoC4/USBFS.c ****         }
1185:Generated_Source\PSoC4/USBFS.c **** 
1186:Generated_Source\PSoC4/USBFS.c ****         if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
1187:Generated_Source\PSoC4/USBFS.c ****         {
1188:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC4/USBFS.c **** 
1190:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC4/USBFS.c ****         }
1194:Generated_Source\PSoC4/USBFS.c ****     }
1195:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC4/USBFS.c **** 
1197:Generated_Source\PSoC4/USBFS.c ****     /***************************************************************************
1198:Generated_Source\PSoC4/USBFS.c ****     * Function Name: USBFS_Stop_DMA
1199:Generated_Source\PSoC4/USBFS.c ****     ************************************************************************//**
1200:Generated_Source\PSoC4/USBFS.c ****     *  
1201:Generated_Source\PSoC4/USBFS.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC4/USBFS.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC4/USBFS.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC4/USBFS.c ****     *  to trigger DMA re-configuration when USBFS_LoadInEP() or 
1205:Generated_Source\PSoC4/USBFS.c ****     *  USBFS_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC4/USBFS.c ****     *  
1207:Generated_Source\PSoC4/USBFS.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC4/USBFS.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC4/USBFS.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC4/USBFS.c ****     *  USBFS_MAX_EP argument.
1211:Generated_Source\PSoC4/USBFS.c ****     *
1212:Generated_Source\PSoC4/USBFS.c ****     * \reentrant
1213:Generated_Source\PSoC4/USBFS.c ****     *  No.
1214:Generated_Source\PSoC4/USBFS.c ****     *
1215:Generated_Source\PSoC4/USBFS.c ****     ***************************************************************************/
1216:Generated_Source\PSoC4/USBFS.c ****     void USBFS_Stop_DMA(uint8 epNumber) 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 36


1217:Generated_Source\PSoC4/USBFS.c ****     {
1218:Generated_Source\PSoC4/USBFS.c ****         uint32 i;
1219:Generated_Source\PSoC4/USBFS.c **** 
1220:Generated_Source\PSoC4/USBFS.c ****         i = (epNumber < USBFS_MAX_EP) ? epNumber : USBFS_EP1;
1221:Generated_Source\PSoC4/USBFS.c **** 
1222:Generated_Source\PSoC4/USBFS.c ****         do
1223:Generated_Source\PSoC4/USBFS.c ****         {
1224:Generated_Source\PSoC4/USBFS.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC4/USBFS.c ****             if (0u != USBFS_DmaChan[i])
1226:Generated_Source\PSoC4/USBFS.c ****             {
1227:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaChDisable(USBFS_DmaChan[i]);
1228:Generated_Source\PSoC4/USBFS.c ****             }
1229:Generated_Source\PSoC4/USBFS.c ****         #else
1230:Generated_Source\PSoC4/USBFS.c ****             if(USBFS_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC4/USBFS.c ****             {
1232:Generated_Source\PSoC4/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[i]);
1233:Generated_Source\PSoC4/USBFS.c ****                 CyDmaTdFree(USBFS_DmaTd[i]);
1234:Generated_Source\PSoC4/USBFS.c ****                 USBFS_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC4/USBFS.c ****             }
1236:Generated_Source\PSoC4/USBFS.c **** 
1237:Generated_Source\PSoC4/USBFS.c ****             #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC4/USBFS.c ****                 if(USBFS_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC4/USBFS.c ****                 {
1240:Generated_Source\PSoC4/USBFS.c ****                     CyDmaTdFree(USBFS_DmaNextTd[i]);
1241:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC4/USBFS.c ****                 }
1243:Generated_Source\PSoC4/USBFS.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC4/USBFS.c **** 
1245:Generated_Source\PSoC4/USBFS.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC4/USBFS.c ****             i++;
1247:Generated_Source\PSoC4/USBFS.c ****         }
1248:Generated_Source\PSoC4/USBFS.c ****         while ((i < USBFS_MAX_EP) && (epNumber == USBFS_MAX_EP));
1249:Generated_Source\PSoC4/USBFS.c ****     }
1250:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC4/USBFS.c **** 
1252:Generated_Source\PSoC4/USBFS.c **** 
1253:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC4/USBFS.c ****     /***************************************************************************
1256:Generated_Source\PSoC4/USBFS.c ****     * Function Name: USBFS_LoadNextInEP
1257:Generated_Source\PSoC4/USBFS.c ****     ************************************************************************//**
1258:Generated_Source\PSoC4/USBFS.c ****     *
1259:Generated_Source\PSoC4/USBFS.c ****     * Summary:
1260:Generated_Source\PSoC4/USBFS.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC4/USBFS.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC4/USBFS.c ****     *
1263:Generated_Source\PSoC4/USBFS.c ****     * Parameters:
1264:Generated_Source\PSoC4/USBFS.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC4/USBFS.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC4/USBFS.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC4/USBFS.c ****     *
1268:Generated_Source\PSoC4/USBFS.c ****     ***************************************************************************/
1269:Generated_Source\PSoC4/USBFS.c ****     void USBFS_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC4/USBFS.c ****     {
1271:Generated_Source\PSoC4/USBFS.c ****         reg16 *convert;
1272:Generated_Source\PSoC4/USBFS.c **** 
1273:Generated_Source\PSoC4/USBFS.c ****         if (mode == 0u)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 37


1274:Generated_Source\PSoC4/USBFS.c ****         {
1275:Generated_Source\PSoC4/USBFS.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC4/USBFS.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC4/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC4/USBFS.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC4/USBFS.c ****             CY_SET_REG16(convert, USBFS_inLength[epNumber] - USBFS_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC4/USBFS.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC4/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC4/USBFS.c ****             CY_SET_REG16(convert, LO16((uint32)USBFS_inDataPointer[epNumber] +
1283:Generated_Source\PSoC4/USBFS.c ****                                             USBFS_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC4/USBFS.c ****             USBFS_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC4/USBFS.c ****         }
1286:Generated_Source\PSoC4/USBFS.c ****         else
1287:Generated_Source\PSoC4/USBFS.c ****         {
1288:Generated_Source\PSoC4/USBFS.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC4/USBFS.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC4/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC4/USBFS.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC4/USBFS.c ****             CY_SET_REG16(convert, USBFS_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC4/USBFS.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC4/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC4/USBFS.c ****             CY_SET_REG16(convert,  LO16((uint32)USBFS_inDataPointer[epNumber] +
1296:Generated_Source\PSoC4/USBFS.c ****                                    (USBFS_DMA_BYTES_PER_BURST - USBFS_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC4/USBFS.c ****         }
1298:Generated_Source\PSoC4/USBFS.c **** 
1299:Generated_Source\PSoC4/USBFS.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC4/USBFS.c ****         CY_DMA_CH_STRUCT_PTR[USBFS_DmaChan[epNumber]].basic_status[1u] = USBFS_DmaTd[epNumber];
1301:Generated_Source\PSoC4/USBFS.c ****     }
1302:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC4/USBFS.c **** 
1305:Generated_Source\PSoC4/USBFS.c **** 
1306:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
1307:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_LoadInEP
1308:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
1309:Generated_Source\PSoC4/USBFS.c **** *
1310:Generated_Source\PSoC4/USBFS.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC4/USBFS.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC4/USBFS.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC4/USBFS.c **** *
1314:Generated_Source\PSoC4/USBFS.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC4/USBFS.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC4/USBFS.c **** *  data transfer.
1317:Generated_Source\PSoC4/USBFS.c **** *
1318:Generated_Source\PSoC4/USBFS.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC4/USBFS.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC4/USBFS.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC4/USBFS.c **** *
1322:Generated_Source\PSoC4/USBFS.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC4/USBFS.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC4/USBFS.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC4/USBFS.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC4/USBFS.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC4/USBFS.c **** *
1328:Generated_Source\PSoC4/USBFS.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC4/USBFS.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC4/USBFS.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 38


1331:Generated_Source\PSoC4/USBFS.c **** *          is loaded.
1332:Generated_Source\PSoC4/USBFS.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC4/USBFS.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC4/USBFS.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC4/USBFS.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC4/USBFS.c **** *
1337:Generated_Source\PSoC4/USBFS.c **** *
1338:Generated_Source\PSoC4/USBFS.c **** * \reentrant
1339:Generated_Source\PSoC4/USBFS.c **** *  No.
1340:Generated_Source\PSoC4/USBFS.c **** *
1341:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/USBFS.c **** void USBFS_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC4/USBFS.c ****                                                                         
1344:Generated_Source\PSoC4/USBFS.c **** {
 768              		.loc 1 1344 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              	.LVL51:
 773 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 774              		.cfi_def_cfa_offset 20
 775              		.cfi_offset 4, -20
 776              		.cfi_offset 5, -16
 777              		.cfi_offset 6, -12
 778              		.cfi_offset 7, -8
 779              		.cfi_offset 14, -4
1345:Generated_Source\PSoC4/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 780              		.loc 1 1345 0
 781 0002 431E     		subs	r3, r0, #1
 782 0004 DBB2     		uxtb	r3, r3
 783 0006 072B     		cmp	r3, #7
 784 0008 41D8     		bhi	.L51
1346:Generated_Source\PSoC4/USBFS.c ****     {
1347:Generated_Source\PSoC4/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC4/USBFS.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC4/USBFS.c ****         if (length > (USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset))
 785              		.loc 1 1349 0
 786 000a 0600     		movs	r6, r0
 787 000c 4400     		lsls	r4, r0, #1
 788 000e 2418     		adds	r4, r4, r0
 789 0010 A300     		lsls	r3, r4, #2
 790 0012 1F4C     		ldr	r4, .L58
 791 0014 E318     		adds	r3, r4, r3
 792 0016 DC88     		ldrh	r4, [r3, #6]
 793 0018 8023     		movs	r3, #128
 794 001a 9B00     		lsls	r3, r3, #2
 795 001c 1B1B     		subs	r3, r3, r4
 796 001e 9A42     		cmp	r2, r3
 797 0020 09D9     		bls	.L53
1350:Generated_Source\PSoC4/USBFS.c ****         {
1351:Generated_Source\PSoC4/USBFS.c ****             length = USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset;
 798              		.loc 1 1351 0
 799 0022 4200     		lsls	r2, r0, #1
 800              	.LVL52:
 801 0024 1218     		adds	r2, r2, r0
 802 0026 9300     		lsls	r3, r2, #2
 803 0028 194A     		ldr	r2, .L58
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 39


 804 002a D318     		adds	r3, r2, r3
 805 002c DA88     		ldrh	r2, [r3, #6]
 806 002e 8023     		movs	r3, #128
 807 0030 9B00     		lsls	r3, r3, #2
 808 0032 9A1A     		subs	r2, r3, r2
 809 0034 92B2     		uxth	r2, r2
 810              	.LVL53:
 811              	.L53:
1352:Generated_Source\PSoC4/USBFS.c ****         }
1353:Generated_Source\PSoC4/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC4/USBFS.c **** 
1355:Generated_Source\PSoC4/USBFS.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC4/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBFS_EP[epNumber].epTogg
 812              		.loc 1 1356 0
 813 0036 130A     		lsrs	r3, r2, #8
 814 0038 4500     		lsls	r5, r0, #1
 815 003a 2D18     		adds	r5, r5, r0
 816 003c AC00     		lsls	r4, r5, #2
 817 003e 144D     		ldr	r5, .L58
 818 0040 2C19     		adds	r4, r5, r4
 819 0042 E478     		ldrb	r4, [r4, #3]
 820 0044 1C43     		orrs	r4, r3
 821 0046 8301     		lsls	r3, r0, #6
 822 0048 124D     		ldr	r5, .L58+4
 823 004a 5C51     		str	r4, [r3, r5]
1357:Generated_Source\PSoC4/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
 824              		.loc 1 1357 0
 825 004c D4B2     		uxtb	r4, r2
 826 004e AC46     		mov	ip, r5
 827 0050 6344     		add	r3, r3, ip
 828 0052 5C60     		str	r4, [r3, #4]
1358:Generated_Source\PSoC4/USBFS.c **** 
1359:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC4/USBFS.c ****         if (NULL != pData)
 829              		.loc 1 1360 0
 830 0054 0029     		cmp	r1, #0
 831 0056 09D1     		bne	.L57
 832              	.LBB2:
 833 0058 0BE0     		b	.L55
 834              	.LVL54:
 835              	.L56:
1361:Generated_Source\PSoC4/USBFS.c ****         {
1362:Generated_Source\PSoC4/USBFS.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC4/USBFS.c ****             uint16 i;
1364:Generated_Source\PSoC4/USBFS.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC4/USBFS.c ****             {
1366:Generated_Source\PSoC4/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 836              		.loc 1 1366 0 discriminator 3
 837 005a CD5C     		ldrb	r5, [r1, r3]
 838 005c B401     		lsls	r4, r6, #6
 839 005e 0E4F     		ldr	r7, .L58+8
 840 0060 BC46     		mov	ip, r7
 841 0062 6444     		add	r4, r4, ip
 842 0064 2562     		str	r5, [r4, #32]
1364:Generated_Source\PSoC4/USBFS.c ****             {
 843              		.loc 1 1364 0 discriminator 3
 844 0066 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 40


 845              	.LVL55:
 846 0068 9BB2     		uxth	r3, r3
 847              	.LVL56:
 848 006a 00E0     		b	.L54
 849              	.LVL57:
 850              	.L57:
 851              	.LBE2:
 852 006c 0023     		movs	r3, #0
 853              	.L54:
 854              	.LVL58:
 855              	.LBB3:
1364:Generated_Source\PSoC4/USBFS.c ****             {
 856              		.loc 1 1364 0 is_stmt 0 discriminator 1
 857 006e 9A42     		cmp	r2, r3
 858 0070 F3D8     		bhi	.L56
 859              	.LVL59:
 860              	.L55:
 861              	.LBE3:
1367:Generated_Source\PSoC4/USBFS.c ****             }
1368:Generated_Source\PSoC4/USBFS.c ****         }
1369:Generated_Source\PSoC4/USBFS.c **** 
1370:Generated_Source\PSoC4/USBFS.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC4/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 862              		.loc 1 1371 0 is_stmt 1
 863 0072 4200     		lsls	r2, r0, #1
 864              	.LVL60:
 865 0074 1218     		adds	r2, r2, r0
 866 0076 9300     		lsls	r3, r2, #2
 867 0078 054A     		ldr	r2, .L58
 868 007a D318     		adds	r3, r2, r3
 869 007c 0022     		movs	r2, #0
 870 007e 5A70     		strb	r2, [r3, #1]
1372:Generated_Source\PSoC4/USBFS.c **** 
1373:Generated_Source\PSoC4/USBFS.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC4/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
 871              		.loc 1 1374 0
 872 0080 5B79     		ldrb	r3, [r3, #5]
 873 0082 DBB2     		uxtb	r3, r3
 874 0084 8001     		lsls	r0, r0, #6
 875              	.LVL61:
 876 0086 034A     		ldr	r2, .L58+4
 877 0088 9446     		mov	ip, r2
 878 008a 6044     		add	r0, r0, ip
 879 008c 8360     		str	r3, [r0, #8]
 880              	.L51:
1375:Generated_Source\PSoC4/USBFS.c **** 
1376:Generated_Source\PSoC4/USBFS.c ****     #else
1377:Generated_Source\PSoC4/USBFS.c **** 
1378:Generated_Source\PSoC4/USBFS.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC4/USBFS.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC4/USBFS.c ****             if (DMA_INVALID_TD == USBFS_DmaTd[epNumber])
1381:Generated_Source\PSoC4/USBFS.c ****             {
1382:Generated_Source\PSoC4/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC4/USBFS.c ****             }
1384:Generated_Source\PSoC4/USBFS.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC4/USBFS.c **** 
1386:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 41


1387:Generated_Source\PSoC4/USBFS.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC4/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1389:Generated_Source\PSoC4/USBFS.c **** 
1390:Generated_Source\PSoC4/USBFS.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC4/USBFS.c ****             {
1392:Generated_Source\PSoC4/USBFS.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC4/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1394:Generated_Source\PSoC4/USBFS.c **** 
1395:Generated_Source\PSoC4/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC4/USBFS.c **** 
1398:Generated_Source\PSoC4/USBFS.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.a
1401:Generated_Source\PSoC4/USBFS.c **** 
1402:Generated_Source\PSoC4/USBFS.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC4/USBFS.c ****                 --length;
1404:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | le
1405:Generated_Source\PSoC4/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC4/USBFS.c **** 
1407:Generated_Source\PSoC4/USBFS.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1409:Generated_Source\PSoC4/USBFS.c **** 
1410:Generated_Source\PSoC4/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC4/USBFS.c ****             #else
1413:Generated_Source\PSoC4/USBFS.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC4/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1415:Generated_Source\PSoC4/USBFS.c ****                 (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD
1416:Generated_Source\PSoC4/USBFS.c ****                 (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData), LO16((uint32)
1417:Generated_Source\PSoC4/USBFS.c **** 
1418:Generated_Source\PSoC4/USBFS.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC4/USBFS.c ****                 (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1420:Generated_Source\PSoC4/USBFS.c ****                 (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC4/USBFS.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC4/USBFS.c **** 
1423:Generated_Source\PSoC4/USBFS.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC4/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC4/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC4/USBFS.c **** 
1427:Generated_Source\PSoC4/USBFS.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC4/USBFS.c ****             }
1429:Generated_Source\PSoC4/USBFS.c ****             else
1430:Generated_Source\PSoC4/USBFS.c ****             {
1431:Generated_Source\PSoC4/USBFS.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC4/USBFS.c ****                 USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1433:Generated_Source\PSoC4/USBFS.c ****             }
1434:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC4/USBFS.c **** 
1436:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC4/USBFS.c ****             if (pData != NULL)
1438:Generated_Source\PSoC4/USBFS.c ****             {
1439:Generated_Source\PSoC4/USBFS.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC4/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1441:Generated_Source\PSoC4/USBFS.c **** 
1442:Generated_Source\PSoC4/USBFS.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC4/USBFS.c ****                 USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 42


1444:Generated_Source\PSoC4/USBFS.c **** 
1445:Generated_Source\PSoC4/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC4/USBFS.c **** 
1448:Generated_Source\PSoC4/USBFS.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.a
1450:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP_BASE.a
1451:Generated_Source\PSoC4/USBFS.c **** 
1452:Generated_Source\PSoC4/USBFS.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  |
1454:Generated_Source\PSoC4/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC4/USBFS.c **** 
1456:Generated_Source\PSoC4/USBFS.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  |
1458:Generated_Source\PSoC4/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC4/USBFS.c **** 
1460:Generated_Source\PSoC4/USBFS.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC4/USBFS.c **** 
1463:Generated_Source\PSoC4/USBFS.c **** 
1464:Generated_Source\PSoC4/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC4/USBFS.c **** 
1467:Generated_Source\PSoC4/USBFS.c ****             #else
1468:Generated_Source\PSoC4/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1469:Generated_Source\PSoC4/USBFS.c **** 
1470:Generated_Source\PSoC4/USBFS.c ****                 #if (USBFS_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC4/USBFS.c ****                     USBFS_inLength[epNumber] = length;
1472:Generated_Source\PSoC4/USBFS.c ****                     USBFS_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC4/USBFS.c **** 
1474:Generated_Source\PSoC4/USBFS.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber],
1476:Generated_Source\PSoC4/USBFS.c ****                         (length > USBFS_DMA_BYTES_PER_BURST) ? USBFS_DMA_BYTES_PER_BURST : length,
1477:Generated_Source\PSoC4/USBFS.c ****                         USBFS_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC4/USBFS.c ****                                                                                LO16((uint32) &USBFS
1480:Generated_Source\PSoC4/USBFS.c **** 
1481:Generated_Source\PSoC4/USBFS.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC4/USBFS.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC4/USBFS.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC4/USBFS.c ****                     */
1485:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC4/USBFS.c ****                                                    USBFS_DmaNextTd[epNumber],
1487:Generated_Source\PSoC4/USBFS.c ****                                                    USBFS_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC4/USBFS.c **** 
1489:Generated_Source\PSoC4/USBFS.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaNextTd[epNumber], LO16((uint32) &clearInDataR
1491:Generated_Source\PSoC4/USBFS.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC4/USBFS.c ****                 #else
1493:Generated_Source\PSoC4/USBFS.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length,
1495:Generated_Source\PSoC4/USBFS.c ****                                                    USBFS_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_SRC
1496:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC4/USBFS.c ****                                                                                LO16((uint32) &USBFS
1498:Generated_Source\PSoC4/USBFS.c ****                 #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC4/USBFS.c **** 
1500:Generated_Source\PSoC4/USBFS.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 43


1501:Generated_Source\PSoC4/USBFS.c ****                 (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1502:Generated_Source\PSoC4/USBFS.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC4/USBFS.c ****                 (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1504:Generated_Source\PSoC4/USBFS.c ****                 (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC4/USBFS.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC4/USBFS.c ****             }
1507:Generated_Source\PSoC4/USBFS.c ****             else
1508:Generated_Source\PSoC4/USBFS.c ****             {
1509:Generated_Source\PSoC4/USBFS.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC4/USBFS.c ****                 USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1511:Generated_Source\PSoC4/USBFS.c **** 
1512:Generated_Source\PSoC4/USBFS.c ****                 if (length > 0u)
1513:Generated_Source\PSoC4/USBFS.c ****                 {
1514:Generated_Source\PSoC4/USBFS.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC4/USBFS.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC4/USBFS.c ****                     uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1517:Generated_Source\PSoC4/USBFS.c **** 
1518:Generated_Source\PSoC4/USBFS.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1520:Generated_Source\PSoC4/USBFS.c **** 
1521:Generated_Source\PSoC4/USBFS.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST)
1523:Generated_Source\PSoC4/USBFS.c **** 
1524:Generated_Source\PSoC4/USBFS.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u 
1526:Generated_Source\PSoC4/USBFS.c **** 
1527:Generated_Source\PSoC4/USBFS.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1529:Generated_Source\PSoC4/USBFS.c ****                                                                           (USBFS_DmaEpLastBurstEl[e
1530:Generated_Source\PSoC4/USBFS.c ****                                                                           (USBFS_DMA_BYTES_PER_BURS
1531:Generated_Source\PSoC4/USBFS.c **** 
1532:Generated_Source\PSoC4/USBFS.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC4/USBFS.c ****                     lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
1534:Generated_Source\PSoC4/USBFS.c ****                     lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
1535:Generated_Source\PSoC4/USBFS.c **** 
1536:Generated_Source\PSoC4/USBFS.c **** 
1537:Generated_Source\PSoC4/USBFS.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1
1539:Generated_Source\PSoC4/USBFS.c ****                                                                             USBFS_DMA_DESCR0_MASK :
1540:Generated_Source\PSoC4/USBFS.c **** 
1541:Generated_Source\PSoC4/USBFS.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC4/USBFS.c **** 
1544:Generated_Source\PSoC4/USBFS.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
1546:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
1547:Generated_Source\PSoC4/USBFS.c ****                                                                                                    
1548:Generated_Source\PSoC4/USBFS.c **** 
1549:Generated_Source\PSoC4/USBFS.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC4/USBFS.c **** 
1553:Generated_Source\PSoC4/USBFS.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1555:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC4/USBFS.c **** 
1557:Generated_Source\PSoC4/USBFS.c ****                     /* Validate descriptor 1. */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 44


1558:Generated_Source\PSoC4/USBFS.c ****                     if (USBFS_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC4/USBFS.c ****                     {
1560:Generated_Source\PSoC4/USBFS.c ****                         USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1); 
1561:Generated_Source\PSoC4/USBFS.c ****                     }                   
1562:Generated_Source\PSoC4/USBFS.c **** 
1563:Generated_Source\PSoC4/USBFS.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epN
1565:Generated_Source\PSoC4/USBFS.c **** 
1566:Generated_Source\PSoC4/USBFS.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC4/USBFS.c **** 
1569:Generated_Source\PSoC4/USBFS.c ****                 #elif (USBFS_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC4/USBFS.c ****                     USBFS_inLength[epNumber]  = length;
1571:Generated_Source\PSoC4/USBFS.c ****                     USBFS_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC4/USBFS.c **** 
1573:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1574:Generated_Source\PSoC4/USBFS.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC4/USBFS.c ****                         USBFS_DmaTd[epNumber], (length > USBFS_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC4/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC4/USBFS.c ****                         USBFS_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32)  USBFS_inDataPoin
1580:Generated_Source\PSoC4/USBFS.c ****                                                                                LO16((uint32) &USBFS
1581:Generated_Source\PSoC4/USBFS.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1583:Generated_Source\PSoC4/USBFS.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1585:Generated_Source\PSoC4/USBFS.c ****                     (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC4/USBFS.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC4/USBFS.c **** 
1588:Generated_Source\PSoC4/USBFS.c ****                 #if !defined (USBFS_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC4/USBFS.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC4/USBFS.c ****                     USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC4/USBFS.c ****                 #endif  /* (USBFS_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC4/USBFS.c **** 
1593:Generated_Source\PSoC4/USBFS.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC4/USBFS.c ****                 }
1595:Generated_Source\PSoC4/USBFS.c ****                 else
1596:Generated_Source\PSoC4/USBFS.c ****                 {
1597:Generated_Source\PSoC4/USBFS.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC4/USBFS.c ****                     USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1599:Generated_Source\PSoC4/USBFS.c ****                 }
1600:Generated_Source\PSoC4/USBFS.c ****             }
1601:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC4/USBFS.c ****     }
1604:Generated_Source\PSoC4/USBFS.c **** }
 881              		.loc 1 1604 0
 882              		@ sp needed
 883 008e F0BD     		pop	{r4, r5, r6, r7, pc}
 884              	.L59:
 885              		.align	2
 886              	.L58:
 887 0090 00000000 		.word	USBFS_EP
 888 0094 F0FF2B40 		.word	1076625392
 889 0098 C0012C40 		.word	1076625856
 890              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 45


 891              	.LFE12:
 892              		.size	USBFS_LoadInEP, .-USBFS_LoadInEP
 893              		.section	.text.USBFS_EnableOutEP,"ax",%progbits
 894              		.align	2
 895              		.global	USBFS_EnableOutEP
 896              		.code	16
 897              		.thumb_func
 898              		.type	USBFS_EnableOutEP, %function
 899              	USBFS_EnableOutEP:
 900              	.LFB14:
1605:Generated_Source\PSoC4/USBFS.c **** 
1606:Generated_Source\PSoC4/USBFS.c **** 
1607:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
1608:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_ReadOutEP
1609:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
1610:Generated_Source\PSoC4/USBFS.c **** *
1611:Generated_Source\PSoC4/USBFS.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC4/USBFS.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC4/USBFS.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC4/USBFS.c **** *
1615:Generated_Source\PSoC4/USBFS.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC4/USBFS.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC4/USBFS.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC4/USBFS.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC4/USBFS.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC4/USBFS.c **** *
1621:Generated_Source\PSoC4/USBFS.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC4/USBFS.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC4/USBFS.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC4/USBFS.c **** *   transfer after calling the USBFS_ReadOutEP() API. For example,
1625:Generated_Source\PSoC4/USBFS.c **** *   by checking EPstate:
1626:Generated_Source\PSoC4/USBFS.c **** *
1627:Generated_Source\PSoC4/USBFS.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC4/USBFS.c **** *
1629:Generated_Source\PSoC4/USBFS.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC4/USBFS.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC4/USBFS.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC4/USBFS.c **** *
1633:Generated_Source\PSoC4/USBFS.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC4/USBFS.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC4/USBFS.c **** *   requests as data arrives
1636:Generated_Source\PSoC4/USBFS.c **** *
1637:Generated_Source\PSoC4/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC4/USBFS.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC4/USBFS.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC4/USBFS.c **** *         space is loaded.
1641:Generated_Source\PSoC4/USBFS.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC4/USBFS.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC4/USBFS.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC4/USBFS.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC4/USBFS.c **** *
1646:Generated_Source\PSoC4/USBFS.c **** * \return
1647:Generated_Source\PSoC4/USBFS.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC4/USBFS.c **** *
1649:Generated_Source\PSoC4/USBFS.c **** * \reentrant
1650:Generated_Source\PSoC4/USBFS.c **** *  No.
1651:Generated_Source\PSoC4/USBFS.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 46


1652:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
1653:Generated_Source\PSoC4/USBFS.c **** uint16 USBFS_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC4/USBFS.c ****                                                                         
1655:Generated_Source\PSoC4/USBFS.c **** {
1656:Generated_Source\PSoC4/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
1657:Generated_Source\PSoC4/USBFS.c ****     {
1658:Generated_Source\PSoC4/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC4/USBFS.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC4/USBFS.c ****         length = (length > USBFS_GetEPCount(epNumber)) ? USBFS_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC4/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC4/USBFS.c **** 
1663:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC4/USBFS.c ****         {
1665:Generated_Source\PSoC4/USBFS.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC4/USBFS.c ****             uint16 i;
1667:Generated_Source\PSoC4/USBFS.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC4/USBFS.c ****             {
1669:Generated_Source\PSoC4/USBFS.c ****                 pData[i] = (uint8) USBFS_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC4/USBFS.c ****             }
1671:Generated_Source\PSoC4/USBFS.c ****         }
1672:Generated_Source\PSoC4/USBFS.c **** 
1673:Generated_Source\PSoC4/USBFS.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC4/USBFS.c ****         USBFS_EnableOutEP(epNumber);
1675:Generated_Source\PSoC4/USBFS.c ****     #else
1676:Generated_Source\PSoC4/USBFS.c **** 
1677:Generated_Source\PSoC4/USBFS.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC4/USBFS.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC4/USBFS.c ****             if (DMA_INVALID_TD == USBFS_DmaTd[epNumber])
1680:Generated_Source\PSoC4/USBFS.c ****             {
1681:Generated_Source\PSoC4/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC4/USBFS.c ****             }
1683:Generated_Source\PSoC4/USBFS.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC4/USBFS.c **** 
1685:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC4/USBFS.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC4/USBFS.c ****         {
1688:Generated_Source\PSoC4/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1689:Generated_Source\PSoC4/USBFS.c **** 
1690:Generated_Source\PSoC4/USBFS.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC4/USBFS.c **** 
1693:Generated_Source\PSoC4/USBFS.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.arbEp
1695:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC4/USBFS.c **** 
1697:Generated_Source\PSoC4/USBFS.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | (uint1
1699:Generated_Source\PSoC4/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC4/USBFS.c **** 
1701:Generated_Source\PSoC4/USBFS.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1703:Generated_Source\PSoC4/USBFS.c **** 
1704:Generated_Source\PSoC4/USBFS.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC4/USBFS.c ****         }
1707:Generated_Source\PSoC4/USBFS.c ****         #else
1708:Generated_Source\PSoC4/USBFS.c ****             /* Configure DMA to transfer data. */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 47


1709:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1710:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_TER
1711:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) &USBFS_ARB_EP_BASE.arbEp[
1712:Generated_Source\PSoC4/USBFS.c **** 
1713:Generated_Source\PSoC4/USBFS.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1715:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC4/USBFS.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC4/USBFS.c **** 
1718:Generated_Source\PSoC4/USBFS.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC4/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC4/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC4/USBFS.c **** 
1722:Generated_Source\PSoC4/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC4/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC4/USBFS.c ****             */
1725:Generated_Source\PSoC4/USBFS.c **** 
1726:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC4/USBFS.c **** 
1728:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC4/USBFS.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC4/USBFS.c ****         {
1731:Generated_Source\PSoC4/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1732:Generated_Source\PSoC4/USBFS.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC4/USBFS.c **** 
1734:Generated_Source\PSoC4/USBFS.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC4/USBFS.c **** 
1737:Generated_Source\PSoC4/USBFS.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC4/USBFS.c **** 
1740:Generated_Source\PSoC4/USBFS.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
1742:Generated_Source\PSoC4/USBFS.c **** 
1743:Generated_Source\PSoC4/USBFS.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC4/USBFS.c ****                                                                   (USBFS_DmaEpLastBurstEl[epNumber]
1746:Generated_Source\PSoC4/USBFS.c ****                                                                   (USBFS_DMA_BYTES_PER_BURST - 1u);
1747:Generated_Source\PSoC4/USBFS.c **** 
1748:Generated_Source\PSoC4/USBFS.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC4/USBFS.c ****             lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
1750:Generated_Source\PSoC4/USBFS.c ****             lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
1751:Generated_Source\PSoC4/USBFS.c **** 
1752:Generated_Source\PSoC4/USBFS.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (USBFS_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_DMA_DE
1754:Generated_Source\PSoC4/USBFS.c **** 
1755:Generated_Source\PSoC4/USBFS.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1u)) ?
1757:Generated_Source\PSoC4/USBFS.c ****                                                                     USBFS_DMA_DESCR0_MASK : USBFS_D
1758:Generated_Source\PSoC4/USBFS.c **** 
1759:Generated_Source\PSoC4/USBFS.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpBurstCntBackup[epNumber]   = USBFS_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC4/USBFS.c **** 
1763:Generated_Source\PSoC4/USBFS.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epNumber]);
1765:Generated_Source\PSoC4/USBFS.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 48


1766:Generated_Source\PSoC4/USBFS.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC4/USBFS.c **** 
1769:Generated_Source\PSoC4/USBFS.c ****             /* Set destination address. */
1770:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.arbEp
1771:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP_BASE.arbEp
1772:Generated_Source\PSoC4/USBFS.c **** 
1773:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) pData + USBFS_
1775:Generated_Source\PSoC4/USBFS.c **** 
1776:Generated_Source\PSoC4/USBFS.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  | lengt
1778:Generated_Source\PSoC4/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC4/USBFS.c **** 
1780:Generated_Source\PSoC4/USBFS.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  | lengt
1782:Generated_Source\PSoC4/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC4/USBFS.c **** 
1784:Generated_Source\PSoC4/USBFS.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC4/USBFS.c **** 
1787:Generated_Source\PSoC4/USBFS.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1789:Generated_Source\PSoC4/USBFS.c **** 
1790:Generated_Source\PSoC4/USBFS.c ****             if (USBFS_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC4/USBFS.c ****             {
1792:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
1793:Generated_Source\PSoC4/USBFS.c ****             }
1794:Generated_Source\PSoC4/USBFS.c **** 
1795:Generated_Source\PSoC4/USBFS.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC4/USBFS.c ****         }
1798:Generated_Source\PSoC4/USBFS.c ****         #else
1799:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1800:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length,  USBFS_DmaTd[epNumber], T
1801:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) &USBFS_ARB_EP_BASE.arbEp[
1802:Generated_Source\PSoC4/USBFS.c **** 
1803:Generated_Source\PSoC4/USBFS.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1805:Generated_Source\PSoC4/USBFS.c **** 
1806:Generated_Source\PSoC4/USBFS.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1808:Generated_Source\PSoC4/USBFS.c ****             (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC4/USBFS.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC4/USBFS.c **** 
1811:Generated_Source\PSoC4/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC4/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC4/USBFS.c ****             */
1814:Generated_Source\PSoC4/USBFS.c **** 
1815:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC4/USBFS.c ****     }
1818:Generated_Source\PSoC4/USBFS.c ****     else
1819:Generated_Source\PSoC4/USBFS.c ****     {
1820:Generated_Source\PSoC4/USBFS.c ****         length = 0u;
1821:Generated_Source\PSoC4/USBFS.c ****     }
1822:Generated_Source\PSoC4/USBFS.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 49


1823:Generated_Source\PSoC4/USBFS.c ****     return (length);
1824:Generated_Source\PSoC4/USBFS.c **** }
1825:Generated_Source\PSoC4/USBFS.c **** 
1826:Generated_Source\PSoC4/USBFS.c **** 
1827:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
1829:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_LoadInEP16
1830:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
1831:Generated_Source\PSoC4/USBFS.c **** *
1832:Generated_Source\PSoC4/USBFS.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC4/USBFS.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC4/USBFS.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC4/USBFS.c **** *
1836:Generated_Source\PSoC4/USBFS.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC4/USBFS.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC4/USBFS.c **** *  data transfer.
1839:Generated_Source\PSoC4/USBFS.c **** *
1840:Generated_Source\PSoC4/USBFS.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC4/USBFS.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC4/USBFS.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC4/USBFS.c **** *
1844:Generated_Source\PSoC4/USBFS.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC4/USBFS.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC4/USBFS.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC4/USBFS.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC4/USBFS.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC4/USBFS.c **** *
1850:Generated_Source\PSoC4/USBFS.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC4/USBFS.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC4/USBFS.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC4/USBFS.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC4/USBFS.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC4/USBFS.c **** *        fault condition can occur.
1856:Generated_Source\PSoC4/USBFS.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC4/USBFS.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC4/USBFS.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC4/USBFS.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC4/USBFS.c **** *
1861:Generated_Source\PSoC4/USBFS.c **** * \reentrant
1862:Generated_Source\PSoC4/USBFS.c **** *  No.
1863:Generated_Source\PSoC4/USBFS.c **** *
1864:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
1865:Generated_Source\PSoC4/USBFS.c **** void USBFS_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC4/USBFS.c **** {
1867:Generated_Source\PSoC4/USBFS.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC4/USBFS.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC4/USBFS.c **** 
1870:Generated_Source\PSoC4/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
1871:Generated_Source\PSoC4/USBFS.c ****     {
1872:Generated_Source\PSoC4/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC4/USBFS.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC4/USBFS.c ****         if (length > (USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC4/USBFS.c ****         {
1876:Generated_Source\PSoC4/USBFS.c ****             length = USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC4/USBFS.c ****         }
1878:Generated_Source\PSoC4/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC4/USBFS.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 50


1880:Generated_Source\PSoC4/USBFS.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC4/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBFS_EP[epNumber].epTogg
1882:Generated_Source\PSoC4/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC4/USBFS.c **** 
1884:Generated_Source\PSoC4/USBFS.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC4/USBFS.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC4/USBFS.c **** 
1887:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC4/USBFS.c ****         if (NULL != pData)
1889:Generated_Source\PSoC4/USBFS.c ****         {
1890:Generated_Source\PSoC4/USBFS.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC4/USBFS.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC4/USBFS.c **** 
1893:Generated_Source\PSoC4/USBFS.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC4/USBFS.c ****             uint16 i;
1895:Generated_Source\PSoC4/USBFS.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC4/USBFS.c ****             {
1897:Generated_Source\PSoC4/USBFS.c ****                 USBFS_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC4/USBFS.c ****             }
1899:Generated_Source\PSoC4/USBFS.c ****         }
1900:Generated_Source\PSoC4/USBFS.c **** 
1901:Generated_Source\PSoC4/USBFS.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC4/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1903:Generated_Source\PSoC4/USBFS.c **** 
1904:Generated_Source\PSoC4/USBFS.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC4/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1906:Generated_Source\PSoC4/USBFS.c **** 
1907:Generated_Source\PSoC4/USBFS.c ****     #else
1908:Generated_Source\PSoC4/USBFS.c **** 
1909:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC4/USBFS.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC4/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1912:Generated_Source\PSoC4/USBFS.c **** 
1913:Generated_Source\PSoC4/USBFS.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC4/USBFS.c ****             {
1915:Generated_Source\PSoC4/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1916:Generated_Source\PSoC4/USBFS.c **** 
1917:Generated_Source\PSoC4/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC4/USBFS.c **** 
1920:Generated_Source\PSoC4/USBFS.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE
1923:Generated_Source\PSoC4/USBFS.c **** 
1924:Generated_Source\PSoC4/USBFS.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC4/USBFS.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | le
1927:Generated_Source\PSoC4/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC4/USBFS.c **** 
1929:Generated_Source\PSoC4/USBFS.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1931:Generated_Source\PSoC4/USBFS.c **** 
1932:Generated_Source\PSoC4/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC4/USBFS.c **** 
1935:Generated_Source\PSoC4/USBFS.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC4/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_ARB_EPX_CFG_DMA_REQ;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 51


1937:Generated_Source\PSoC4/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_ARB_EPX_CFG_DMA_REQ;
1938:Generated_Source\PSoC4/USBFS.c **** 
1939:Generated_Source\PSoC4/USBFS.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC4/USBFS.c ****             }
1941:Generated_Source\PSoC4/USBFS.c ****             else
1942:Generated_Source\PSoC4/USBFS.c ****             {
1943:Generated_Source\PSoC4/USBFS.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC4/USBFS.c ****                 USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1945:Generated_Source\PSoC4/USBFS.c ****             }
1946:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC4/USBFS.c **** 
1948:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC4/USBFS.c ****             if (pData != NULL)
1950:Generated_Source\PSoC4/USBFS.c ****             {
1951:Generated_Source\PSoC4/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1952:Generated_Source\PSoC4/USBFS.c **** 
1953:Generated_Source\PSoC4/USBFS.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC4/USBFS.c ****                 USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC4/USBFS.c **** 
1956:Generated_Source\PSoC4/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC4/USBFS.c **** 
1959:Generated_Source\PSoC4/USBFS.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE
1961:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP16_BASE
1962:Generated_Source\PSoC4/USBFS.c **** 
1963:Generated_Source\PSoC4/USBFS.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  |
1965:Generated_Source\PSoC4/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC4/USBFS.c **** 
1967:Generated_Source\PSoC4/USBFS.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  |
1969:Generated_Source\PSoC4/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC4/USBFS.c **** 
1971:Generated_Source\PSoC4/USBFS.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC4/USBFS.c **** 
1974:Generated_Source\PSoC4/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC4/USBFS.c ****             }
1977:Generated_Source\PSoC4/USBFS.c ****             else
1978:Generated_Source\PSoC4/USBFS.c ****             {
1979:Generated_Source\PSoC4/USBFS.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC4/USBFS.c ****                 USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1981:Generated_Source\PSoC4/USBFS.c **** 
1982:Generated_Source\PSoC4/USBFS.c ****                 if (length > 0u)
1983:Generated_Source\PSoC4/USBFS.c ****                 {
1984:Generated_Source\PSoC4/USBFS.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC4/USBFS.c ****                     uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1986:Generated_Source\PSoC4/USBFS.c **** 
1987:Generated_Source\PSoC4/USBFS.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1989:Generated_Source\PSoC4/USBFS.c **** 
1990:Generated_Source\PSoC4/USBFS.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST)
1992:Generated_Source\PSoC4/USBFS.c **** 
1993:Generated_Source\PSoC4/USBFS.c ****                     /* Get total number of bursts. */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 52


1994:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u 
1995:Generated_Source\PSoC4/USBFS.c **** 
1996:Generated_Source\PSoC4/USBFS.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1998:Generated_Source\PSoC4/USBFS.c ****                                                                           ((USBFS_DmaEpLastBurstEl[
1999:Generated_Source\PSoC4/USBFS.c ****                                                                            (USBFS_DMA_HALFWORDS_PER
2000:Generated_Source\PSoC4/USBFS.c **** 
2001:Generated_Source\PSoC4/USBFS.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC4/USBFS.c ****                     lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
2003:Generated_Source\PSoC4/USBFS.c ****                     lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
2004:Generated_Source\PSoC4/USBFS.c **** 
2005:Generated_Source\PSoC4/USBFS.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1
2007:Generated_Source\PSoC4/USBFS.c ****                                                                             USBFS_DMA_DESCR0_MASK :
2008:Generated_Source\PSoC4/USBFS.c **** 
2009:Generated_Source\PSoC4/USBFS.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC4/USBFS.c **** 
2012:Generated_Source\PSoC4/USBFS.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
2014:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
2015:Generated_Source\PSoC4/USBFS.c ****                                                                                                    
2016:Generated_Source\PSoC4/USBFS.c **** 
2017:Generated_Source\PSoC4/USBFS.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC4/USBFS.c **** 
2021:Generated_Source\PSoC4/USBFS.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2023:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC4/USBFS.c **** 
2025:Generated_Source\PSoC4/USBFS.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC4/USBFS.c ****                     if (USBFS_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC4/USBFS.c ****                     {
2028:Generated_Source\PSoC4/USBFS.c ****                         USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
2029:Generated_Source\PSoC4/USBFS.c ****                     }
2030:Generated_Source\PSoC4/USBFS.c **** 
2031:Generated_Source\PSoC4/USBFS.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC4/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epN
2033:Generated_Source\PSoC4/USBFS.c **** 
2034:Generated_Source\PSoC4/USBFS.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC4/USBFS.c ****                     USBFS_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC4/USBFS.c **** 
2037:Generated_Source\PSoC4/USBFS.c ****                 #if !defined (USBFS_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC4/USBFS.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC4/USBFS.c ****                     USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC4/USBFS.c ****                 #endif  /* (USBFS_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC4/USBFS.c **** 
2042:Generated_Source\PSoC4/USBFS.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC4/USBFS.c ****                 }
2044:Generated_Source\PSoC4/USBFS.c ****                 else
2045:Generated_Source\PSoC4/USBFS.c ****                 {
2046:Generated_Source\PSoC4/USBFS.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC4/USBFS.c ****                     USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
2048:Generated_Source\PSoC4/USBFS.c ****                 }
2049:Generated_Source\PSoC4/USBFS.c ****             }
2050:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 53


2051:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC4/USBFS.c ****     }
2053:Generated_Source\PSoC4/USBFS.c **** }
2054:Generated_Source\PSoC4/USBFS.c **** 
2055:Generated_Source\PSoC4/USBFS.c **** 
2056:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
2057:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_ReadOutEP16
2058:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
2059:Generated_Source\PSoC4/USBFS.c **** *
2060:Generated_Source\PSoC4/USBFS.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC4/USBFS.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC4/USBFS.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC4/USBFS.c **** *
2064:Generated_Source\PSoC4/USBFS.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC4/USBFS.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC4/USBFS.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC4/USBFS.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC4/USBFS.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC4/USBFS.c **** *
2070:Generated_Source\PSoC4/USBFS.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC4/USBFS.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC4/USBFS.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC4/USBFS.c **** *   transfer after calling the USBFS_ReadOutEP() API. For example,
2074:Generated_Source\PSoC4/USBFS.c **** *   by checking EPstate:
2075:Generated_Source\PSoC4/USBFS.c **** *
2076:Generated_Source\PSoC4/USBFS.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC4/USBFS.c **** *
2078:Generated_Source\PSoC4/USBFS.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC4/USBFS.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC4/USBFS.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC4/USBFS.c **** *
2082:Generated_Source\PSoC4/USBFS.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC4/USBFS.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC4/USBFS.c **** *   requests as data arrives
2085:Generated_Source\PSoC4/USBFS.c **** *
2086:Generated_Source\PSoC4/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC4/USBFS.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC4/USBFS.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC4/USBFS.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC4/USBFS.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC4/USBFS.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC4/USBFS.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC4/USBFS.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC4/USBFS.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC4/USBFS.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC4/USBFS.c **** *
2097:Generated_Source\PSoC4/USBFS.c **** * \return
2098:Generated_Source\PSoC4/USBFS.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC4/USBFS.c **** *
2100:Generated_Source\PSoC4/USBFS.c **** * \reentrant
2101:Generated_Source\PSoC4/USBFS.c **** *  No.
2102:Generated_Source\PSoC4/USBFS.c **** *
2103:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
2104:Generated_Source\PSoC4/USBFS.c **** uint16 USBFS_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC4/USBFS.c **** {
2106:Generated_Source\PSoC4/USBFS.c ****     uint32 adjLength;
2107:Generated_Source\PSoC4/USBFS.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 54


2108:Generated_Source\PSoC4/USBFS.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC4/USBFS.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC4/USBFS.c **** 
2111:Generated_Source\PSoC4/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
2112:Generated_Source\PSoC4/USBFS.c ****     {
2113:Generated_Source\PSoC4/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC4/USBFS.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC4/USBFS.c ****         length = (length > USBFS_GetEPCount(epNumber)) ? USBFS_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC4/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC4/USBFS.c **** 
2118:Generated_Source\PSoC4/USBFS.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC4/USBFS.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC4/USBFS.c **** 
2121:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC4/USBFS.c ****         {
2123:Generated_Source\PSoC4/USBFS.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC4/USBFS.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC4/USBFS.c **** 
2126:Generated_Source\PSoC4/USBFS.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC4/USBFS.c ****             uint16 i;
2128:Generated_Source\PSoC4/USBFS.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC4/USBFS.c ****             {
2130:Generated_Source\PSoC4/USBFS.c ****                 dataBuf[i] = (uint16) USBFS_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC4/USBFS.c ****             }
2132:Generated_Source\PSoC4/USBFS.c ****         }
2133:Generated_Source\PSoC4/USBFS.c **** 
2134:Generated_Source\PSoC4/USBFS.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC4/USBFS.c ****         USBFS_EnableOutEP(epNumber);
2136:Generated_Source\PSoC4/USBFS.c ****     #else
2137:Generated_Source\PSoC4/USBFS.c **** 
2138:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC4/USBFS.c ****         {
2140:Generated_Source\PSoC4/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
2141:Generated_Source\PSoC4/USBFS.c **** 
2142:Generated_Source\PSoC4/USBFS.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC4/USBFS.c **** 
2145:Generated_Source\PSoC4/USBFS.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE.arb
2147:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC4/USBFS.c **** 
2149:Generated_Source\PSoC4/USBFS.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | (uint1
2151:Generated_Source\PSoC4/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC4/USBFS.c **** 
2153:Generated_Source\PSoC4/USBFS.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2155:Generated_Source\PSoC4/USBFS.c **** 
2156:Generated_Source\PSoC4/USBFS.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC4/USBFS.c **** 
2159:Generated_Source\PSoC4/USBFS.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC4/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC4/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC4/USBFS.c **** 
2163:Generated_Source\PSoC4/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC4/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 55


2165:Generated_Source\PSoC4/USBFS.c ****             */
2166:Generated_Source\PSoC4/USBFS.c ****         }
2167:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC4/USBFS.c **** 
2169:Generated_Source\PSoC4/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC4/USBFS.c ****         {
2171:Generated_Source\PSoC4/USBFS.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC4/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
2173:Generated_Source\PSoC4/USBFS.c **** 
2174:Generated_Source\PSoC4/USBFS.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBFS_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC4/USBFS.c **** 
2177:Generated_Source\PSoC4/USBFS.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBFS_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC4/USBFS.c **** 
2180:Generated_Source\PSoC4/USBFS.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
2182:Generated_Source\PSoC4/USBFS.c **** 
2183:Generated_Source\PSoC4/USBFS.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC4/USBFS.c ****                                                                   ((USBFS_DmaEpLastBurstEl[epNumber
2186:Generated_Source\PSoC4/USBFS.c ****                                                                    (USBFS_DMA_HALFWORDS_PER_BURST -
2187:Generated_Source\PSoC4/USBFS.c **** 
2188:Generated_Source\PSoC4/USBFS.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC4/USBFS.c ****             lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
2190:Generated_Source\PSoC4/USBFS.c ****             lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
2191:Generated_Source\PSoC4/USBFS.c **** 
2192:Generated_Source\PSoC4/USBFS.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1u)) ?
2194:Generated_Source\PSoC4/USBFS.c ****                                                                     USBFS_DMA_DESCR0_MASK : USBFS_D
2195:Generated_Source\PSoC4/USBFS.c **** 
2196:Generated_Source\PSoC4/USBFS.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (USBFS_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_DMA_DE
2198:Generated_Source\PSoC4/USBFS.c **** 
2199:Generated_Source\PSoC4/USBFS.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= USBFS_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC4/USBFS.c **** 
2202:Generated_Source\PSoC4/USBFS.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpBurstCntBackup[epNumber]   = USBFS_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC4/USBFS.c **** 
2206:Generated_Source\PSoC4/USBFS.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC4/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epNumber]);
2208:Generated_Source\PSoC4/USBFS.c **** 
2209:Generated_Source\PSoC4/USBFS.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC4/USBFS.c **** 
2212:Generated_Source\PSoC4/USBFS.c ****             /* Set destination address. */
2213:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE.arb
2214:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP16_BASE.arb
2215:Generated_Source\PSoC4/USBFS.c **** 
2216:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) pData + USBFS_
2218:Generated_Source\PSoC4/USBFS.c **** 
2219:Generated_Source\PSoC4/USBFS.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  | lengt
2221:Generated_Source\PSoC4/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 56


2222:Generated_Source\PSoC4/USBFS.c **** 
2223:Generated_Source\PSoC4/USBFS.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  | lengt
2225:Generated_Source\PSoC4/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC4/USBFS.c **** 
2227:Generated_Source\PSoC4/USBFS.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC4/USBFS.c **** 
2230:Generated_Source\PSoC4/USBFS.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2232:Generated_Source\PSoC4/USBFS.c ****             
2233:Generated_Source\PSoC4/USBFS.c ****             if (USBFS_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC4/USBFS.c ****             {
2235:Generated_Source\PSoC4/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
2236:Generated_Source\PSoC4/USBFS.c ****             }
2237:Generated_Source\PSoC4/USBFS.c **** 
2238:Generated_Source\PSoC4/USBFS.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC4/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC4/USBFS.c **** 
2241:Generated_Source\PSoC4/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC4/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC4/USBFS.c ****             */
2244:Generated_Source\PSoC4/USBFS.c ****         }
2245:Generated_Source\PSoC4/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC4/USBFS.c ****     }
2248:Generated_Source\PSoC4/USBFS.c ****     else
2249:Generated_Source\PSoC4/USBFS.c ****     {
2250:Generated_Source\PSoC4/USBFS.c ****         length = 0u;
2251:Generated_Source\PSoC4/USBFS.c ****     }
2252:Generated_Source\PSoC4/USBFS.c **** 
2253:Generated_Source\PSoC4/USBFS.c ****     return (length);
2254:Generated_Source\PSoC4/USBFS.c **** }
2255:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC4/USBFS.c **** 
2257:Generated_Source\PSoC4/USBFS.c **** 
2258:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
2259:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_EnableOutEP
2260:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
2261:Generated_Source\PSoC4/USBFS.c **** *
2262:Generated_Source\PSoC4/USBFS.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC4/USBFS.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC4/USBFS.c **** *
2265:Generated_Source\PSoC4/USBFS.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC4/USBFS.c **** *  1 and 8.
2267:Generated_Source\PSoC4/USBFS.c **** *
2268:Generated_Source\PSoC4/USBFS.c **** * \globalvars
2269:Generated_Source\PSoC4/USBFS.c **** *
2270:Generated_Source\PSoC4/USBFS.c **** *  \ref USBFS_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC4/USBFS.c **** *
2272:Generated_Source\PSoC4/USBFS.c **** * \reentrant
2273:Generated_Source\PSoC4/USBFS.c **** *  No.
2274:Generated_Source\PSoC4/USBFS.c **** *
2275:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
2276:Generated_Source\PSoC4/USBFS.c **** void USBFS_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC4/USBFS.c **** {
 901              		.loc 1 2277 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 57


 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906              	.LVL62:
2278:Generated_Source\PSoC4/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 907              		.loc 1 2278 0
 908 0000 431E     		subs	r3, r0, #1
 909 0002 DBB2     		uxtb	r3, r3
 910 0004 072B     		cmp	r3, #7
 911 0006 0DD8     		bhi	.L60
2279:Generated_Source\PSoC4/USBFS.c ****     {
2280:Generated_Source\PSoC4/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 912              		.loc 1 2280 0
 913 0008 4200     		lsls	r2, r0, #1
 914 000a 1218     		adds	r2, r2, r0
 915 000c 9300     		lsls	r3, r2, #2
 916 000e 064A     		ldr	r2, .L62
 917 0010 D318     		adds	r3, r2, r3
 918 0012 0022     		movs	r2, #0
 919 0014 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC4/USBFS.c **** 
2282:Generated_Source\PSoC4/USBFS.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC4/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
 920              		.loc 1 2283 0
 921 0016 5B79     		ldrb	r3, [r3, #5]
 922 0018 DBB2     		uxtb	r3, r3
 923 001a 8001     		lsls	r0, r0, #6
 924              	.LVL63:
 925 001c 034A     		ldr	r2, .L62+4
 926 001e 9446     		mov	ip, r2
 927 0020 6044     		add	r0, r0, ip
 928 0022 8360     		str	r3, [r0, #8]
 929              	.L60:
2284:Generated_Source\PSoC4/USBFS.c ****         
2285:Generated_Source\PSoC4/USBFS.c ****     }
2286:Generated_Source\PSoC4/USBFS.c **** }
 930              		.loc 1 2286 0
 931              		@ sp needed
 932 0024 7047     		bx	lr
 933              	.L63:
 934 0026 C046     		.align	2
 935              	.L62:
 936 0028 00000000 		.word	USBFS_EP
 937 002c F0FF2B40 		.word	1076625392
 938              		.cfi_endproc
 939              	.LFE14:
 940              		.size	USBFS_EnableOutEP, .-USBFS_EnableOutEP
 941              		.section	.text.USBFS_ReadOutEP,"ax",%progbits
 942              		.align	2
 943              		.global	USBFS_ReadOutEP
 944              		.code	16
 945              		.thumb_func
 946              		.type	USBFS_ReadOutEP, %function
 947              	USBFS_ReadOutEP:
 948              	.LFB13:
1655:Generated_Source\PSoC4/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 58


 949              		.loc 1 1655 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953              	.LVL64:
 954 0000 70B5     		push	{r4, r5, r6, lr}
 955              		.cfi_def_cfa_offset 16
 956              		.cfi_offset 4, -16
 957              		.cfi_offset 5, -12
 958              		.cfi_offset 6, -8
 959              		.cfi_offset 14, -4
 960 0002 0500     		movs	r5, r0
 961 0004 0E00     		movs	r6, r1
 962 0006 1400     		movs	r4, r2
1656:Generated_Source\PSoC4/USBFS.c ****     {
 963              		.loc 1 1656 0
 964 0008 0029     		cmp	r1, #0
 965 000a 1BD0     		beq	.L69
1656:Generated_Source\PSoC4/USBFS.c ****     {
 966              		.loc 1 1656 0 is_stmt 0 discriminator 1
 967 000c 0028     		cmp	r0, #0
 968 000e 1BD0     		beq	.L70
1656:Generated_Source\PSoC4/USBFS.c ****     {
 969              		.loc 1 1656 0 discriminator 2
 970 0010 0828     		cmp	r0, #8
 971 0012 1BD8     		bhi	.L71
1660:Generated_Source\PSoC4/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
 972              		.loc 1 1660 0 is_stmt 1
 973 0014 FFF7FEFF 		bl	USBFS_GetEPCount
 974              	.LVL65:
 975 0018 A042     		cmp	r0, r4
 976 001a 03D2     		bcs	.L66
1660:Generated_Source\PSoC4/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
 977              		.loc 1 1660 0 is_stmt 0 discriminator 1
 978 001c 2800     		movs	r0, r5
 979 001e FFF7FEFF 		bl	USBFS_GetEPCount
 980              	.LVL66:
 981 0022 0400     		movs	r4, r0
 982              	.L66:
 983              	.LVL67:
 984              	.LBB4:
1667:Generated_Source\PSoC4/USBFS.c ****             {
 985              		.loc 1 1667 0 is_stmt 1 discriminator 4
 986 0024 0023     		movs	r3, #0
 987 0026 07E0     		b	.L67
 988              	.LVL68:
 989              	.L68:
1669:Generated_Source\PSoC4/USBFS.c ****             }
 990              		.loc 1 1669 0 discriminator 3
 991 0028 AA01     		lsls	r2, r5, #6
 992 002a 0A49     		ldr	r1, .L72
 993 002c 8C46     		mov	ip, r1
 994 002e 6244     		add	r2, r2, ip
 995 0030 126A     		ldr	r2, [r2, #32]
 996 0032 F254     		strb	r2, [r6, r3]
1667:Generated_Source\PSoC4/USBFS.c ****             {
 997              		.loc 1 1667 0 discriminator 3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 59


 998 0034 0133     		adds	r3, r3, #1
 999              	.LVL69:
 1000 0036 9BB2     		uxth	r3, r3
 1001              	.LVL70:
 1002              	.L67:
1667:Generated_Source\PSoC4/USBFS.c ****             {
 1003              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1004 0038 A342     		cmp	r3, r4
 1005 003a F5D3     		bcc	.L68
 1006              	.LBE4:
1674:Generated_Source\PSoC4/USBFS.c ****     #else
 1007              		.loc 1 1674 0 is_stmt 1
 1008 003c 2800     		movs	r0, r5
 1009 003e FFF7FEFF 		bl	USBFS_EnableOutEP
 1010              	.LVL71:
 1011 0042 04E0     		b	.L65
 1012              	.LVL72:
 1013              	.L69:
1820:Generated_Source\PSoC4/USBFS.c ****     }
 1014              		.loc 1 1820 0
 1015 0044 0024     		movs	r4, #0
 1016 0046 02E0     		b	.L65
 1017              	.L70:
 1018 0048 0024     		movs	r4, #0
 1019 004a 00E0     		b	.L65
 1020              	.L71:
 1021 004c 0024     		movs	r4, #0
 1022              	.LVL73:
 1023              	.L65:
1824:Generated_Source\PSoC4/USBFS.c **** 
 1024              		.loc 1 1824 0
 1025 004e 2000     		movs	r0, r4
 1026              		@ sp needed
 1027              	.LVL74:
 1028              	.LVL75:
 1029 0050 70BD     		pop	{r4, r5, r6, pc}
 1030              	.L73:
 1031 0052 C046     		.align	2
 1032              	.L72:
 1033 0054 C0012C40 		.word	1076625856
 1034              		.cfi_endproc
 1035              	.LFE13:
 1036              		.size	USBFS_ReadOutEP, .-USBFS_ReadOutEP
 1037              		.section	.text.USBFS_DisableOutEP,"ax",%progbits
 1038              		.align	2
 1039              		.global	USBFS_DisableOutEP
 1040              		.code	16
 1041              		.thumb_func
 1042              		.type	USBFS_DisableOutEP, %function
 1043              	USBFS_DisableOutEP:
 1044              	.LFB15:
2287:Generated_Source\PSoC4/USBFS.c **** 
2288:Generated_Source\PSoC4/USBFS.c **** 
2289:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
2290:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_DisableOutEP
2291:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
2292:Generated_Source\PSoC4/USBFS.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 60


2293:Generated_Source\PSoC4/USBFS.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC4/USBFS.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC4/USBFS.c **** *
2296:Generated_Source\PSoC4/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC4/USBFS.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC4/USBFS.c **** *
2299:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
2300:Generated_Source\PSoC4/USBFS.c **** void USBFS_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC4/USBFS.c **** {
 1045              		.loc 1 2301 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 0
 1048              		@ frame_needed = 0, uses_anonymous_args = 0
 1049              		@ link register save eliminated.
 1050              	.LVL76:
2302:Generated_Source\PSoC4/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1051              		.loc 1 2302 0
 1052 0000 431E     		subs	r3, r0, #1
 1053 0002 DBB2     		uxtb	r3, r3
 1054 0004 072B     		cmp	r3, #7
 1055 0006 05D8     		bhi	.L74
2303:Generated_Source\PSoC4/USBFS.c ****     {
2304:Generated_Source\PSoC4/USBFS.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC4/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_MODE_NAK_OUT;
 1056              		.loc 1 2305 0
 1057 0008 8001     		lsls	r0, r0, #6
 1058              	.LVL77:
 1059 000a 034B     		ldr	r3, .L76
 1060 000c 9C46     		mov	ip, r3
 1061 000e 6044     		add	r0, r0, ip
 1062 0010 0823     		movs	r3, #8
 1063 0012 8360     		str	r3, [r0, #8]
 1064              	.L74:
2306:Generated_Source\PSoC4/USBFS.c ****     }
2307:Generated_Source\PSoC4/USBFS.c **** }
 1065              		.loc 1 2307 0
 1066              		@ sp needed
 1067 0014 7047     		bx	lr
 1068              	.L77:
 1069 0016 C046     		.align	2
 1070              	.L76:
 1071 0018 F0FF2B40 		.word	1076625392
 1072              		.cfi_endproc
 1073              	.LFE15:
 1074              		.size	USBFS_DisableOutEP, .-USBFS_DisableOutEP
 1075              		.section	.text.USBFS_Force,"ax",%progbits
 1076              		.align	2
 1077              		.global	USBFS_Force
 1078              		.code	16
 1079              		.thumb_func
 1080              		.type	USBFS_Force, %function
 1081              	USBFS_Force:
 1082              	.LFB16:
2308:Generated_Source\PSoC4/USBFS.c **** 
2309:Generated_Source\PSoC4/USBFS.c **** 
2310:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
2311:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_Force
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 61


2312:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
2313:Generated_Source\PSoC4/USBFS.c **** *
2314:Generated_Source\PSoC4/USBFS.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC4/USBFS.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC4/USBFS.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC4/USBFS.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC4/USBFS.c **** *
2319:Generated_Source\PSoC4/USBFS.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC4/USBFS.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC4/USBFS.c **** *    State                      |Description
2322:Generated_Source\PSoC4/USBFS.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC4/USBFS.c **** *    USBFS_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC4/USBFS.c **** *    USBFS_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC4/USBFS.c **** *    USBFS_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC4/USBFS.c **** *    USBFS_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC4/USBFS.c **** *
2328:Generated_Source\PSoC4/USBFS.c **** *
2329:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
2330:Generated_Source\PSoC4/USBFS.c **** void USBFS_Force(uint8 bState) 
2331:Generated_Source\PSoC4/USBFS.c **** {
 1083              		.loc 1 2331 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              		@ link register save eliminated.
 1088              	.LVL78:
2332:Generated_Source\PSoC4/USBFS.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC4/USBFS.c ****     * needed before write into it).
2334:Generated_Source\PSoC4/USBFS.c ****     */
2335:Generated_Source\PSoC4/USBFS.c ****     USBFS_USBIO_CR0_REG = bState;
 1089              		.loc 1 2335 0
 1090 0000 014B     		ldr	r3, .L79
 1091 0002 1860     		str	r0, [r3]
2336:Generated_Source\PSoC4/USBFS.c **** }
 1092              		.loc 1 2336 0
 1093              		@ sp needed
 1094 0004 7047     		bx	lr
 1095              	.L80:
 1096 0006 C046     		.align	2
 1097              	.L79:
 1098 0008 40002C40 		.word	1076625472
 1099              		.cfi_endproc
 1100              	.LFE16:
 1101              		.size	USBFS_Force, .-USBFS_Force
 1102              		.section	.text.USBFS_GetEPAckState,"ax",%progbits
 1103              		.align	2
 1104              		.global	USBFS_GetEPAckState
 1105              		.code	16
 1106              		.thumb_func
 1107              		.type	USBFS_GetEPAckState, %function
 1108              	USBFS_GetEPAckState:
 1109              	.LFB17:
2337:Generated_Source\PSoC4/USBFS.c **** 
2338:Generated_Source\PSoC4/USBFS.c **** 
2339:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
2340:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_GetEPAckState
2341:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 62


2342:Generated_Source\PSoC4/USBFS.c **** *
2343:Generated_Source\PSoC4/USBFS.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC4/USBFS.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC4/USBFS.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC4/USBFS.c **** *
2347:Generated_Source\PSoC4/USBFS.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC4/USBFS.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC4/USBFS.c **** *
2350:Generated_Source\PSoC4/USBFS.c **** *  \return
2351:Generated_Source\PSoC4/USBFS.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC4/USBFS.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC4/USBFS.c **** *
2354:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
2355:Generated_Source\PSoC4/USBFS.c **** uint8 USBFS_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC4/USBFS.c **** {
 1110              		.loc 1 2356 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              		@ link register save eliminated.
 1115              	.LVL79:
2357:Generated_Source\PSoC4/USBFS.c ****     uint32 cr = 0u;
2358:Generated_Source\PSoC4/USBFS.c **** 
2359:Generated_Source\PSoC4/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1116              		.loc 1 2359 0
 1117 0000 431E     		subs	r3, r0, #1
 1118 0002 DBB2     		uxtb	r3, r3
 1119 0004 072B     		cmp	r3, #7
 1120 0006 07D8     		bhi	.L83
2360:Generated_Source\PSoC4/USBFS.c ****     {
2361:Generated_Source\PSoC4/USBFS.c ****         cr = USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBFS_MODE_ACKD;
 1121              		.loc 1 2361 0
 1122 0008 8001     		lsls	r0, r0, #6
 1123              	.LVL80:
 1124 000a 054B     		ldr	r3, .L84
 1125 000c 9C46     		mov	ip, r3
 1126 000e 6044     		add	r0, r0, ip
 1127 0010 8368     		ldr	r3, [r0, #8]
 1128 0012 1020     		movs	r0, #16
 1129 0014 1840     		ands	r0, r3
 1130              	.LVL81:
 1131 0016 00E0     		b	.L82
 1132              	.LVL82:
 1133              	.L83:
2357:Generated_Source\PSoC4/USBFS.c ****     uint32 cr = 0u;
 1134              		.loc 1 2357 0
 1135 0018 0020     		movs	r0, #0
 1136              	.LVL83:
 1137              	.L82:
2362:Generated_Source\PSoC4/USBFS.c ****     }
2363:Generated_Source\PSoC4/USBFS.c **** 
2364:Generated_Source\PSoC4/USBFS.c ****     return ((uint8) cr);
 1138              		.loc 1 2364 0
 1139 001a C0B2     		uxtb	r0, r0
 1140              	.LVL84:
2365:Generated_Source\PSoC4/USBFS.c **** }
 1141              		.loc 1 2365 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 63


 1142              		@ sp needed
 1143 001c 7047     		bx	lr
 1144              	.L85:
 1145 001e C046     		.align	2
 1146              	.L84:
 1147 0020 F0FF2B40 		.word	1076625392
 1148              		.cfi_endproc
 1149              	.LFE17:
 1150              		.size	USBFS_GetEPAckState, .-USBFS_GetEPAckState
 1151              		.section	.text.USBFS_SetPowerStatus,"ax",%progbits
 1152              		.align	2
 1153              		.global	USBFS_SetPowerStatus
 1154              		.code	16
 1155              		.thumb_func
 1156              		.type	USBFS_SetPowerStatus, %function
 1157              	USBFS_SetPowerStatus:
 1158              	.LFB18:
2366:Generated_Source\PSoC4/USBFS.c **** 
2367:Generated_Source\PSoC4/USBFS.c **** 
2368:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
2369:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_SetPowerStatus
2370:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
2371:Generated_Source\PSoC4/USBFS.c **** *
2372:Generated_Source\PSoC4/USBFS.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC4/USBFS.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC4/USBFS.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC4/USBFS.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC4/USBFS.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC4/USBFS.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC4/USBFS.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC4/USBFS.c **** *
2380:Generated_Source\PSoC4/USBFS.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC4/USBFS.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC4/USBFS.c **** *        given here:
2383:Generated_Source\PSoC4/USBFS.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC4/USBFS.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC4/USBFS.c **** *  USBFS_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC4/USBFS.c **** *  USBFS_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC4/USBFS.c **** *
2388:Generated_Source\PSoC4/USBFS.c **** * \globalvars
2389:Generated_Source\PSoC4/USBFS.c **** *
2390:Generated_Source\PSoC4/USBFS.c **** *  \ref USBFS_deviceStatus - set power status
2391:Generated_Source\PSoC4/USBFS.c **** *
2392:Generated_Source\PSoC4/USBFS.c **** * \reentrant
2393:Generated_Source\PSoC4/USBFS.c **** *  No.
2394:Generated_Source\PSoC4/USBFS.c **** *
2395:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
2396:Generated_Source\PSoC4/USBFS.c **** void USBFS_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC4/USBFS.c **** {
 1159              		.loc 1 2397 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 0
 1162              		@ frame_needed = 0, uses_anonymous_args = 0
 1163              		@ link register save eliminated.
 1164              	.LVL85:
2398:Generated_Source\PSoC4/USBFS.c ****     if (powerStatus != USBFS_DEVICE_STATUS_BUS_POWERED)
 1165              		.loc 1 2398 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 64


 1166 0000 0028     		cmp	r0, #0
 1167 0002 06D0     		beq	.L87
2399:Generated_Source\PSoC4/USBFS.c ****     {
2400:Generated_Source\PSoC4/USBFS.c ****         USBFS_deviceStatus |= (uint8)  USBFS_DEVICE_STATUS_SELF_POWERED;
 1168              		.loc 1 2400 0
 1169 0004 064A     		ldr	r2, .L89
 1170 0006 1178     		ldrb	r1, [r2]
 1171 0008 0123     		movs	r3, #1
 1172 000a 0B43     		orrs	r3, r1
 1173 000c DBB2     		uxtb	r3, r3
 1174 000e 1370     		strb	r3, [r2]
 1175 0010 04E0     		b	.L86
 1176              	.L87:
2401:Generated_Source\PSoC4/USBFS.c ****     }
2402:Generated_Source\PSoC4/USBFS.c ****     else
2403:Generated_Source\PSoC4/USBFS.c ****     {
2404:Generated_Source\PSoC4/USBFS.c ****         USBFS_deviceStatus &= (uint8) ~USBFS_DEVICE_STATUS_SELF_POWERED;
 1177              		.loc 1 2404 0
 1178 0012 034A     		ldr	r2, .L89
 1179 0014 1378     		ldrb	r3, [r2]
 1180 0016 0121     		movs	r1, #1
 1181 0018 8B43     		bics	r3, r1
 1182 001a 1370     		strb	r3, [r2]
 1183              	.L86:
2405:Generated_Source\PSoC4/USBFS.c ****     }
2406:Generated_Source\PSoC4/USBFS.c **** }
 1184              		.loc 1 2406 0
 1185              		@ sp needed
 1186 001c 7047     		bx	lr
 1187              	.L90:
 1188 001e C046     		.align	2
 1189              	.L89:
 1190 0020 00000000 		.word	USBFS_deviceStatus
 1191              		.cfi_endproc
 1192              	.LFE18:
 1193              		.size	USBFS_SetPowerStatus, .-USBFS_SetPowerStatus
 1194              		.section	.text.USBFS_RWUEnabled,"ax",%progbits
 1195              		.align	2
 1196              		.global	USBFS_RWUEnabled
 1197              		.code	16
 1198              		.thumb_func
 1199              		.type	USBFS_RWUEnabled, %function
 1200              	USBFS_RWUEnabled:
 1201              	.LFB19:
2407:Generated_Source\PSoC4/USBFS.c **** 
2408:Generated_Source\PSoC4/USBFS.c **** 
2409:Generated_Source\PSoC4/USBFS.c **** #if (USBFS_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC4/USBFS.c ****     /***************************************************************************
2411:Generated_Source\PSoC4/USBFS.c ****     * Function Name: USBFS_VBusPresent
2412:Generated_Source\PSoC4/USBFS.c ****     ************************************************************************//**
2413:Generated_Source\PSoC4/USBFS.c ****     *
2414:Generated_Source\PSoC4/USBFS.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC4/USBFS.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC4/USBFS.c ****     *
2417:Generated_Source\PSoC4/USBFS.c ****     * \return
2418:Generated_Source\PSoC4/USBFS.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC4/USBFS.c ****     *  Return Value | Description
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 65


2420:Generated_Source\PSoC4/USBFS.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC4/USBFS.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC4/USBFS.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC4/USBFS.c ****     *
2424:Generated_Source\PSoC4/USBFS.c ****     *
2425:Generated_Source\PSoC4/USBFS.c ****     ***************************************************************************/
2426:Generated_Source\PSoC4/USBFS.c ****     uint8 USBFS_VBusPresent(void) 
2427:Generated_Source\PSoC4/USBFS.c ****     {
2428:Generated_Source\PSoC4/USBFS.c ****         return ((0u != (USBFS_VBUS_STATUS_REG & USBFS_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC4/USBFS.c ****     }
2430:Generated_Source\PSoC4/USBFS.c **** #endif /* (USBFS_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC4/USBFS.c **** 
2432:Generated_Source\PSoC4/USBFS.c **** 
2433:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
2434:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_RWUEnabled
2435:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
2436:Generated_Source\PSoC4/USBFS.c **** *
2437:Generated_Source\PSoC4/USBFS.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC4/USBFS.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC4/USBFS.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC4/USBFS.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC4/USBFS.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC4/USBFS.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC4/USBFS.c **** *  wakeup.
2444:Generated_Source\PSoC4/USBFS.c **** *
2445:Generated_Source\PSoC4/USBFS.c **** *
2446:Generated_Source\PSoC4/USBFS.c **** * \return
2447:Generated_Source\PSoC4/USBFS.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC4/USBFS.c **** *
2449:Generated_Source\PSoC4/USBFS.c **** * \globalvars
2450:Generated_Source\PSoC4/USBFS.c **** *  USBFS_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC4/USBFS.c **** *
2452:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
2453:Generated_Source\PSoC4/USBFS.c **** uint8 USBFS_RWUEnabled(void) 
2454:Generated_Source\PSoC4/USBFS.c **** {
 1202              		.loc 1 2454 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 0
 1205              		@ frame_needed = 0, uses_anonymous_args = 0
 1206              		@ link register save eliminated.
 1207              	.LVL86:
2455:Generated_Source\PSoC4/USBFS.c ****     uint8 result = USBFS_FALSE;
2456:Generated_Source\PSoC4/USBFS.c **** 
2457:Generated_Source\PSoC4/USBFS.c ****     if (0u != (USBFS_deviceStatus & USBFS_DEVICE_STATUS_REMOTE_WAKEUP))
 1208              		.loc 1 2457 0
 1209 0000 034B     		ldr	r3, .L94
 1210 0002 1B78     		ldrb	r3, [r3]
 1211 0004 9B07     		lsls	r3, r3, #30
 1212 0006 01D4     		bmi	.L93
2455:Generated_Source\PSoC4/USBFS.c ****     uint8 result = USBFS_FALSE;
 1213              		.loc 1 2455 0
 1214 0008 0020     		movs	r0, #0
 1215 000a 00E0     		b	.L92
 1216              	.L93:
2458:Generated_Source\PSoC4/USBFS.c ****     {
2459:Generated_Source\PSoC4/USBFS.c ****         result = USBFS_TRUE;
 1217              		.loc 1 2459 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 66


 1218 000c 0120     		movs	r0, #1
 1219              	.L92:
 1220              	.LVL87:
2460:Generated_Source\PSoC4/USBFS.c ****     }
2461:Generated_Source\PSoC4/USBFS.c **** 
2462:Generated_Source\PSoC4/USBFS.c ****     return (result);
2463:Generated_Source\PSoC4/USBFS.c **** }
 1221              		.loc 1 2463 0
 1222              		@ sp needed
 1223 000e 7047     		bx	lr
 1224              	.L95:
 1225              		.align	2
 1226              	.L94:
 1227 0010 00000000 		.word	USBFS_deviceStatus
 1228              		.cfi_endproc
 1229              	.LFE19:
 1230              		.size	USBFS_RWUEnabled, .-USBFS_RWUEnabled
 1231              		.section	.text.USBFS_GetDeviceAddress,"ax",%progbits
 1232              		.align	2
 1233              		.global	USBFS_GetDeviceAddress
 1234              		.code	16
 1235              		.thumb_func
 1236              		.type	USBFS_GetDeviceAddress, %function
 1237              	USBFS_GetDeviceAddress:
 1238              	.LFB20:
2464:Generated_Source\PSoC4/USBFS.c **** 
2465:Generated_Source\PSoC4/USBFS.c **** 
2466:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
2467:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_GetDeviceAddress
2468:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
2469:Generated_Source\PSoC4/USBFS.c **** *
2470:Generated_Source\PSoC4/USBFS.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC4/USBFS.c **** *
2472:Generated_Source\PSoC4/USBFS.c **** * \return
2473:Generated_Source\PSoC4/USBFS.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC4/USBFS.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC4/USBFS.c **** *
2476:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
2477:Generated_Source\PSoC4/USBFS.c **** uint8 USBFS_GetDeviceAddress(void) 
2478:Generated_Source\PSoC4/USBFS.c **** {
 1239              		.loc 1 2478 0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              		@ link register save eliminated.
2479:Generated_Source\PSoC4/USBFS.c ****     return (uint8)(USBFS_CR0_REG & USBFS_CR0_DEVICE_ADDRESS_MASK);
 1244              		.loc 1 2479 0
 1245 0000 024B     		ldr	r3, .L97
 1246 0002 1B68     		ldr	r3, [r3]
 1247 0004 7F20     		movs	r0, #127
 1248 0006 1840     		ands	r0, r3
2480:Generated_Source\PSoC4/USBFS.c **** }
 1249              		.loc 1 2480 0
 1250              		@ sp needed
 1251 0008 7047     		bx	lr
 1252              	.L98:
 1253 000a C046     		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 67


 1254              	.L97:
 1255 000c 20002C40 		.word	1076625440
 1256              		.cfi_endproc
 1257              	.LFE20:
 1258              		.size	USBFS_GetDeviceAddress, .-USBFS_GetDeviceAddress
 1259              		.section	.text.USBFS_EnableSofInt,"ax",%progbits
 1260              		.align	2
 1261              		.global	USBFS_EnableSofInt
 1262              		.code	16
 1263              		.thumb_func
 1264              		.type	USBFS_EnableSofInt, %function
 1265              	USBFS_EnableSofInt:
 1266              	.LFB21:
2481:Generated_Source\PSoC4/USBFS.c **** 
2482:Generated_Source\PSoC4/USBFS.c **** 
2483:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
2484:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_EnableSofInt
2485:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
2486:Generated_Source\PSoC4/USBFS.c **** *
2487:Generated_Source\PSoC4/USBFS.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC4/USBFS.c **** *  packet is received from the host.
2489:Generated_Source\PSoC4/USBFS.c **** *
2490:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
2491:Generated_Source\PSoC4/USBFS.c **** void USBFS_EnableSofInt(void) 
2492:Generated_Source\PSoC4/USBFS.c **** {
 1267              		.loc 1 2492 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
2493:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC4/USBFS.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC4/USBFS.c ****     USBFS_INTR_SIE_MASK_REG |= (uint32) USBFS_INTR_SIE_SOF_INTR;
 1272              		.loc 1 2495 0
 1273 0000 024A     		ldr	r2, .L100
 1274 0002 1168     		ldr	r1, [r2]
 1275 0004 0123     		movs	r3, #1
 1276 0006 0B43     		orrs	r3, r1
 1277 0008 1360     		str	r3, [r2]
2496:Generated_Source\PSoC4/USBFS.c **** #else
2497:Generated_Source\PSoC4/USBFS.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC4/USBFS.c ****         CyIntEnable(USBFS_SOF_VECT_NUM);
2500:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC4/USBFS.c **** }
 1278              		.loc 1 2502 0
 1279              		@ sp needed
 1280 000a 7047     		bx	lr
 1281              	.L101:
 1282              		.align	2
 1283              	.L100:
 1284 000c 28202C40 		.word	1076633640
 1285              		.cfi_endproc
 1286              	.LFE21:
 1287              		.size	USBFS_EnableSofInt, .-USBFS_EnableSofInt
 1288              		.section	.text.USBFS_DisableSofInt,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 68


 1289              		.align	2
 1290              		.global	USBFS_DisableSofInt
 1291              		.code	16
 1292              		.thumb_func
 1293              		.type	USBFS_DisableSofInt, %function
 1294              	USBFS_DisableSofInt:
 1295              	.LFB22:
2503:Generated_Source\PSoC4/USBFS.c **** 
2504:Generated_Source\PSoC4/USBFS.c **** 
2505:Generated_Source\PSoC4/USBFS.c **** /*******************************************************************************
2506:Generated_Source\PSoC4/USBFS.c **** * Function Name: USBFS_DisableSofInt
2507:Generated_Source\PSoC4/USBFS.c **** ****************************************************************************//**
2508:Generated_Source\PSoC4/USBFS.c **** *
2509:Generated_Source\PSoC4/USBFS.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC4/USBFS.c **** *  packet is received from the host.
2511:Generated_Source\PSoC4/USBFS.c **** *
2512:Generated_Source\PSoC4/USBFS.c **** *******************************************************************************/
2513:Generated_Source\PSoC4/USBFS.c **** void USBFS_DisableSofInt(void) 
2514:Generated_Source\PSoC4/USBFS.c **** {
 1296              		.loc 1 2514 0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 0
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 1300              		@ link register save eliminated.
2515:Generated_Source\PSoC4/USBFS.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC4/USBFS.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC4/USBFS.c ****     USBFS_INTR_SIE_MASK_REG &= (uint32) ~USBFS_INTR_SIE_SOF_INTR;
 1301              		.loc 1 2517 0
 1302 0000 024A     		ldr	r2, .L103
 1303 0002 1368     		ldr	r3, [r2]
 1304 0004 0121     		movs	r1, #1
 1305 0006 8B43     		bics	r3, r1
 1306 0008 1360     		str	r3, [r2]
2518:Generated_Source\PSoC4/USBFS.c **** #else
2519:Generated_Source\PSoC4/USBFS.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC4/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC4/USBFS.c ****         CyIntDisable(USBFS_SOF_VECT_NUM);
2522:Generated_Source\PSoC4/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC4/USBFS.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC4/USBFS.c **** }
 1307              		.loc 1 2524 0
 1308              		@ sp needed
 1309 000a 7047     		bx	lr
 1310              	.L104:
 1311              		.align	2
 1312              	.L103:
 1313 000c 28202C40 		.word	1076633640
 1314              		.cfi_endproc
 1315              	.LFE22:
 1316              		.size	USBFS_DisableSofInt, .-USBFS_DisableSofInt
 1317              		.global	USBFS_initVar
 1318              		.bss
 1319              		.set	.LANCHOR0,. + 0
 1320              		.type	USBFS_initVar, %object
 1321              		.size	USBFS_initVar, 1
 1322              	USBFS_initVar:
 1323 0000 00       		.space	1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 69


 1324              		.text
 1325              	.Letext0:
 1326              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1327              		.file 3 "Generated_Source\\PSoC4\\USBFS.h"
 1328              		.file 4 "Generated_Source\\PSoC4\\USBFS_pvt.h"
 1329              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1330              		.section	.debug_info,"",%progbits
 1331              	.Ldebug_info0:
 1332 0000 2E090000 		.4byte	0x92e
 1333 0004 0400     		.2byte	0x4
 1334 0006 00000000 		.4byte	.Ldebug_abbrev0
 1335 000a 04       		.byte	0x4
 1336 000b 01       		.uleb128 0x1
 1337 000c 68000000 		.4byte	.LASF100
 1338 0010 0C       		.byte	0xc
 1339 0011 E5030000 		.4byte	.LASF101
 1340 0015 3D000000 		.4byte	.LASF102
 1341 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1342 001d 00000000 		.4byte	0
 1343 0021 00000000 		.4byte	.Ldebug_line0
 1344 0025 02       		.uleb128 0x2
 1345 0026 01       		.byte	0x1
 1346 0027 06       		.byte	0x6
 1347 0028 80010000 		.4byte	.LASF0
 1348 002c 02       		.uleb128 0x2
 1349 002d 01       		.byte	0x1
 1350 002e 08       		.byte	0x8
 1351 002f 7E040000 		.4byte	.LASF1
 1352 0033 02       		.uleb128 0x2
 1353 0034 02       		.byte	0x2
 1354 0035 05       		.byte	0x5
 1355 0036 8C040000 		.4byte	.LASF2
 1356 003a 02       		.uleb128 0x2
 1357 003b 02       		.byte	0x2
 1358 003c 07       		.byte	0x7
 1359 003d FC020000 		.4byte	.LASF3
 1360 0041 02       		.uleb128 0x2
 1361 0042 04       		.byte	0x4
 1362 0043 05       		.byte	0x5
 1363 0044 08020000 		.4byte	.LASF4
 1364 0048 02       		.uleb128 0x2
 1365 0049 04       		.byte	0x4
 1366 004a 07       		.byte	0x7
 1367 004b BF020000 		.4byte	.LASF5
 1368 004f 02       		.uleb128 0x2
 1369 0050 08       		.byte	0x8
 1370 0051 05       		.byte	0x5
 1371 0052 72010000 		.4byte	.LASF6
 1372 0056 02       		.uleb128 0x2
 1373 0057 08       		.byte	0x8
 1374 0058 07       		.byte	0x7
 1375 0059 02010000 		.4byte	.LASF7
 1376 005d 03       		.uleb128 0x3
 1377 005e 04       		.byte	0x4
 1378 005f 05       		.byte	0x5
 1379 0060 696E7400 		.ascii	"int\000"
 1380 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 70


 1381 0065 04       		.byte	0x4
 1382 0066 07       		.byte	0x7
 1383 0067 B2020000 		.4byte	.LASF8
 1384 006b 04       		.uleb128 0x4
 1385 006c 35020000 		.4byte	.LASF9
 1386 0070 02       		.byte	0x2
 1387 0071 E401     		.2byte	0x1e4
 1388 0073 2C000000 		.4byte	0x2c
 1389 0077 04       		.uleb128 0x4
 1390 0078 00000000 		.4byte	.LASF10
 1391 007c 02       		.byte	0x2
 1392 007d E501     		.2byte	0x1e5
 1393 007f 3A000000 		.4byte	0x3a
 1394 0083 04       		.uleb128 0x4
 1395 0084 6B020000 		.4byte	.LASF11
 1396 0088 02       		.byte	0x2
 1397 0089 E601     		.2byte	0x1e6
 1398 008b 48000000 		.4byte	0x48
 1399 008f 02       		.uleb128 0x2
 1400 0090 04       		.byte	0x4
 1401 0091 04       		.byte	0x4
 1402 0092 31040000 		.4byte	.LASF12
 1403 0096 02       		.uleb128 0x2
 1404 0097 08       		.byte	0x8
 1405 0098 04       		.byte	0x4
 1406 0099 53020000 		.4byte	.LASF13
 1407 009d 02       		.uleb128 0x2
 1408 009e 01       		.byte	0x1
 1409 009f 08       		.byte	0x8
 1410 00a0 15050000 		.4byte	.LASF14
 1411 00a4 05       		.uleb128 0x5
 1412 00a5 6B000000 		.4byte	0x6b
 1413 00a9 04       		.uleb128 0x4
 1414 00aa 91030000 		.4byte	.LASF15
 1415 00ae 02       		.byte	0x2
 1416 00af 9002     		.2byte	0x290
 1417 00b1 B5000000 		.4byte	0xb5
 1418 00b5 05       		.uleb128 0x5
 1419 00b6 83000000 		.4byte	0x83
 1420 00ba 02       		.uleb128 0x2
 1421 00bb 08       		.byte	0x8
 1422 00bc 04       		.byte	0x4
 1423 00bd D2030000 		.4byte	.LASF16
 1424 00c1 02       		.uleb128 0x2
 1425 00c2 04       		.byte	0x4
 1426 00c3 07       		.byte	0x7
 1427 00c4 C9030000 		.4byte	.LASF17
 1428 00c8 06       		.uleb128 0x6
 1429 00c9 0C       		.byte	0xc
 1430 00ca 03       		.byte	0x3
 1431 00cb 93       		.byte	0x93
 1432 00cc 3D010000 		.4byte	0x13d
 1433 00d0 07       		.uleb128 0x7
 1434 00d1 DE030000 		.4byte	.LASF18
 1435 00d5 03       		.byte	0x3
 1436 00d6 95       		.byte	0x95
 1437 00d7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 71


 1438 00db 00       		.byte	0
 1439 00dc 07       		.uleb128 0x7
 1440 00dd 37040000 		.4byte	.LASF19
 1441 00e1 03       		.byte	0x3
 1442 00e2 96       		.byte	0x96
 1443 00e3 6B000000 		.4byte	0x6b
 1444 00e7 01       		.byte	0x1
 1445 00e8 07       		.uleb128 0x7
 1446 00e9 AA030000 		.4byte	.LASF20
 1447 00ed 03       		.byte	0x3
 1448 00ee 97       		.byte	0x97
 1449 00ef 6B000000 		.4byte	0x6b
 1450 00f3 02       		.byte	0x2
 1451 00f4 07       		.uleb128 0x7
 1452 00f5 3B020000 		.4byte	.LASF21
 1453 00f9 03       		.byte	0x3
 1454 00fa 98       		.byte	0x98
 1455 00fb 6B000000 		.4byte	0x6b
 1456 00ff 03       		.byte	0x3
 1457 0100 07       		.uleb128 0x7
 1458 0101 2D010000 		.4byte	.LASF22
 1459 0105 03       		.byte	0x3
 1460 0106 99       		.byte	0x99
 1461 0107 6B000000 		.4byte	0x6b
 1462 010b 04       		.byte	0x4
 1463 010c 07       		.uleb128 0x7
 1464 010d 92020000 		.4byte	.LASF23
 1465 0111 03       		.byte	0x3
 1466 0112 9A       		.byte	0x9a
 1467 0113 6B000000 		.4byte	0x6b
 1468 0117 05       		.byte	0x5
 1469 0118 07       		.uleb128 0x7
 1470 0119 36050000 		.4byte	.LASF24
 1471 011d 03       		.byte	0x3
 1472 011e 9B       		.byte	0x9b
 1473 011f 77000000 		.4byte	0x77
 1474 0123 06       		.byte	0x6
 1475 0124 07       		.uleb128 0x7
 1476 0125 1F050000 		.4byte	.LASF25
 1477 0129 03       		.byte	0x3
 1478 012a 9C       		.byte	0x9c
 1479 012b 77000000 		.4byte	0x77
 1480 012f 08       		.byte	0x8
 1481 0130 07       		.uleb128 0x7
 1482 0131 65030000 		.4byte	.LASF26
 1483 0135 03       		.byte	0x3
 1484 0136 9D       		.byte	0x9d
 1485 0137 6B000000 		.4byte	0x6b
 1486 013b 0A       		.byte	0xa
 1487 013c 00       		.byte	0
 1488 013d 08       		.uleb128 0x8
 1489 013e E5040000 		.4byte	.LASF27
 1490 0142 03       		.byte	0x3
 1491 0143 9E       		.byte	0x9e
 1492 0144 C8000000 		.4byte	0xc8
 1493 0148 06       		.uleb128 0x6
 1494 0149 40       		.byte	0x40
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 72


 1495 014a 03       		.byte	0x3
 1496 014b DA       		.byte	0xda
 1497 014c 81010000 		.4byte	0x181
 1498 0150 07       		.uleb128 0x7
 1499 0151 0C040000 		.4byte	.LASF28
 1500 0155 03       		.byte	0x3
 1501 0156 DC       		.byte	0xdc
 1502 0157 83000000 		.4byte	0x83
 1503 015b 00       		.byte	0
 1504 015c 07       		.uleb128 0x7
 1505 015d 13040000 		.4byte	.LASF29
 1506 0161 03       		.byte	0x3
 1507 0162 DD       		.byte	0xdd
 1508 0163 83000000 		.4byte	0x83
 1509 0167 04       		.byte	0x4
 1510 0168 07       		.uleb128 0x7
 1511 0169 2B040000 		.4byte	.LASF30
 1512 016d 03       		.byte	0x3
 1513 016e DE       		.byte	0xde
 1514 016f 83000000 		.4byte	0x83
 1515 0173 08       		.byte	0x8
 1516 0174 09       		.uleb128 0x9
 1517 0175 67617000 		.ascii	"gap\000"
 1518 0179 03       		.byte	0x3
 1519 017a DF       		.byte	0xdf
 1520 017b 81010000 		.4byte	0x181
 1521 017f 0C       		.byte	0xc
 1522 0180 00       		.byte	0
 1523 0181 0A       		.uleb128 0xa
 1524 0182 83000000 		.4byte	0x83
 1525 0186 91010000 		.4byte	0x191
 1526 018a 0B       		.uleb128 0xb
 1527 018b C1000000 		.4byte	0xc1
 1528 018f 0C       		.byte	0xc
 1529 0190 00       		.byte	0
 1530 0191 08       		.uleb128 0x8
 1531 0192 1E030000 		.4byte	.LASF31
 1532 0196 03       		.byte	0x3
 1533 0197 E0       		.byte	0xe0
 1534 0198 48010000 		.4byte	0x148
 1535 019c 06       		.uleb128 0x6
 1536 019d 40       		.byte	0x40
 1537 019e 03       		.byte	0x3
 1538 019f EC       		.byte	0xec
 1539 01a0 1D020000 		.4byte	0x21d
 1540 01a4 07       		.uleb128 0x7
 1541 01a5 32010000 		.4byte	.LASF32
 1542 01a9 03       		.byte	0x3
 1543 01aa EE       		.byte	0xee
 1544 01ab 83000000 		.4byte	0x83
 1545 01af 00       		.byte	0
 1546 01b0 07       		.uleb128 0x7
 1547 01b1 DF050000 		.4byte	.LASF33
 1548 01b5 03       		.byte	0x3
 1549 01b6 EF       		.byte	0xef
 1550 01b7 83000000 		.4byte	0x83
 1551 01bb 04       		.byte	0x4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 73


 1552 01bc 07       		.uleb128 0x7
 1553 01bd 66020000 		.4byte	.LASF34
 1554 01c1 03       		.byte	0x3
 1555 01c2 F0       		.byte	0xf0
 1556 01c3 83000000 		.4byte	0x83
 1557 01c7 08       		.byte	0x8
 1558 01c8 07       		.uleb128 0x7
 1559 01c9 99020000 		.4byte	.LASF35
 1560 01cd 03       		.byte	0x3
 1561 01ce F1       		.byte	0xf1
 1562 01cf 83000000 		.4byte	0x83
 1563 01d3 0C       		.byte	0xc
 1564 01d4 07       		.uleb128 0x7
 1565 01d5 44020000 		.4byte	.LASF36
 1566 01d9 03       		.byte	0x3
 1567 01da F2       		.byte	0xf2
 1568 01db 83000000 		.4byte	0x83
 1569 01df 10       		.byte	0x10
 1570 01e0 07       		.uleb128 0x7
 1571 01e1 D7050000 		.4byte	.LASF37
 1572 01e5 03       		.byte	0x3
 1573 01e6 F3       		.byte	0xf3
 1574 01e7 83000000 		.4byte	0x83
 1575 01eb 14       		.byte	0x14
 1576 01ec 07       		.uleb128 0x7
 1577 01ed C9040000 		.4byte	.LASF38
 1578 01f1 03       		.byte	0x3
 1579 01f2 F4       		.byte	0xf4
 1580 01f3 83000000 		.4byte	0x83
 1581 01f7 18       		.byte	0x18
 1582 01f8 07       		.uleb128 0x7
 1583 01f9 04040000 		.4byte	.LASF39
 1584 01fd 03       		.byte	0x3
 1585 01fe F5       		.byte	0xf5
 1586 01ff 83000000 		.4byte	0x83
 1587 0203 1C       		.byte	0x1c
 1588 0204 07       		.uleb128 0x7
 1589 0205 B0050000 		.4byte	.LASF40
 1590 0209 03       		.byte	0x3
 1591 020a F6       		.byte	0xf6
 1592 020b 83000000 		.4byte	0x83
 1593 020f 20       		.byte	0x20
 1594 0210 09       		.uleb128 0x9
 1595 0211 67617000 		.ascii	"gap\000"
 1596 0215 03       		.byte	0x3
 1597 0216 F7       		.byte	0xf7
 1598 0217 1D020000 		.4byte	0x21d
 1599 021b 24       		.byte	0x24
 1600 021c 00       		.byte	0
 1601 021d 0A       		.uleb128 0xa
 1602 021e 83000000 		.4byte	0x83
 1603 0222 2D020000 		.4byte	0x22d
 1604 0226 0B       		.uleb128 0xb
 1605 0227 C1000000 		.4byte	0xc1
 1606 022b 06       		.byte	0x6
 1607 022c 00       		.byte	0
 1608 022d 08       		.uleb128 0x8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 74


 1609 022e E4010000 		.4byte	.LASF41
 1610 0232 03       		.byte	0x3
 1611 0233 F8       		.byte	0xf8
 1612 0234 9C010000 		.4byte	0x19c
 1613 0238 0C       		.uleb128 0xc
 1614 0239 4002     		.2byte	0x240
 1615 023b 03       		.byte	0x3
 1616 023c 1401     		.2byte	0x114
 1617 023e 50020000 		.4byte	0x250
 1618 0242 0D       		.uleb128 0xd
 1619 0243 8C020000 		.4byte	.LASF42
 1620 0247 03       		.byte	0x3
 1621 0248 1601     		.2byte	0x116
 1622 024a 50020000 		.4byte	0x250
 1623 024e 00       		.byte	0
 1624 024f 00       		.byte	0
 1625 0250 0A       		.uleb128 0xa
 1626 0251 91010000 		.4byte	0x191
 1627 0255 60020000 		.4byte	0x260
 1628 0259 0B       		.uleb128 0xb
 1629 025a C1000000 		.4byte	0xc1
 1630 025e 08       		.byte	0x8
 1631 025f 00       		.byte	0
 1632 0260 04       		.uleb128 0x4
 1633 0261 38010000 		.4byte	.LASF43
 1634 0265 03       		.byte	0x3
 1635 0266 1701     		.2byte	0x117
 1636 0268 38020000 		.4byte	0x238
 1637 026c 0C       		.uleb128 0xc
 1638 026d 4002     		.2byte	0x240
 1639 026f 03       		.byte	0x3
 1640 0270 1A01     		.2byte	0x11a
 1641 0272 84020000 		.4byte	0x284
 1642 0276 0D       		.uleb128 0xd
 1643 0277 5F030000 		.4byte	.LASF44
 1644 027b 03       		.byte	0x3
 1645 027c 1C01     		.2byte	0x11c
 1646 027e 84020000 		.4byte	0x284
 1647 0282 00       		.byte	0
 1648 0283 00       		.byte	0
 1649 0284 0A       		.uleb128 0xa
 1650 0285 2D020000 		.4byte	0x22d
 1651 0289 94020000 		.4byte	0x294
 1652 028d 0B       		.uleb128 0xb
 1653 028e C1000000 		.4byte	0xc1
 1654 0292 08       		.byte	0x8
 1655 0293 00       		.byte	0
 1656 0294 04       		.uleb128 0x4
 1657 0295 4D010000 		.4byte	.LASF45
 1658 0299 03       		.byte	0x3
 1659 029a 1D01     		.2byte	0x11d
 1660 029c 6C020000 		.4byte	0x26c
 1661 02a0 0E       		.uleb128 0xe
 1662 02a1 4B040000 		.4byte	.LASF46
 1663 02a5 01       		.byte	0x1
 1664 02a6 D3       		.byte	0xd3
 1665 02a7 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 75


 1666 02ab D0000000 		.4byte	.LFE2-.LFB2
 1667 02af 01       		.uleb128 0x1
 1668 02b0 9C       		.byte	0x9c
 1669 02b1 7A030000 		.4byte	0x37a
 1670 02b5 0F       		.uleb128 0xf
 1671 02b6 34000000 		.4byte	.LVL0
 1672 02ba D9080000 		.4byte	0x8d9
 1673 02be C8020000 		.4byte	0x2c8
 1674 02c2 10       		.uleb128 0x10
 1675 02c3 01       		.uleb128 0x1
 1676 02c4 50       		.byte	0x50
 1677 02c5 01       		.uleb128 0x1
 1678 02c6 32       		.byte	0x32
 1679 02c7 00       		.byte	0
 1680 02c8 11       		.uleb128 0x11
 1681 02c9 40000000 		.4byte	.LVL1
 1682 02cd E4080000 		.4byte	0x8e4
 1683 02d1 0F       		.uleb128 0xf
 1684 02d2 5E000000 		.4byte	.LVL2
 1685 02d6 EF080000 		.4byte	0x8ef
 1686 02da E9020000 		.4byte	0x2e9
 1687 02de 10       		.uleb128 0x10
 1688 02df 01       		.uleb128 0x1
 1689 02e0 50       		.byte	0x50
 1690 02e1 01       		.uleb128 0x1
 1691 02e2 4E       		.byte	0x4e
 1692 02e3 10       		.uleb128 0x10
 1693 02e4 01       		.uleb128 0x1
 1694 02e5 51       		.byte	0x51
 1695 02e6 01       		.uleb128 0x1
 1696 02e7 33       		.byte	0x33
 1697 02e8 00       		.byte	0
 1698 02e9 0F       		.uleb128 0xf
 1699 02ea 66000000 		.4byte	.LVL3
 1700 02ee FA080000 		.4byte	0x8fa
 1701 02f2 FC020000 		.4byte	0x2fc
 1702 02f6 10       		.uleb128 0x10
 1703 02f7 01       		.uleb128 0x1
 1704 02f8 50       		.byte	0x50
 1705 02f9 01       		.uleb128 0x1
 1706 02fa 4E       		.byte	0x4e
 1707 02fb 00       		.byte	0
 1708 02fc 0F       		.uleb128 0xf
 1709 02fd 6E000000 		.4byte	.LVL4
 1710 0301 EF080000 		.4byte	0x8ef
 1711 0305 14030000 		.4byte	0x314
 1712 0309 10       		.uleb128 0x10
 1713 030a 01       		.uleb128 0x1
 1714 030b 50       		.byte	0x50
 1715 030c 01       		.uleb128 0x1
 1716 030d 4F       		.byte	0x4f
 1717 030e 10       		.uleb128 0x10
 1718 030f 01       		.uleb128 0x1
 1719 0310 51       		.byte	0x51
 1720 0311 01       		.uleb128 0x1
 1721 0312 33       		.byte	0x33
 1722 0313 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 76


 1723 0314 0F       		.uleb128 0xf
 1724 0315 76000000 		.4byte	.LVL5
 1725 0319 FA080000 		.4byte	0x8fa
 1726 031d 27030000 		.4byte	0x327
 1727 0321 10       		.uleb128 0x10
 1728 0322 01       		.uleb128 0x1
 1729 0323 50       		.byte	0x50
 1730 0324 01       		.uleb128 0x1
 1731 0325 4F       		.byte	0x4f
 1732 0326 00       		.byte	0
 1733 0327 0F       		.uleb128 0xf
 1734 0328 7E000000 		.4byte	.LVL6
 1735 032c EF080000 		.4byte	0x8ef
 1736 0330 3F030000 		.4byte	0x33f
 1737 0334 10       		.uleb128 0x10
 1738 0335 01       		.uleb128 0x1
 1739 0336 50       		.byte	0x50
 1740 0337 01       		.uleb128 0x1
 1741 0338 30       		.byte	0x30
 1742 0339 10       		.uleb128 0x10
 1743 033a 01       		.uleb128 0x1
 1744 033b 51       		.byte	0x51
 1745 033c 01       		.uleb128 0x1
 1746 033d 33       		.byte	0x33
 1747 033e 00       		.byte	0
 1748 033f 0F       		.uleb128 0xf
 1749 0340 86000000 		.4byte	.LVL7
 1750 0344 FA080000 		.4byte	0x8fa
 1751 0348 52030000 		.4byte	0x352
 1752 034c 10       		.uleb128 0x10
 1753 034d 01       		.uleb128 0x1
 1754 034e 50       		.byte	0x50
 1755 034f 01       		.uleb128 0x1
 1756 0350 30       		.byte	0x30
 1757 0351 00       		.byte	0
 1758 0352 0F       		.uleb128 0xf
 1759 0353 8E000000 		.4byte	.LVL8
 1760 0357 EF080000 		.4byte	0x8ef
 1761 035b 6A030000 		.4byte	0x36a
 1762 035f 10       		.uleb128 0x10
 1763 0360 01       		.uleb128 0x1
 1764 0361 50       		.byte	0x50
 1765 0362 01       		.uleb128 0x1
 1766 0363 35       		.byte	0x35
 1767 0364 10       		.uleb128 0x10
 1768 0365 01       		.uleb128 0x1
 1769 0366 51       		.byte	0x51
 1770 0367 01       		.uleb128 0x1
 1771 0368 33       		.byte	0x33
 1772 0369 00       		.byte	0
 1773 036a 12       		.uleb128 0x12
 1774 036b 96000000 		.4byte	.LVL9
 1775 036f FA080000 		.4byte	0x8fa
 1776 0373 10       		.uleb128 0x10
 1777 0374 01       		.uleb128 0x1
 1778 0375 50       		.byte	0x50
 1779 0376 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 77


 1780 0377 35       		.byte	0x35
 1781 0378 00       		.byte	0
 1782 0379 00       		.byte	0
 1783 037a 13       		.uleb128 0x13
 1784 037b 72020000 		.4byte	.LASF47
 1785 037f 01       		.byte	0x1
 1786 0380 CC01     		.2byte	0x1cc
 1787 0382 00000000 		.4byte	.LFB3
 1788 0386 D0000000 		.4byte	.LFE3-.LFB3
 1789 038a 01       		.uleb128 0x1
 1790 038b 9C       		.byte	0x9c
 1791 038c F4030000 		.4byte	0x3f4
 1792 0390 14       		.uleb128 0x14
 1793 0391 6B010000 		.4byte	.LASF48
 1794 0395 01       		.byte	0x1
 1795 0396 CC01     		.2byte	0x1cc
 1796 0398 6B000000 		.4byte	0x6b
 1797 039c 00000000 		.4byte	.LLST0
 1798 03a0 14       		.uleb128 0x14
 1799 03a1 1A050000 		.4byte	.LASF49
 1800 03a5 01       		.byte	0x1
 1801 03a6 CC01     		.2byte	0x1cc
 1802 03a8 6B000000 		.4byte	0x6b
 1803 03ac 21000000 		.4byte	.LLST1
 1804 03b0 15       		.uleb128 0x15
 1805 03b1 6900     		.ascii	"i\000"
 1806 03b3 01       		.byte	0x1
 1807 03b4 D301     		.2byte	0x1d3
 1808 03b6 6B000000 		.4byte	0x6b
 1809 03ba 42000000 		.4byte	.LLST2
 1810 03be 0F       		.uleb128 0xf
 1811 03bf 3E000000 		.4byte	.LVL17
 1812 03c3 05090000 		.4byte	0x905
 1813 03c7 D1030000 		.4byte	0x3d1
 1814 03cb 10       		.uleb128 0x10
 1815 03cc 01       		.uleb128 0x1
 1816 03cd 50       		.byte	0x50
 1817 03ce 01       		.uleb128 0x1
 1818 03cf 4E       		.byte	0x4e
 1819 03d0 00       		.byte	0
 1820 03d1 0F       		.uleb128 0xf
 1821 03d2 44000000 		.4byte	.LVL18
 1822 03d6 05090000 		.4byte	0x905
 1823 03da E4030000 		.4byte	0x3e4
 1824 03de 10       		.uleb128 0x10
 1825 03df 01       		.uleb128 0x1
 1826 03e0 50       		.byte	0x50
 1827 03e1 01       		.uleb128 0x1
 1828 03e2 30       		.byte	0x30
 1829 03e3 00       		.byte	0
 1830 03e4 12       		.uleb128 0x12
 1831 03e5 4A000000 		.4byte	.LVL19
 1832 03e9 05090000 		.4byte	0x905
 1833 03ed 10       		.uleb128 0x10
 1834 03ee 01       		.uleb128 0x1
 1835 03ef 50       		.byte	0x50
 1836 03f0 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 78


 1837 03f1 4F       		.byte	0x4f
 1838 03f2 00       		.byte	0
 1839 03f3 00       		.byte	0
 1840 03f4 0E       		.uleb128 0xe
 1841 03f5 2A050000 		.4byte	.LASF50
 1842 03f9 01       		.byte	0x1
 1843 03fa BA       		.byte	0xba
 1844 03fb 00000000 		.4byte	.LFB1
 1845 03ff 28000000 		.4byte	.LFE1-.LFB1
 1846 0403 01       		.uleb128 0x1
 1847 0404 9C       		.byte	0x9c
 1848 0405 47040000 		.4byte	0x447
 1849 0409 16       		.uleb128 0x16
 1850 040a 6B010000 		.4byte	.LASF48
 1851 040e 01       		.byte	0x1
 1852 040f BA       		.byte	0xba
 1853 0410 6B000000 		.4byte	0x6b
 1854 0414 6C000000 		.4byte	.LLST3
 1855 0418 16       		.uleb128 0x16
 1856 0419 1A050000 		.4byte	.LASF49
 1857 041d 01       		.byte	0x1
 1858 041e BA       		.byte	0xba
 1859 041f 6B000000 		.4byte	0x6b
 1860 0423 8D000000 		.4byte	.LLST4
 1861 0427 11       		.uleb128 0x11
 1862 0428 12000000 		.4byte	.LVL21
 1863 042c A0020000 		.4byte	0x2a0
 1864 0430 12       		.uleb128 0x12
 1865 0431 20000000 		.4byte	.LVL22
 1866 0435 7A030000 		.4byte	0x37a
 1867 0439 10       		.uleb128 0x10
 1868 043a 01       		.uleb128 0x1
 1869 043b 50       		.byte	0x50
 1870 043c 02       		.uleb128 0x2
 1871 043d 74       		.byte	0x74
 1872 043e 00       		.sleb128 0
 1873 043f 10       		.uleb128 0x10
 1874 0440 01       		.uleb128 0x1
 1875 0441 51       		.byte	0x51
 1876 0442 02       		.uleb128 0x2
 1877 0443 75       		.byte	0x75
 1878 0444 00       		.sleb128 0
 1879 0445 00       		.byte	0
 1880 0446 00       		.byte	0
 1881 0447 13       		.uleb128 0x13
 1882 0448 75050000 		.4byte	.LASF51
 1883 044c 01       		.byte	0x1
 1884 044d 9F02     		.2byte	0x29f
 1885 044f 00000000 		.4byte	.LFB4
 1886 0453 68000000 		.4byte	.LFE4-.LFB4
 1887 0457 01       		.uleb128 0x1
 1888 0458 9C       		.byte	0x9c
 1889 0459 6C040000 		.4byte	0x46c
 1890 045d 15       		.uleb128 0x15
 1891 045e 6900     		.ascii	"i\000"
 1892 0460 01       		.byte	0x1
 1893 0461 A502     		.2byte	0x2a5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 79


 1894 0463 6B000000 		.4byte	0x6b
 1895 0467 AE000000 		.4byte	.LLST5
 1896 046b 00       		.byte	0
 1897 046c 13       		.uleb128 0x13
 1898 046d FD010000 		.4byte	.LASF52
 1899 0471 01       		.byte	0x1
 1900 0472 D902     		.2byte	0x2d9
 1901 0474 00000000 		.4byte	.LFB5
 1902 0478 7C000000 		.4byte	.LFE5-.LFB5
 1903 047c 01       		.uleb128 0x1
 1904 047d 9C       		.byte	0x9c
 1905 047e DA040000 		.4byte	0x4da
 1906 0482 17       		.uleb128 0x17
 1907 0483 8B050000 		.4byte	.LASF53
 1908 0487 01       		.byte	0x1
 1909 0488 DB02     		.2byte	0x2db
 1910 048a 6B000000 		.4byte	0x6b
 1911 048e D8000000 		.4byte	.LLST6
 1912 0492 11       		.uleb128 0x11
 1913 0493 06000000 		.4byte	.LVL28
 1914 0497 10090000 		.4byte	0x910
 1915 049b 11       		.uleb128 0x11
 1916 049c 28000000 		.4byte	.LVL29
 1917 04a0 1B090000 		.4byte	0x91b
 1918 04a4 0F       		.uleb128 0xf
 1919 04a5 2E000000 		.4byte	.LVL30
 1920 04a9 26090000 		.4byte	0x926
 1921 04ad B7040000 		.4byte	0x4b7
 1922 04b1 10       		.uleb128 0x10
 1923 04b2 01       		.uleb128 0x1
 1924 04b3 50       		.byte	0x50
 1925 04b4 01       		.uleb128 0x1
 1926 04b5 4E       		.byte	0x4e
 1927 04b6 00       		.byte	0
 1928 04b7 0F       		.uleb128 0xf
 1929 04b8 34000000 		.4byte	.LVL31
 1930 04bc 26090000 		.4byte	0x926
 1931 04c0 CA040000 		.4byte	0x4ca
 1932 04c4 10       		.uleb128 0x10
 1933 04c5 01       		.uleb128 0x1
 1934 04c6 50       		.byte	0x50
 1935 04c7 01       		.uleb128 0x1
 1936 04c8 4F       		.byte	0x4f
 1937 04c9 00       		.byte	0
 1938 04ca 12       		.uleb128 0x12
 1939 04cb 3A000000 		.4byte	.LVL32
 1940 04cf 26090000 		.4byte	0x926
 1941 04d3 10       		.uleb128 0x10
 1942 04d4 01       		.uleb128 0x1
 1943 04d5 50       		.byte	0x50
 1944 04d6 01       		.uleb128 0x1
 1945 04d7 30       		.byte	0x30
 1946 04d8 00       		.byte	0
 1947 04d9 00       		.byte	0
 1948 04da 18       		.uleb128 0x18
 1949 04db 9C050000 		.4byte	.LASF55
 1950 04df 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 80


 1951 04e0 5103     		.2byte	0x351
 1952 04e2 6B000000 		.4byte	0x6b
 1953 04e6 00000000 		.4byte	.LFB6
 1954 04ea 1C000000 		.4byte	.LFE6-.LFB6
 1955 04ee 01       		.uleb128 0x1
 1956 04ef 9C       		.byte	0x9c
 1957 04f0 03050000 		.4byte	0x503
 1958 04f4 19       		.uleb128 0x19
 1959 04f5 6F030000 		.4byte	.LASF54
 1960 04f9 01       		.byte	0x1
 1961 04fa 5303     		.2byte	0x353
 1962 04fc 83000000 		.4byte	0x83
 1963 0500 01       		.uleb128 0x1
 1964 0501 53       		.byte	0x53
 1965 0502 00       		.byte	0
 1966 0503 1A       		.uleb128 0x1a
 1967 0504 1E020000 		.4byte	.LASF76
 1968 0508 01       		.byte	0x1
 1969 0509 6803     		.2byte	0x368
 1970 050b 6B000000 		.4byte	0x6b
 1971 050f 00000000 		.4byte	.LFB7
 1972 0513 0C000000 		.4byte	.LFE7-.LFB7
 1973 0517 01       		.uleb128 0x1
 1974 0518 9C       		.byte	0x9c
 1975 0519 18       		.uleb128 0x18
 1976 051a 8C010000 		.4byte	.LASF56
 1977 051e 01       		.byte	0x1
 1978 051f 8203     		.2byte	0x382
 1979 0521 6B000000 		.4byte	0x6b
 1980 0525 00000000 		.4byte	.LFB8
 1981 0529 1C000000 		.4byte	.LFE8-.LFB8
 1982 052d 01       		.uleb128 0x1
 1983 052e 9C       		.byte	0x9c
 1984 052f 44050000 		.4byte	0x544
 1985 0533 15       		.uleb128 0x15
 1986 0534 72657300 		.ascii	"res\000"
 1987 0538 01       		.byte	0x1
 1988 0539 8403     		.2byte	0x384
 1989 053b 6B000000 		.4byte	0x6b
 1990 053f EB000000 		.4byte	.LLST7
 1991 0543 00       		.byte	0
 1992 0544 18       		.uleb128 0x18
 1993 0545 E7050000 		.4byte	.LASF57
 1994 0549 01       		.byte	0x1
 1995 054a 9F03     		.2byte	0x39f
 1996 054c 6B000000 		.4byte	0x6b
 1997 0550 00000000 		.4byte	.LFB9
 1998 0554 0C000000 		.4byte	.LFE9-.LFB9
 1999 0558 01       		.uleb128 0x1
 2000 0559 9C       		.byte	0x9c
 2001 055a 6F050000 		.4byte	0x56f
 2002 055e 14       		.uleb128 0x14
 2003 055f 41050000 		.4byte	.LASF58
 2004 0563 01       		.byte	0x1
 2005 0564 9F03     		.2byte	0x39f
 2006 0566 6B000000 		.4byte	0x6b
 2007 056a 21010000 		.4byte	.LLST8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 81


 2008 056e 00       		.byte	0
 2009 056f 18       		.uleb128 0x18
 2010 0570 64050000 		.4byte	.LASF59
 2011 0574 01       		.byte	0x1
 2012 0575 BF03     		.2byte	0x3bf
 2013 0577 6B000000 		.4byte	0x6b
 2014 057b 00000000 		.4byte	.LFB10
 2015 057f 14000000 		.4byte	.LFE10-.LFB10
 2016 0583 01       		.uleb128 0x1
 2017 0584 9C       		.byte	0x9c
 2018 0585 9A050000 		.4byte	0x59a
 2019 0589 14       		.uleb128 0x14
 2020 058a 62010000 		.4byte	.LASF60
 2021 058e 01       		.byte	0x1
 2022 058f BF03     		.2byte	0x3bf
 2023 0591 6B000000 		.4byte	0x6b
 2024 0595 42010000 		.4byte	.LLST9
 2025 0599 00       		.byte	0
 2026 059a 18       		.uleb128 0x18
 2027 059b 01060000 		.4byte	.LASF61
 2028 059f 01       		.byte	0x1
 2029 05a0 D603     		.2byte	0x3d6
 2030 05a2 77000000 		.4byte	0x77
 2031 05a6 00000000 		.4byte	.LFB11
 2032 05aa 34000000 		.4byte	.LFE11-.LFB11
 2033 05ae 01       		.uleb128 0x1
 2034 05af 9C       		.byte	0x9c
 2035 05b0 D5050000 		.4byte	0x5d5
 2036 05b4 14       		.uleb128 0x14
 2037 05b5 62010000 		.4byte	.LASF60
 2038 05b9 01       		.byte	0x1
 2039 05ba D603     		.2byte	0x3d6
 2040 05bc 6B000000 		.4byte	0x6b
 2041 05c0 63010000 		.4byte	.LLST10
 2042 05c4 17       		.uleb128 0x17
 2043 05c5 F8010000 		.4byte	.LASF62
 2044 05c9 01       		.byte	0x1
 2045 05ca D803     		.2byte	0x3d8
 2046 05cc 77000000 		.4byte	0x77
 2047 05d0 9D010000 		.4byte	.LLST11
 2048 05d4 00       		.byte	0
 2049 05d5 13       		.uleb128 0x13
 2050 05d6 C8050000 		.4byte	.LASF63
 2051 05da 01       		.byte	0x1
 2052 05db 3E05     		.2byte	0x53e
 2053 05dd 00000000 		.4byte	.LFB12
 2054 05e1 9C000000 		.4byte	.LFE12-.LFB12
 2055 05e5 01       		.uleb128 0x1
 2056 05e6 9C       		.byte	0x9c
 2057 05e7 2E060000 		.4byte	0x62e
 2058 05eb 14       		.uleb128 0x14
 2059 05ec 62010000 		.4byte	.LASF60
 2060 05f0 01       		.byte	0x1
 2061 05f1 3E05     		.2byte	0x53e
 2062 05f3 6B000000 		.4byte	0x6b
 2063 05f7 FA010000 		.4byte	.LLST12
 2064 05fb 1B       		.uleb128 0x1b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 82


 2065 05fc 86020000 		.4byte	.LASF64
 2066 0600 01       		.byte	0x1
 2067 0601 3E05     		.2byte	0x53e
 2068 0603 2E060000 		.4byte	0x62e
 2069 0607 01       		.uleb128 0x1
 2070 0608 51       		.byte	0x51
 2071 0609 14       		.uleb128 0x14
 2072 060a 0E050000 		.4byte	.LASF65
 2073 060e 01       		.byte	0x1
 2074 060f 3E05     		.2byte	0x53e
 2075 0611 77000000 		.4byte	0x77
 2076 0615 1B020000 		.4byte	.LLST13
 2077 0619 1C       		.uleb128 0x1c
 2078 061a 00000000 		.4byte	.Ldebug_ranges0+0
 2079 061e 15       		.uleb128 0x15
 2080 061f 6900     		.ascii	"i\000"
 2081 0621 01       		.byte	0x1
 2082 0622 5305     		.2byte	0x553
 2083 0624 77000000 		.4byte	0x77
 2084 0628 47020000 		.4byte	.LLST14
 2085 062c 00       		.byte	0
 2086 062d 00       		.byte	0
 2087 062e 1D       		.uleb128 0x1d
 2088 062f 04       		.byte	0x4
 2089 0630 34060000 		.4byte	0x634
 2090 0634 1E       		.uleb128 0x1e
 2091 0635 6B000000 		.4byte	0x6b
 2092 0639 13       		.uleb128 0x13
 2093 063a B7040000 		.4byte	.LASF66
 2094 063e 01       		.byte	0x1
 2095 063f E408     		.2byte	0x8e4
 2096 0641 00000000 		.4byte	.LFB14
 2097 0645 30000000 		.4byte	.LFE14-.LFB14
 2098 0649 01       		.uleb128 0x1
 2099 064a 9C       		.byte	0x9c
 2100 064b 60060000 		.4byte	0x660
 2101 064f 14       		.uleb128 0x14
 2102 0650 62010000 		.4byte	.LASF60
 2103 0654 01       		.byte	0x1
 2104 0655 E408     		.2byte	0x8e4
 2105 0657 6B000000 		.4byte	0x6b
 2106 065b 70020000 		.4byte	.LLST15
 2107 065f 00       		.byte	0
 2108 0660 18       		.uleb128 0x18
 2109 0661 A2020000 		.4byte	.LASF67
 2110 0665 01       		.byte	0x1
 2111 0666 7506     		.2byte	0x675
 2112 0668 77000000 		.4byte	0x77
 2113 066c 00000000 		.4byte	.LFB13
 2114 0670 58000000 		.4byte	.LFE13-.LFB13
 2115 0674 01       		.uleb128 0x1
 2116 0675 9C       		.byte	0x9c
 2117 0676 FF060000 		.4byte	0x6ff
 2118 067a 14       		.uleb128 0x14
 2119 067b 62010000 		.4byte	.LASF60
 2120 067f 01       		.byte	0x1
 2121 0680 7506     		.2byte	0x675
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 83


 2122 0682 6B000000 		.4byte	0x6b
 2123 0686 91020000 		.4byte	.LLST16
 2124 068a 14       		.uleb128 0x14
 2125 068b 86020000 		.4byte	.LASF64
 2126 068f 01       		.byte	0x1
 2127 0690 7506     		.2byte	0x675
 2128 0692 FF060000 		.4byte	0x6ff
 2129 0696 CB020000 		.4byte	.LLST17
 2130 069a 14       		.uleb128 0x14
 2131 069b 0E050000 		.4byte	.LASF65
 2132 069f 01       		.byte	0x1
 2133 06a0 7506     		.2byte	0x675
 2134 06a2 77000000 		.4byte	0x77
 2135 06a6 0D030000 		.4byte	.LLST18
 2136 06aa 1F       		.uleb128 0x1f
 2137 06ab 24000000 		.4byte	.LBB4
 2138 06af 18000000 		.4byte	.LBE4-.LBB4
 2139 06b3 C6060000 		.4byte	0x6c6
 2140 06b7 15       		.uleb128 0x15
 2141 06b8 6900     		.ascii	"i\000"
 2142 06ba 01       		.byte	0x1
 2143 06bb 8206     		.2byte	0x682
 2144 06bd 77000000 		.4byte	0x77
 2145 06c1 4F030000 		.4byte	.LLST19
 2146 06c5 00       		.byte	0
 2147 06c6 0F       		.uleb128 0xf
 2148 06c7 18000000 		.4byte	.LVL65
 2149 06cb 9A050000 		.4byte	0x59a
 2150 06cf DA060000 		.4byte	0x6da
 2151 06d3 10       		.uleb128 0x10
 2152 06d4 01       		.uleb128 0x1
 2153 06d5 50       		.byte	0x50
 2154 06d6 02       		.uleb128 0x2
 2155 06d7 75       		.byte	0x75
 2156 06d8 00       		.sleb128 0
 2157 06d9 00       		.byte	0
 2158 06da 0F       		.uleb128 0xf
 2159 06db 22000000 		.4byte	.LVL66
 2160 06df 9A050000 		.4byte	0x59a
 2161 06e3 EE060000 		.4byte	0x6ee
 2162 06e7 10       		.uleb128 0x10
 2163 06e8 01       		.uleb128 0x1
 2164 06e9 50       		.byte	0x50
 2165 06ea 02       		.uleb128 0x2
 2166 06eb 75       		.byte	0x75
 2167 06ec 00       		.sleb128 0
 2168 06ed 00       		.byte	0
 2169 06ee 12       		.uleb128 0x12
 2170 06ef 42000000 		.4byte	.LVL71
 2171 06f3 39060000 		.4byte	0x639
 2172 06f7 10       		.uleb128 0x10
 2173 06f8 01       		.uleb128 0x1
 2174 06f9 50       		.byte	0x50
 2175 06fa 02       		.uleb128 0x2
 2176 06fb 75       		.byte	0x75
 2177 06fc 00       		.sleb128 0
 2178 06fd 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 84


 2179 06fe 00       		.byte	0
 2180 06ff 1D       		.uleb128 0x1d
 2181 0700 04       		.byte	0x4
 2182 0701 6B000000 		.4byte	0x6b
 2183 0705 13       		.uleb128 0x13
 2184 0706 B5050000 		.4byte	.LASF68
 2185 070a 01       		.byte	0x1
 2186 070b FC08     		.2byte	0x8fc
 2187 070d 00000000 		.4byte	.LFB15
 2188 0711 1C000000 		.4byte	.LFE15-.LFB15
 2189 0715 01       		.uleb128 0x1
 2190 0716 9C       		.byte	0x9c
 2191 0717 2C070000 		.4byte	0x72c
 2192 071b 14       		.uleb128 0x14
 2193 071c 62010000 		.4byte	.LASF60
 2194 0720 01       		.byte	0x1
 2195 0721 FC08     		.2byte	0x8fc
 2196 0723 6B000000 		.4byte	0x6b
 2197 0727 79030000 		.4byte	.LLST20
 2198 072b 00       		.byte	0
 2199 072c 13       		.uleb128 0x13
 2200 072d F6000000 		.4byte	.LASF69
 2201 0731 01       		.byte	0x1
 2202 0732 1A09     		.2byte	0x91a
 2203 0734 00000000 		.4byte	.LFB16
 2204 0738 0C000000 		.4byte	.LFE16-.LFB16
 2205 073c 01       		.uleb128 0x1
 2206 073d 9C       		.byte	0x9c
 2207 073e 51070000 		.4byte	0x751
 2208 0742 1B       		.uleb128 0x1b
 2209 0743 07050000 		.4byte	.LASF70
 2210 0747 01       		.byte	0x1
 2211 0748 1A09     		.2byte	0x91a
 2212 074a 6B000000 		.4byte	0x6b
 2213 074e 01       		.uleb128 0x1
 2214 074f 50       		.byte	0x50
 2215 0750 00       		.byte	0
 2216 0751 18       		.uleb128 0x18
 2217 0752 19010000 		.4byte	.LASF71
 2218 0756 01       		.byte	0x1
 2219 0757 3309     		.2byte	0x933
 2220 0759 6B000000 		.4byte	0x6b
 2221 075d 00000000 		.4byte	.LFB17
 2222 0761 24000000 		.4byte	.LFE17-.LFB17
 2223 0765 01       		.uleb128 0x1
 2224 0766 9C       		.byte	0x9c
 2225 0767 8B070000 		.4byte	0x78b
 2226 076b 14       		.uleb128 0x14
 2227 076c 62010000 		.4byte	.LASF60
 2228 0770 01       		.byte	0x1
 2229 0771 3309     		.2byte	0x933
 2230 0773 6B000000 		.4byte	0x6b
 2231 0777 9A030000 		.4byte	.LLST21
 2232 077b 15       		.uleb128 0x15
 2233 077c 637200   		.ascii	"cr\000"
 2234 077f 01       		.byte	0x1
 2235 0780 3509     		.2byte	0x935
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 85


 2236 0782 83000000 		.4byte	0x83
 2237 0786 D4030000 		.4byte	.LLST22
 2238 078a 00       		.byte	0
 2239 078b 13       		.uleb128 0x13
 2240 078c B4030000 		.4byte	.LASF72
 2241 0790 01       		.byte	0x1
 2242 0791 5C09     		.2byte	0x95c
 2243 0793 00000000 		.4byte	.LFB18
 2244 0797 24000000 		.4byte	.LFE18-.LFB18
 2245 079b 01       		.uleb128 0x1
 2246 079c 9C       		.byte	0x9c
 2247 079d B0070000 		.4byte	0x7b0
 2248 07a1 1B       		.uleb128 0x1b
 2249 07a2 5A020000 		.4byte	.LASF73
 2250 07a6 01       		.byte	0x1
 2251 07a7 5C09     		.2byte	0x95c
 2252 07a9 6B000000 		.4byte	0x6b
 2253 07ad 01       		.uleb128 0x1
 2254 07ae 50       		.byte	0x50
 2255 07af 00       		.byte	0
 2256 07b0 18       		.uleb128 0x18
 2257 07b1 D3010000 		.4byte	.LASF74
 2258 07b5 01       		.byte	0x1
 2259 07b6 9509     		.2byte	0x995
 2260 07b8 6B000000 		.4byte	0x6b
 2261 07bc 00000000 		.4byte	.LFB19
 2262 07c0 14000000 		.4byte	.LFE19-.LFB19
 2263 07c4 01       		.uleb128 0x1
 2264 07c5 9C       		.byte	0x9c
 2265 07c6 DB070000 		.4byte	0x7db
 2266 07ca 17       		.uleb128 0x17
 2267 07cb 12060000 		.4byte	.LASF75
 2268 07cf 01       		.byte	0x1
 2269 07d0 9709     		.2byte	0x997
 2270 07d2 6B000000 		.4byte	0x6b
 2271 07d6 0A040000 		.4byte	.LLST23
 2272 07da 00       		.byte	0
 2273 07db 1A       		.uleb128 0x1a
 2274 07dc E5020000 		.4byte	.LASF77
 2275 07e0 01       		.byte	0x1
 2276 07e1 AD09     		.2byte	0x9ad
 2277 07e3 6B000000 		.4byte	0x6b
 2278 07e7 00000000 		.4byte	.LFB20
 2279 07eb 10000000 		.4byte	.LFE20-.LFB20
 2280 07ef 01       		.uleb128 0x1
 2281 07f0 9C       		.byte	0x9c
 2282 07f1 20       		.uleb128 0x20
 2283 07f2 97030000 		.4byte	.LASF78
 2284 07f6 01       		.byte	0x1
 2285 07f7 BB09     		.2byte	0x9bb
 2286 07f9 00000000 		.4byte	.LFB21
 2287 07fd 10000000 		.4byte	.LFE21-.LFB21
 2288 0801 01       		.uleb128 0x1
 2289 0802 9C       		.byte	0x9c
 2290 0803 20       		.uleb128 0x20
 2291 0804 56040000 		.4byte	.LASF79
 2292 0808 01       		.byte	0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 86


 2293 0809 D109     		.2byte	0x9d1
 2294 080b 00000000 		.4byte	.LFB22
 2295 080f 10000000 		.4byte	.LFE22-.LFB22
 2296 0813 01       		.uleb128 0x1
 2297 0814 9C       		.byte	0x9c
 2298 0815 21       		.uleb128 0x21
 2299 0816 1D000000 		.4byte	.LASF80
 2300 081a 01       		.byte	0x1
 2301 081b 28       		.byte	0x28
 2302 081c 6B000000 		.4byte	0x6b
 2303 0820 05       		.uleb128 0x5
 2304 0821 03       		.byte	0x3
 2305 0822 00000000 		.4byte	USBFS_initVar
 2306 0826 22       		.uleb128 0x22
 2307 0827 FA040000 		.4byte	.LASF81
 2308 082b 03       		.byte	0x3
 2309 082c D802     		.2byte	0x2d8
 2310 082e A4000000 		.4byte	0xa4
 2311 0832 22       		.uleb128 0x22
 2312 0833 6A040000 		.4byte	.LASF82
 2313 0837 03       		.byte	0x3
 2314 0838 D902     		.2byte	0x2d9
 2315 083a A4000000 		.4byte	0xa4
 2316 083e 22       		.uleb128 0x22
 2317 083f D1020000 		.4byte	.LASF83
 2318 0843 03       		.byte	0x3
 2319 0844 DA02     		.2byte	0x2da
 2320 0846 A4000000 		.4byte	0xa4
 2321 084a 22       		.uleb128 0x22
 2322 084b 76030000 		.4byte	.LASF84
 2323 084f 03       		.byte	0x3
 2324 0850 DB02     		.2byte	0x2db
 2325 0852 A4000000 		.4byte	0xa4
 2326 0856 22       		.uleb128 0x22
 2327 0857 51050000 		.4byte	.LASF85
 2328 085b 03       		.byte	0x3
 2329 085c DC02     		.2byte	0x2dc
 2330 085e A4000000 		.4byte	0xa4
 2331 0862 0A       		.uleb128 0xa
 2332 0863 A4000000 		.4byte	0xa4
 2333 0867 72080000 		.4byte	0x872
 2334 086b 0B       		.uleb128 0xb
 2335 086c C1000000 		.4byte	0xc1
 2336 0870 00       		.byte	0
 2337 0871 00       		.byte	0
 2338 0872 22       		.uleb128 0x22
 2339 0873 2B000000 		.4byte	.LASF86
 2340 0877 03       		.byte	0x3
 2341 0878 E502     		.2byte	0x2e5
 2342 087a 7E080000 		.4byte	0x87e
 2343 087e 05       		.uleb128 0x5
 2344 087f 62080000 		.4byte	0x862
 2345 0883 23       		.uleb128 0x23
 2346 0884 BD010000 		.4byte	.LASF87
 2347 0888 04       		.byte	0x4
 2348 0889 7C       		.byte	0x7c
 2349 088a A4000000 		.4byte	0xa4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 87


 2350 088e 23       		.uleb128 0x23
 2351 088f CE040000 		.4byte	.LASF88
 2352 0893 04       		.byte	0x4
 2353 0894 7D       		.byte	0x7d
 2354 0895 99080000 		.4byte	0x899
 2355 0899 05       		.uleb128 0x5
 2356 089a 62080000 		.4byte	0x862
 2357 089e 23       		.uleb128 0x23
 2358 089f A9010000 		.4byte	.LASF89
 2359 08a3 04       		.byte	0x4
 2360 08a4 7F       		.byte	0x7f
 2361 08a5 A4000000 		.4byte	0xa4
 2362 08a9 0A       		.uleb128 0xa
 2363 08aa B9080000 		.4byte	0x8b9
 2364 08ae B9080000 		.4byte	0x8b9
 2365 08b2 0B       		.uleb128 0xb
 2366 08b3 C1000000 		.4byte	0xc1
 2367 08b7 08       		.byte	0x8
 2368 08b8 00       		.byte	0
 2369 08b9 05       		.uleb128 0x5
 2370 08ba 3D010000 		.4byte	0x13d
 2371 08be 23       		.uleb128 0x23
 2372 08bf 42040000 		.4byte	.LASF90
 2373 08c3 04       		.byte	0x4
 2374 08c4 83       		.byte	0x83
 2375 08c5 C9080000 		.4byte	0x8c9
 2376 08c9 05       		.uleb128 0x5
 2377 08ca A9080000 		.4byte	0x8a9
 2378 08ce 23       		.uleb128 0x23
 2379 08cf 96040000 		.4byte	.LASF91
 2380 08d3 04       		.byte	0x4
 2381 08d4 A5       		.byte	0xa5
 2382 08d5 A4000000 		.4byte	0xa4
 2383 08d9 24       		.uleb128 0x24
 2384 08da 49020000 		.4byte	.LASF92
 2385 08de 49020000 		.4byte	.LASF92
 2386 08e2 05       		.byte	0x5
 2387 08e3 DA       		.byte	0xda
 2388 08e4 24       		.uleb128 0x24
 2389 08e5 49030000 		.4byte	.LASF93
 2390 08e9 49030000 		.4byte	.LASF93
 2391 08ed 05       		.byte	0x5
 2392 08ee 64       		.byte	0x64
 2393 08ef 24       		.uleb128 0x24
 2394 08f0 1A040000 		.4byte	.LASF94
 2395 08f4 1A040000 		.4byte	.LASF94
 2396 08f8 05       		.byte	0x5
 2397 08f9 C0       		.byte	0xc0
 2398 08fa 24       		.uleb128 0x24
 2399 08fb 0F030000 		.4byte	.LASF95
 2400 08ff 0F030000 		.4byte	.LASF95
 2401 0903 05       		.byte	0x5
 2402 0904 BD       		.byte	0xbd
 2403 0905 24       		.uleb128 0x24
 2404 0906 AB040000 		.4byte	.LASF96
 2405 090a AB040000 		.4byte	.LASF96
 2406 090e 05       		.byte	0x5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 88


 2407 090f C3       		.byte	0xc3
 2408 0910 24       		.uleb128 0x24
 2409 0911 32030000 		.4byte	.LASF97
 2410 0915 32030000 		.4byte	.LASF97
 2411 0919 05       		.byte	0x5
 2412 091a E5       		.byte	0xe5
 2413 091b 24       		.uleb128 0x24
 2414 091c 07000000 		.4byte	.LASF98
 2415 0920 07000000 		.4byte	.LASF98
 2416 0924 05       		.byte	0x5
 2417 0925 E6       		.byte	0xe6
 2418 0926 24       		.uleb128 0x24
 2419 0927 11020000 		.4byte	.LASF99
 2420 092b 11020000 		.4byte	.LASF99
 2421 092f 05       		.byte	0x5
 2422 0930 C5       		.byte	0xc5
 2423 0931 00       		.byte	0
 2424              		.section	.debug_abbrev,"",%progbits
 2425              	.Ldebug_abbrev0:
 2426 0000 01       		.uleb128 0x1
 2427 0001 11       		.uleb128 0x11
 2428 0002 01       		.byte	0x1
 2429 0003 25       		.uleb128 0x25
 2430 0004 0E       		.uleb128 0xe
 2431 0005 13       		.uleb128 0x13
 2432 0006 0B       		.uleb128 0xb
 2433 0007 03       		.uleb128 0x3
 2434 0008 0E       		.uleb128 0xe
 2435 0009 1B       		.uleb128 0x1b
 2436 000a 0E       		.uleb128 0xe
 2437 000b 55       		.uleb128 0x55
 2438 000c 17       		.uleb128 0x17
 2439 000d 11       		.uleb128 0x11
 2440 000e 01       		.uleb128 0x1
 2441 000f 10       		.uleb128 0x10
 2442 0010 17       		.uleb128 0x17
 2443 0011 00       		.byte	0
 2444 0012 00       		.byte	0
 2445 0013 02       		.uleb128 0x2
 2446 0014 24       		.uleb128 0x24
 2447 0015 00       		.byte	0
 2448 0016 0B       		.uleb128 0xb
 2449 0017 0B       		.uleb128 0xb
 2450 0018 3E       		.uleb128 0x3e
 2451 0019 0B       		.uleb128 0xb
 2452 001a 03       		.uleb128 0x3
 2453 001b 0E       		.uleb128 0xe
 2454 001c 00       		.byte	0
 2455 001d 00       		.byte	0
 2456 001e 03       		.uleb128 0x3
 2457 001f 24       		.uleb128 0x24
 2458 0020 00       		.byte	0
 2459 0021 0B       		.uleb128 0xb
 2460 0022 0B       		.uleb128 0xb
 2461 0023 3E       		.uleb128 0x3e
 2462 0024 0B       		.uleb128 0xb
 2463 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 89


 2464 0026 08       		.uleb128 0x8
 2465 0027 00       		.byte	0
 2466 0028 00       		.byte	0
 2467 0029 04       		.uleb128 0x4
 2468 002a 16       		.uleb128 0x16
 2469 002b 00       		.byte	0
 2470 002c 03       		.uleb128 0x3
 2471 002d 0E       		.uleb128 0xe
 2472 002e 3A       		.uleb128 0x3a
 2473 002f 0B       		.uleb128 0xb
 2474 0030 3B       		.uleb128 0x3b
 2475 0031 05       		.uleb128 0x5
 2476 0032 49       		.uleb128 0x49
 2477 0033 13       		.uleb128 0x13
 2478 0034 00       		.byte	0
 2479 0035 00       		.byte	0
 2480 0036 05       		.uleb128 0x5
 2481 0037 35       		.uleb128 0x35
 2482 0038 00       		.byte	0
 2483 0039 49       		.uleb128 0x49
 2484 003a 13       		.uleb128 0x13
 2485 003b 00       		.byte	0
 2486 003c 00       		.byte	0
 2487 003d 06       		.uleb128 0x6
 2488 003e 13       		.uleb128 0x13
 2489 003f 01       		.byte	0x1
 2490 0040 0B       		.uleb128 0xb
 2491 0041 0B       		.uleb128 0xb
 2492 0042 3A       		.uleb128 0x3a
 2493 0043 0B       		.uleb128 0xb
 2494 0044 3B       		.uleb128 0x3b
 2495 0045 0B       		.uleb128 0xb
 2496 0046 01       		.uleb128 0x1
 2497 0047 13       		.uleb128 0x13
 2498 0048 00       		.byte	0
 2499 0049 00       		.byte	0
 2500 004a 07       		.uleb128 0x7
 2501 004b 0D       		.uleb128 0xd
 2502 004c 00       		.byte	0
 2503 004d 03       		.uleb128 0x3
 2504 004e 0E       		.uleb128 0xe
 2505 004f 3A       		.uleb128 0x3a
 2506 0050 0B       		.uleb128 0xb
 2507 0051 3B       		.uleb128 0x3b
 2508 0052 0B       		.uleb128 0xb
 2509 0053 49       		.uleb128 0x49
 2510 0054 13       		.uleb128 0x13
 2511 0055 38       		.uleb128 0x38
 2512 0056 0B       		.uleb128 0xb
 2513 0057 00       		.byte	0
 2514 0058 00       		.byte	0
 2515 0059 08       		.uleb128 0x8
 2516 005a 16       		.uleb128 0x16
 2517 005b 00       		.byte	0
 2518 005c 03       		.uleb128 0x3
 2519 005d 0E       		.uleb128 0xe
 2520 005e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 90


 2521 005f 0B       		.uleb128 0xb
 2522 0060 3B       		.uleb128 0x3b
 2523 0061 0B       		.uleb128 0xb
 2524 0062 49       		.uleb128 0x49
 2525 0063 13       		.uleb128 0x13
 2526 0064 00       		.byte	0
 2527 0065 00       		.byte	0
 2528 0066 09       		.uleb128 0x9
 2529 0067 0D       		.uleb128 0xd
 2530 0068 00       		.byte	0
 2531 0069 03       		.uleb128 0x3
 2532 006a 08       		.uleb128 0x8
 2533 006b 3A       		.uleb128 0x3a
 2534 006c 0B       		.uleb128 0xb
 2535 006d 3B       		.uleb128 0x3b
 2536 006e 0B       		.uleb128 0xb
 2537 006f 49       		.uleb128 0x49
 2538 0070 13       		.uleb128 0x13
 2539 0071 38       		.uleb128 0x38
 2540 0072 0B       		.uleb128 0xb
 2541 0073 00       		.byte	0
 2542 0074 00       		.byte	0
 2543 0075 0A       		.uleb128 0xa
 2544 0076 01       		.uleb128 0x1
 2545 0077 01       		.byte	0x1
 2546 0078 49       		.uleb128 0x49
 2547 0079 13       		.uleb128 0x13
 2548 007a 01       		.uleb128 0x1
 2549 007b 13       		.uleb128 0x13
 2550 007c 00       		.byte	0
 2551 007d 00       		.byte	0
 2552 007e 0B       		.uleb128 0xb
 2553 007f 21       		.uleb128 0x21
 2554 0080 00       		.byte	0
 2555 0081 49       		.uleb128 0x49
 2556 0082 13       		.uleb128 0x13
 2557 0083 2F       		.uleb128 0x2f
 2558 0084 0B       		.uleb128 0xb
 2559 0085 00       		.byte	0
 2560 0086 00       		.byte	0
 2561 0087 0C       		.uleb128 0xc
 2562 0088 13       		.uleb128 0x13
 2563 0089 01       		.byte	0x1
 2564 008a 0B       		.uleb128 0xb
 2565 008b 05       		.uleb128 0x5
 2566 008c 3A       		.uleb128 0x3a
 2567 008d 0B       		.uleb128 0xb
 2568 008e 3B       		.uleb128 0x3b
 2569 008f 05       		.uleb128 0x5
 2570 0090 01       		.uleb128 0x1
 2571 0091 13       		.uleb128 0x13
 2572 0092 00       		.byte	0
 2573 0093 00       		.byte	0
 2574 0094 0D       		.uleb128 0xd
 2575 0095 0D       		.uleb128 0xd
 2576 0096 00       		.byte	0
 2577 0097 03       		.uleb128 0x3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 91


 2578 0098 0E       		.uleb128 0xe
 2579 0099 3A       		.uleb128 0x3a
 2580 009a 0B       		.uleb128 0xb
 2581 009b 3B       		.uleb128 0x3b
 2582 009c 05       		.uleb128 0x5
 2583 009d 49       		.uleb128 0x49
 2584 009e 13       		.uleb128 0x13
 2585 009f 38       		.uleb128 0x38
 2586 00a0 0B       		.uleb128 0xb
 2587 00a1 00       		.byte	0
 2588 00a2 00       		.byte	0
 2589 00a3 0E       		.uleb128 0xe
 2590 00a4 2E       		.uleb128 0x2e
 2591 00a5 01       		.byte	0x1
 2592 00a6 3F       		.uleb128 0x3f
 2593 00a7 19       		.uleb128 0x19
 2594 00a8 03       		.uleb128 0x3
 2595 00a9 0E       		.uleb128 0xe
 2596 00aa 3A       		.uleb128 0x3a
 2597 00ab 0B       		.uleb128 0xb
 2598 00ac 3B       		.uleb128 0x3b
 2599 00ad 0B       		.uleb128 0xb
 2600 00ae 27       		.uleb128 0x27
 2601 00af 19       		.uleb128 0x19
 2602 00b0 11       		.uleb128 0x11
 2603 00b1 01       		.uleb128 0x1
 2604 00b2 12       		.uleb128 0x12
 2605 00b3 06       		.uleb128 0x6
 2606 00b4 40       		.uleb128 0x40
 2607 00b5 18       		.uleb128 0x18
 2608 00b6 9742     		.uleb128 0x2117
 2609 00b8 19       		.uleb128 0x19
 2610 00b9 01       		.uleb128 0x1
 2611 00ba 13       		.uleb128 0x13
 2612 00bb 00       		.byte	0
 2613 00bc 00       		.byte	0
 2614 00bd 0F       		.uleb128 0xf
 2615 00be 898201   		.uleb128 0x4109
 2616 00c1 01       		.byte	0x1
 2617 00c2 11       		.uleb128 0x11
 2618 00c3 01       		.uleb128 0x1
 2619 00c4 31       		.uleb128 0x31
 2620 00c5 13       		.uleb128 0x13
 2621 00c6 01       		.uleb128 0x1
 2622 00c7 13       		.uleb128 0x13
 2623 00c8 00       		.byte	0
 2624 00c9 00       		.byte	0
 2625 00ca 10       		.uleb128 0x10
 2626 00cb 8A8201   		.uleb128 0x410a
 2627 00ce 00       		.byte	0
 2628 00cf 02       		.uleb128 0x2
 2629 00d0 18       		.uleb128 0x18
 2630 00d1 9142     		.uleb128 0x2111
 2631 00d3 18       		.uleb128 0x18
 2632 00d4 00       		.byte	0
 2633 00d5 00       		.byte	0
 2634 00d6 11       		.uleb128 0x11
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 92


 2635 00d7 898201   		.uleb128 0x4109
 2636 00da 00       		.byte	0
 2637 00db 11       		.uleb128 0x11
 2638 00dc 01       		.uleb128 0x1
 2639 00dd 31       		.uleb128 0x31
 2640 00de 13       		.uleb128 0x13
 2641 00df 00       		.byte	0
 2642 00e0 00       		.byte	0
 2643 00e1 12       		.uleb128 0x12
 2644 00e2 898201   		.uleb128 0x4109
 2645 00e5 01       		.byte	0x1
 2646 00e6 11       		.uleb128 0x11
 2647 00e7 01       		.uleb128 0x1
 2648 00e8 31       		.uleb128 0x31
 2649 00e9 13       		.uleb128 0x13
 2650 00ea 00       		.byte	0
 2651 00eb 00       		.byte	0
 2652 00ec 13       		.uleb128 0x13
 2653 00ed 2E       		.uleb128 0x2e
 2654 00ee 01       		.byte	0x1
 2655 00ef 3F       		.uleb128 0x3f
 2656 00f0 19       		.uleb128 0x19
 2657 00f1 03       		.uleb128 0x3
 2658 00f2 0E       		.uleb128 0xe
 2659 00f3 3A       		.uleb128 0x3a
 2660 00f4 0B       		.uleb128 0xb
 2661 00f5 3B       		.uleb128 0x3b
 2662 00f6 05       		.uleb128 0x5
 2663 00f7 27       		.uleb128 0x27
 2664 00f8 19       		.uleb128 0x19
 2665 00f9 11       		.uleb128 0x11
 2666 00fa 01       		.uleb128 0x1
 2667 00fb 12       		.uleb128 0x12
 2668 00fc 06       		.uleb128 0x6
 2669 00fd 40       		.uleb128 0x40
 2670 00fe 18       		.uleb128 0x18
 2671 00ff 9742     		.uleb128 0x2117
 2672 0101 19       		.uleb128 0x19
 2673 0102 01       		.uleb128 0x1
 2674 0103 13       		.uleb128 0x13
 2675 0104 00       		.byte	0
 2676 0105 00       		.byte	0
 2677 0106 14       		.uleb128 0x14
 2678 0107 05       		.uleb128 0x5
 2679 0108 00       		.byte	0
 2680 0109 03       		.uleb128 0x3
 2681 010a 0E       		.uleb128 0xe
 2682 010b 3A       		.uleb128 0x3a
 2683 010c 0B       		.uleb128 0xb
 2684 010d 3B       		.uleb128 0x3b
 2685 010e 05       		.uleb128 0x5
 2686 010f 49       		.uleb128 0x49
 2687 0110 13       		.uleb128 0x13
 2688 0111 02       		.uleb128 0x2
 2689 0112 17       		.uleb128 0x17
 2690 0113 00       		.byte	0
 2691 0114 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 93


 2692 0115 15       		.uleb128 0x15
 2693 0116 34       		.uleb128 0x34
 2694 0117 00       		.byte	0
 2695 0118 03       		.uleb128 0x3
 2696 0119 08       		.uleb128 0x8
 2697 011a 3A       		.uleb128 0x3a
 2698 011b 0B       		.uleb128 0xb
 2699 011c 3B       		.uleb128 0x3b
 2700 011d 05       		.uleb128 0x5
 2701 011e 49       		.uleb128 0x49
 2702 011f 13       		.uleb128 0x13
 2703 0120 02       		.uleb128 0x2
 2704 0121 17       		.uleb128 0x17
 2705 0122 00       		.byte	0
 2706 0123 00       		.byte	0
 2707 0124 16       		.uleb128 0x16
 2708 0125 05       		.uleb128 0x5
 2709 0126 00       		.byte	0
 2710 0127 03       		.uleb128 0x3
 2711 0128 0E       		.uleb128 0xe
 2712 0129 3A       		.uleb128 0x3a
 2713 012a 0B       		.uleb128 0xb
 2714 012b 3B       		.uleb128 0x3b
 2715 012c 0B       		.uleb128 0xb
 2716 012d 49       		.uleb128 0x49
 2717 012e 13       		.uleb128 0x13
 2718 012f 02       		.uleb128 0x2
 2719 0130 17       		.uleb128 0x17
 2720 0131 00       		.byte	0
 2721 0132 00       		.byte	0
 2722 0133 17       		.uleb128 0x17
 2723 0134 34       		.uleb128 0x34
 2724 0135 00       		.byte	0
 2725 0136 03       		.uleb128 0x3
 2726 0137 0E       		.uleb128 0xe
 2727 0138 3A       		.uleb128 0x3a
 2728 0139 0B       		.uleb128 0xb
 2729 013a 3B       		.uleb128 0x3b
 2730 013b 05       		.uleb128 0x5
 2731 013c 49       		.uleb128 0x49
 2732 013d 13       		.uleb128 0x13
 2733 013e 02       		.uleb128 0x2
 2734 013f 17       		.uleb128 0x17
 2735 0140 00       		.byte	0
 2736 0141 00       		.byte	0
 2737 0142 18       		.uleb128 0x18
 2738 0143 2E       		.uleb128 0x2e
 2739 0144 01       		.byte	0x1
 2740 0145 3F       		.uleb128 0x3f
 2741 0146 19       		.uleb128 0x19
 2742 0147 03       		.uleb128 0x3
 2743 0148 0E       		.uleb128 0xe
 2744 0149 3A       		.uleb128 0x3a
 2745 014a 0B       		.uleb128 0xb
 2746 014b 3B       		.uleb128 0x3b
 2747 014c 05       		.uleb128 0x5
 2748 014d 27       		.uleb128 0x27
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 94


 2749 014e 19       		.uleb128 0x19
 2750 014f 49       		.uleb128 0x49
 2751 0150 13       		.uleb128 0x13
 2752 0151 11       		.uleb128 0x11
 2753 0152 01       		.uleb128 0x1
 2754 0153 12       		.uleb128 0x12
 2755 0154 06       		.uleb128 0x6
 2756 0155 40       		.uleb128 0x40
 2757 0156 18       		.uleb128 0x18
 2758 0157 9742     		.uleb128 0x2117
 2759 0159 19       		.uleb128 0x19
 2760 015a 01       		.uleb128 0x1
 2761 015b 13       		.uleb128 0x13
 2762 015c 00       		.byte	0
 2763 015d 00       		.byte	0
 2764 015e 19       		.uleb128 0x19
 2765 015f 34       		.uleb128 0x34
 2766 0160 00       		.byte	0
 2767 0161 03       		.uleb128 0x3
 2768 0162 0E       		.uleb128 0xe
 2769 0163 3A       		.uleb128 0x3a
 2770 0164 0B       		.uleb128 0xb
 2771 0165 3B       		.uleb128 0x3b
 2772 0166 05       		.uleb128 0x5
 2773 0167 49       		.uleb128 0x49
 2774 0168 13       		.uleb128 0x13
 2775 0169 02       		.uleb128 0x2
 2776 016a 18       		.uleb128 0x18
 2777 016b 00       		.byte	0
 2778 016c 00       		.byte	0
 2779 016d 1A       		.uleb128 0x1a
 2780 016e 2E       		.uleb128 0x2e
 2781 016f 00       		.byte	0
 2782 0170 3F       		.uleb128 0x3f
 2783 0171 19       		.uleb128 0x19
 2784 0172 03       		.uleb128 0x3
 2785 0173 0E       		.uleb128 0xe
 2786 0174 3A       		.uleb128 0x3a
 2787 0175 0B       		.uleb128 0xb
 2788 0176 3B       		.uleb128 0x3b
 2789 0177 05       		.uleb128 0x5
 2790 0178 27       		.uleb128 0x27
 2791 0179 19       		.uleb128 0x19
 2792 017a 49       		.uleb128 0x49
 2793 017b 13       		.uleb128 0x13
 2794 017c 11       		.uleb128 0x11
 2795 017d 01       		.uleb128 0x1
 2796 017e 12       		.uleb128 0x12
 2797 017f 06       		.uleb128 0x6
 2798 0180 40       		.uleb128 0x40
 2799 0181 18       		.uleb128 0x18
 2800 0182 9742     		.uleb128 0x2117
 2801 0184 19       		.uleb128 0x19
 2802 0185 00       		.byte	0
 2803 0186 00       		.byte	0
 2804 0187 1B       		.uleb128 0x1b
 2805 0188 05       		.uleb128 0x5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 95


 2806 0189 00       		.byte	0
 2807 018a 03       		.uleb128 0x3
 2808 018b 0E       		.uleb128 0xe
 2809 018c 3A       		.uleb128 0x3a
 2810 018d 0B       		.uleb128 0xb
 2811 018e 3B       		.uleb128 0x3b
 2812 018f 05       		.uleb128 0x5
 2813 0190 49       		.uleb128 0x49
 2814 0191 13       		.uleb128 0x13
 2815 0192 02       		.uleb128 0x2
 2816 0193 18       		.uleb128 0x18
 2817 0194 00       		.byte	0
 2818 0195 00       		.byte	0
 2819 0196 1C       		.uleb128 0x1c
 2820 0197 0B       		.uleb128 0xb
 2821 0198 01       		.byte	0x1
 2822 0199 55       		.uleb128 0x55
 2823 019a 17       		.uleb128 0x17
 2824 019b 00       		.byte	0
 2825 019c 00       		.byte	0
 2826 019d 1D       		.uleb128 0x1d
 2827 019e 0F       		.uleb128 0xf
 2828 019f 00       		.byte	0
 2829 01a0 0B       		.uleb128 0xb
 2830 01a1 0B       		.uleb128 0xb
 2831 01a2 49       		.uleb128 0x49
 2832 01a3 13       		.uleb128 0x13
 2833 01a4 00       		.byte	0
 2834 01a5 00       		.byte	0
 2835 01a6 1E       		.uleb128 0x1e
 2836 01a7 26       		.uleb128 0x26
 2837 01a8 00       		.byte	0
 2838 01a9 49       		.uleb128 0x49
 2839 01aa 13       		.uleb128 0x13
 2840 01ab 00       		.byte	0
 2841 01ac 00       		.byte	0
 2842 01ad 1F       		.uleb128 0x1f
 2843 01ae 0B       		.uleb128 0xb
 2844 01af 01       		.byte	0x1
 2845 01b0 11       		.uleb128 0x11
 2846 01b1 01       		.uleb128 0x1
 2847 01b2 12       		.uleb128 0x12
 2848 01b3 06       		.uleb128 0x6
 2849 01b4 01       		.uleb128 0x1
 2850 01b5 13       		.uleb128 0x13
 2851 01b6 00       		.byte	0
 2852 01b7 00       		.byte	0
 2853 01b8 20       		.uleb128 0x20
 2854 01b9 2E       		.uleb128 0x2e
 2855 01ba 00       		.byte	0
 2856 01bb 3F       		.uleb128 0x3f
 2857 01bc 19       		.uleb128 0x19
 2858 01bd 03       		.uleb128 0x3
 2859 01be 0E       		.uleb128 0xe
 2860 01bf 3A       		.uleb128 0x3a
 2861 01c0 0B       		.uleb128 0xb
 2862 01c1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 96


 2863 01c2 05       		.uleb128 0x5
 2864 01c3 27       		.uleb128 0x27
 2865 01c4 19       		.uleb128 0x19
 2866 01c5 11       		.uleb128 0x11
 2867 01c6 01       		.uleb128 0x1
 2868 01c7 12       		.uleb128 0x12
 2869 01c8 06       		.uleb128 0x6
 2870 01c9 40       		.uleb128 0x40
 2871 01ca 18       		.uleb128 0x18
 2872 01cb 9742     		.uleb128 0x2117
 2873 01cd 19       		.uleb128 0x19
 2874 01ce 00       		.byte	0
 2875 01cf 00       		.byte	0
 2876 01d0 21       		.uleb128 0x21
 2877 01d1 34       		.uleb128 0x34
 2878 01d2 00       		.byte	0
 2879 01d3 03       		.uleb128 0x3
 2880 01d4 0E       		.uleb128 0xe
 2881 01d5 3A       		.uleb128 0x3a
 2882 01d6 0B       		.uleb128 0xb
 2883 01d7 3B       		.uleb128 0x3b
 2884 01d8 0B       		.uleb128 0xb
 2885 01d9 49       		.uleb128 0x49
 2886 01da 13       		.uleb128 0x13
 2887 01db 3F       		.uleb128 0x3f
 2888 01dc 19       		.uleb128 0x19
 2889 01dd 02       		.uleb128 0x2
 2890 01de 18       		.uleb128 0x18
 2891 01df 00       		.byte	0
 2892 01e0 00       		.byte	0
 2893 01e1 22       		.uleb128 0x22
 2894 01e2 34       		.uleb128 0x34
 2895 01e3 00       		.byte	0
 2896 01e4 03       		.uleb128 0x3
 2897 01e5 0E       		.uleb128 0xe
 2898 01e6 3A       		.uleb128 0x3a
 2899 01e7 0B       		.uleb128 0xb
 2900 01e8 3B       		.uleb128 0x3b
 2901 01e9 05       		.uleb128 0x5
 2902 01ea 49       		.uleb128 0x49
 2903 01eb 13       		.uleb128 0x13
 2904 01ec 3F       		.uleb128 0x3f
 2905 01ed 19       		.uleb128 0x19
 2906 01ee 3C       		.uleb128 0x3c
 2907 01ef 19       		.uleb128 0x19
 2908 01f0 00       		.byte	0
 2909 01f1 00       		.byte	0
 2910 01f2 23       		.uleb128 0x23
 2911 01f3 34       		.uleb128 0x34
 2912 01f4 00       		.byte	0
 2913 01f5 03       		.uleb128 0x3
 2914 01f6 0E       		.uleb128 0xe
 2915 01f7 3A       		.uleb128 0x3a
 2916 01f8 0B       		.uleb128 0xb
 2917 01f9 3B       		.uleb128 0x3b
 2918 01fa 0B       		.uleb128 0xb
 2919 01fb 49       		.uleb128 0x49
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 97


 2920 01fc 13       		.uleb128 0x13
 2921 01fd 3F       		.uleb128 0x3f
 2922 01fe 19       		.uleb128 0x19
 2923 01ff 3C       		.uleb128 0x3c
 2924 0200 19       		.uleb128 0x19
 2925 0201 00       		.byte	0
 2926 0202 00       		.byte	0
 2927 0203 24       		.uleb128 0x24
 2928 0204 2E       		.uleb128 0x2e
 2929 0205 00       		.byte	0
 2930 0206 3F       		.uleb128 0x3f
 2931 0207 19       		.uleb128 0x19
 2932 0208 3C       		.uleb128 0x3c
 2933 0209 19       		.uleb128 0x19
 2934 020a 6E       		.uleb128 0x6e
 2935 020b 0E       		.uleb128 0xe
 2936 020c 03       		.uleb128 0x3
 2937 020d 0E       		.uleb128 0xe
 2938 020e 3A       		.uleb128 0x3a
 2939 020f 0B       		.uleb128 0xb
 2940 0210 3B       		.uleb128 0x3b
 2941 0211 0B       		.uleb128 0xb
 2942 0212 00       		.byte	0
 2943 0213 00       		.byte	0
 2944 0214 00       		.byte	0
 2945              		.section	.debug_loc,"",%progbits
 2946              	.Ldebug_loc0:
 2947              	.LLST0:
 2948 0000 00000000 		.4byte	.LVL10
 2949 0004 3A000000 		.4byte	.LVL16
 2950 0008 0100     		.2byte	0x1
 2951 000a 50       		.byte	0x50
 2952 000b 3A000000 		.4byte	.LVL16
 2953 000f D0000000 		.4byte	.LFE3
 2954 0013 0400     		.2byte	0x4
 2955 0015 F3       		.byte	0xf3
 2956 0016 01       		.uleb128 0x1
 2957 0017 50       		.byte	0x50
 2958 0018 9F       		.byte	0x9f
 2959 0019 00000000 		.4byte	0
 2960 001d 00000000 		.4byte	0
 2961              	.LLST1:
 2962 0021 00000000 		.4byte	.LVL10
 2963 0025 08000000 		.4byte	.LVL12
 2964 0029 0100     		.2byte	0x1
 2965 002b 51       		.byte	0x51
 2966 002c 08000000 		.4byte	.LVL12
 2967 0030 D0000000 		.4byte	.LFE3
 2968 0034 0400     		.2byte	0x4
 2969 0036 F3       		.byte	0xf3
 2970 0037 01       		.uleb128 0x1
 2971 0038 51       		.byte	0x51
 2972 0039 9F       		.byte	0x9f
 2973 003a 00000000 		.4byte	0
 2974 003e 00000000 		.4byte	0
 2975              	.LLST2:
 2976 0042 04000000 		.4byte	.LVL11
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 98


 2977 0046 08000000 		.4byte	.LVL12
 2978 004a 0200     		.2byte	0x2
 2979 004c 30       		.byte	0x30
 2980 004d 9F       		.byte	0x9f
 2981 004e 08000000 		.4byte	.LVL12
 2982 0052 10000000 		.4byte	.LVL13
 2983 0056 0100     		.2byte	0x1
 2984 0058 53       		.byte	0x53
 2985 0059 12000000 		.4byte	.LVL14
 2986 005d 18000000 		.4byte	.LVL15
 2987 0061 0100     		.2byte	0x1
 2988 0063 53       		.byte	0x53
 2989 0064 00000000 		.4byte	0
 2990 0068 00000000 		.4byte	0
 2991              	.LLST3:
 2992 006c 00000000 		.4byte	.LVL20
 2993 0070 11000000 		.4byte	.LVL21-1
 2994 0074 0100     		.2byte	0x1
 2995 0076 50       		.byte	0x50
 2996 0077 11000000 		.4byte	.LVL21-1
 2997 007b 28000000 		.4byte	.LFE1
 2998 007f 0400     		.2byte	0x4
 2999 0081 F3       		.byte	0xf3
 3000 0082 01       		.uleb128 0x1
 3001 0083 50       		.byte	0x50
 3002 0084 9F       		.byte	0x9f
 3003 0085 00000000 		.4byte	0
 3004 0089 00000000 		.4byte	0
 3005              	.LLST4:
 3006 008d 00000000 		.4byte	.LVL20
 3007 0091 11000000 		.4byte	.LVL21-1
 3008 0095 0100     		.2byte	0x1
 3009 0097 51       		.byte	0x51
 3010 0098 11000000 		.4byte	.LVL21-1
 3011 009c 28000000 		.4byte	.LFE1
 3012 00a0 0400     		.2byte	0x4
 3013 00a2 F3       		.byte	0xf3
 3014 00a3 01       		.uleb128 0x1
 3015 00a4 51       		.byte	0x51
 3016 00a5 9F       		.byte	0x9f
 3017 00a6 00000000 		.4byte	0
 3018 00aa 00000000 		.4byte	0
 3019              	.LLST5:
 3020 00ae 00000000 		.4byte	.LVL23
 3021 00b2 04000000 		.4byte	.LVL24
 3022 00b6 0200     		.2byte	0x2
 3023 00b8 30       		.byte	0x30
 3024 00b9 9F       		.byte	0x9f
 3025 00ba 04000000 		.4byte	.LVL24
 3026 00be 0C000000 		.4byte	.LVL25
 3027 00c2 0100     		.2byte	0x1
 3028 00c4 53       		.byte	0x53
 3029 00c5 0E000000 		.4byte	.LVL26
 3030 00c9 14000000 		.4byte	.LVL27
 3031 00cd 0100     		.2byte	0x1
 3032 00cf 53       		.byte	0x53
 3033 00d0 00000000 		.4byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 99


 3034 00d4 00000000 		.4byte	0
 3035              	.LLST6:
 3036 00d8 06000000 		.4byte	.LVL28
 3037 00dc 27000000 		.4byte	.LVL29-1
 3038 00e0 0100     		.2byte	0x1
 3039 00e2 50       		.byte	0x50
 3040 00e3 00000000 		.4byte	0
 3041 00e7 00000000 		.4byte	0
 3042              	.LLST7:
 3043 00eb 00000000 		.4byte	.LVL34
 3044 00ef 0E000000 		.4byte	.LVL35
 3045 00f3 0200     		.2byte	0x2
 3046 00f5 30       		.byte	0x30
 3047 00f6 9F       		.byte	0x9f
 3048 00f7 0E000000 		.4byte	.LVL35
 3049 00fb 14000000 		.4byte	.LVL36
 3050 00ff 0100     		.2byte	0x1
 3051 0101 50       		.byte	0x50
 3052 0102 14000000 		.4byte	.LVL36
 3053 0106 16000000 		.4byte	.LVL37
 3054 010a 0200     		.2byte	0x2
 3055 010c 30       		.byte	0x30
 3056 010d 9F       		.byte	0x9f
 3057 010e 16000000 		.4byte	.LVL37
 3058 0112 1C000000 		.4byte	.LFE8
 3059 0116 0100     		.2byte	0x1
 3060 0118 50       		.byte	0x50
 3061 0119 00000000 		.4byte	0
 3062 011d 00000000 		.4byte	0
 3063              	.LLST8:
 3064 0121 00000000 		.4byte	.LVL38
 3065 0125 04000000 		.4byte	.LVL39
 3066 0129 0100     		.2byte	0x1
 3067 012b 50       		.byte	0x50
 3068 012c 04000000 		.4byte	.LVL39
 3069 0130 0C000000 		.4byte	.LFE9
 3070 0134 0400     		.2byte	0x4
 3071 0136 F3       		.byte	0xf3
 3072 0137 01       		.uleb128 0x1
 3073 0138 50       		.byte	0x50
 3074 0139 9F       		.byte	0x9f
 3075 013a 00000000 		.4byte	0
 3076 013e 00000000 		.4byte	0
 3077              	.LLST9:
 3078 0142 00000000 		.4byte	.LVL40
 3079 0146 04000000 		.4byte	.LVL41
 3080 014a 0100     		.2byte	0x1
 3081 014c 50       		.byte	0x50
 3082 014d 04000000 		.4byte	.LVL41
 3083 0151 14000000 		.4byte	.LFE10
 3084 0155 0400     		.2byte	0x4
 3085 0157 F3       		.byte	0xf3
 3086 0158 01       		.uleb128 0x1
 3087 0159 50       		.byte	0x50
 3088 015a 9F       		.byte	0x9f
 3089 015b 00000000 		.4byte	0
 3090 015f 00000000 		.4byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 100


 3091              	.LLST10:
 3092 0163 00000000 		.4byte	.LVL42
 3093 0167 0E000000 		.4byte	.LVL43
 3094 016b 0100     		.2byte	0x1
 3095 016d 50       		.byte	0x50
 3096 016e 0E000000 		.4byte	.LVL43
 3097 0172 2A000000 		.4byte	.LVL49
 3098 0176 0400     		.2byte	0x4
 3099 0178 F3       		.byte	0xf3
 3100 0179 01       		.uleb128 0x1
 3101 017a 50       		.byte	0x50
 3102 017b 9F       		.byte	0x9f
 3103 017c 2A000000 		.4byte	.LVL49
 3104 0180 2C000000 		.4byte	.LVL50
 3105 0184 0100     		.2byte	0x1
 3106 0186 50       		.byte	0x50
 3107 0187 2C000000 		.4byte	.LVL50
 3108 018b 34000000 		.4byte	.LFE11
 3109 018f 0400     		.2byte	0x4
 3110 0191 F3       		.byte	0xf3
 3111 0192 01       		.uleb128 0x1
 3112 0193 50       		.byte	0x50
 3113 0194 9F       		.byte	0x9f
 3114 0195 00000000 		.4byte	0
 3115 0199 00000000 		.4byte	0
 3116              	.LLST11:
 3117 019d 00000000 		.4byte	.LVL42
 3118 01a1 10000000 		.4byte	.LVL44
 3119 01a5 0200     		.2byte	0x2
 3120 01a7 30       		.byte	0x30
 3121 01a8 9F       		.byte	0x9f
 3122 01a9 10000000 		.4byte	.LVL44
 3123 01ad 12000000 		.4byte	.LVL45
 3124 01b1 0500     		.2byte	0x5
 3125 01b3 70       		.byte	0x70
 3126 01b4 00       		.sleb128 0
 3127 01b5 3F       		.byte	0x3f
 3128 01b6 1A       		.byte	0x1a
 3129 01b7 9F       		.byte	0x9f
 3130 01b8 24000000 		.4byte	.LVL46
 3131 01bc 26000000 		.4byte	.LVL47
 3132 01c0 0100     		.2byte	0x1
 3133 01c2 50       		.byte	0x50
 3134 01c3 26000000 		.4byte	.LVL47
 3135 01c7 28000000 		.4byte	.LVL48
 3136 01cb 0300     		.2byte	0x3
 3137 01cd 70       		.byte	0x70
 3138 01ce 02       		.sleb128 2
 3139 01cf 9F       		.byte	0x9f
 3140 01d0 28000000 		.4byte	.LVL48
 3141 01d4 2A000000 		.4byte	.LVL49
 3142 01d8 0100     		.2byte	0x1
 3143 01da 50       		.byte	0x50
 3144 01db 2A000000 		.4byte	.LVL49
 3145 01df 2C000000 		.4byte	.LVL50
 3146 01e3 0200     		.2byte	0x2
 3147 01e5 30       		.byte	0x30
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 101


 3148 01e6 9F       		.byte	0x9f
 3149 01e7 2C000000 		.4byte	.LVL50
 3150 01eb 34000000 		.4byte	.LFE11
 3151 01ef 0100     		.2byte	0x1
 3152 01f1 50       		.byte	0x50
 3153 01f2 00000000 		.4byte	0
 3154 01f6 00000000 		.4byte	0
 3155              	.LLST12:
 3156 01fa 00000000 		.4byte	.LVL51
 3157 01fe 86000000 		.4byte	.LVL61
 3158 0202 0100     		.2byte	0x1
 3159 0204 50       		.byte	0x50
 3160 0205 86000000 		.4byte	.LVL61
 3161 0209 9C000000 		.4byte	.LFE12
 3162 020d 0400     		.2byte	0x4
 3163 020f F3       		.byte	0xf3
 3164 0210 01       		.uleb128 0x1
 3165 0211 50       		.byte	0x50
 3166 0212 9F       		.byte	0x9f
 3167 0213 00000000 		.4byte	0
 3168 0217 00000000 		.4byte	0
 3169              	.LLST13:
 3170 021b 00000000 		.4byte	.LVL51
 3171 021f 24000000 		.4byte	.LVL52
 3172 0223 0100     		.2byte	0x1
 3173 0225 52       		.byte	0x52
 3174 0226 24000000 		.4byte	.LVL52
 3175 022a 36000000 		.4byte	.LVL53
 3176 022e 0400     		.2byte	0x4
 3177 0230 F3       		.byte	0xf3
 3178 0231 01       		.uleb128 0x1
 3179 0232 52       		.byte	0x52
 3180 0233 9F       		.byte	0x9f
 3181 0234 36000000 		.4byte	.LVL53
 3182 0238 74000000 		.4byte	.LVL60
 3183 023c 0100     		.2byte	0x1
 3184 023e 52       		.byte	0x52
 3185 023f 00000000 		.4byte	0
 3186 0243 00000000 		.4byte	0
 3187              	.LLST14:
 3188 0247 5A000000 		.4byte	.LVL54
 3189 024b 68000000 		.4byte	.LVL55
 3190 024f 0100     		.2byte	0x1
 3191 0251 53       		.byte	0x53
 3192 0252 6A000000 		.4byte	.LVL56
 3193 0256 6C000000 		.4byte	.LVL57
 3194 025a 0100     		.2byte	0x1
 3195 025c 53       		.byte	0x53
 3196 025d 6E000000 		.4byte	.LVL58
 3197 0261 72000000 		.4byte	.LVL59
 3198 0265 0100     		.2byte	0x1
 3199 0267 53       		.byte	0x53
 3200 0268 00000000 		.4byte	0
 3201 026c 00000000 		.4byte	0
 3202              	.LLST15:
 3203 0270 00000000 		.4byte	.LVL62
 3204 0274 1C000000 		.4byte	.LVL63
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 102


 3205 0278 0100     		.2byte	0x1
 3206 027a 50       		.byte	0x50
 3207 027b 1C000000 		.4byte	.LVL63
 3208 027f 30000000 		.4byte	.LFE14
 3209 0283 0400     		.2byte	0x4
 3210 0285 F3       		.byte	0xf3
 3211 0286 01       		.uleb128 0x1
 3212 0287 50       		.byte	0x50
 3213 0288 9F       		.byte	0x9f
 3214 0289 00000000 		.4byte	0
 3215 028d 00000000 		.4byte	0
 3216              	.LLST16:
 3217 0291 00000000 		.4byte	.LVL64
 3218 0295 17000000 		.4byte	.LVL65-1
 3219 0299 0100     		.2byte	0x1
 3220 029b 50       		.byte	0x50
 3221 029c 17000000 		.4byte	.LVL65-1
 3222 02a0 44000000 		.4byte	.LVL72
 3223 02a4 0400     		.2byte	0x4
 3224 02a6 F3       		.byte	0xf3
 3225 02a7 01       		.uleb128 0x1
 3226 02a8 50       		.byte	0x50
 3227 02a9 9F       		.byte	0x9f
 3228 02aa 44000000 		.4byte	.LVL72
 3229 02ae 4E000000 		.4byte	.LVL73
 3230 02b2 0100     		.2byte	0x1
 3231 02b4 50       		.byte	0x50
 3232 02b5 4E000000 		.4byte	.LVL73
 3233 02b9 58000000 		.4byte	.LFE13
 3234 02bd 0400     		.2byte	0x4
 3235 02bf F3       		.byte	0xf3
 3236 02c0 01       		.uleb128 0x1
 3237 02c1 50       		.byte	0x50
 3238 02c2 9F       		.byte	0x9f
 3239 02c3 00000000 		.4byte	0
 3240 02c7 00000000 		.4byte	0
 3241              	.LLST17:
 3242 02cb 00000000 		.4byte	.LVL64
 3243 02cf 17000000 		.4byte	.LVL65-1
 3244 02d3 0100     		.2byte	0x1
 3245 02d5 51       		.byte	0x51
 3246 02d6 17000000 		.4byte	.LVL65-1
 3247 02da 44000000 		.4byte	.LVL72
 3248 02de 0100     		.2byte	0x1
 3249 02e0 56       		.byte	0x56
 3250 02e1 44000000 		.4byte	.LVL72
 3251 02e5 4E000000 		.4byte	.LVL73
 3252 02e9 0100     		.2byte	0x1
 3253 02eb 51       		.byte	0x51
 3254 02ec 4E000000 		.4byte	.LVL73
 3255 02f0 50000000 		.4byte	.LVL75
 3256 02f4 0100     		.2byte	0x1
 3257 02f6 56       		.byte	0x56
 3258 02f7 50000000 		.4byte	.LVL75
 3259 02fb 58000000 		.4byte	.LFE13
 3260 02ff 0400     		.2byte	0x4
 3261 0301 F3       		.byte	0xf3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 103


 3262 0302 01       		.uleb128 0x1
 3263 0303 51       		.byte	0x51
 3264 0304 9F       		.byte	0x9f
 3265 0305 00000000 		.4byte	0
 3266 0309 00000000 		.4byte	0
 3267              	.LLST18:
 3268 030d 00000000 		.4byte	.LVL64
 3269 0311 17000000 		.4byte	.LVL65-1
 3270 0315 0100     		.2byte	0x1
 3271 0317 52       		.byte	0x52
 3272 0318 17000000 		.4byte	.LVL65-1
 3273 031c 24000000 		.4byte	.LVL67
 3274 0320 0400     		.2byte	0x4
 3275 0322 F3       		.byte	0xf3
 3276 0323 01       		.uleb128 0x1
 3277 0324 52       		.byte	0x52
 3278 0325 9F       		.byte	0x9f
 3279 0326 24000000 		.4byte	.LVL67
 3280 032a 44000000 		.4byte	.LVL72
 3281 032e 0100     		.2byte	0x1
 3282 0330 54       		.byte	0x54
 3283 0331 44000000 		.4byte	.LVL72
 3284 0335 4E000000 		.4byte	.LVL73
 3285 0339 0100     		.2byte	0x1
 3286 033b 52       		.byte	0x52
 3287 033c 4E000000 		.4byte	.LVL73
 3288 0340 50000000 		.4byte	.LVL74
 3289 0344 0100     		.2byte	0x1
 3290 0346 54       		.byte	0x54
 3291 0347 00000000 		.4byte	0
 3292 034b 00000000 		.4byte	0
 3293              	.LLST19:
 3294 034f 24000000 		.4byte	.LVL67
 3295 0353 28000000 		.4byte	.LVL68
 3296 0357 0200     		.2byte	0x2
 3297 0359 30       		.byte	0x30
 3298 035a 9F       		.byte	0x9f
 3299 035b 28000000 		.4byte	.LVL68
 3300 035f 36000000 		.4byte	.LVL69
 3301 0363 0100     		.2byte	0x1
 3302 0365 53       		.byte	0x53
 3303 0366 38000000 		.4byte	.LVL70
 3304 036a 41000000 		.4byte	.LVL71-1
 3305 036e 0100     		.2byte	0x1
 3306 0370 53       		.byte	0x53
 3307 0371 00000000 		.4byte	0
 3308 0375 00000000 		.4byte	0
 3309              	.LLST20:
 3310 0379 00000000 		.4byte	.LVL76
 3311 037d 0A000000 		.4byte	.LVL77
 3312 0381 0100     		.2byte	0x1
 3313 0383 50       		.byte	0x50
 3314 0384 0A000000 		.4byte	.LVL77
 3315 0388 1C000000 		.4byte	.LFE15
 3316 038c 0400     		.2byte	0x4
 3317 038e F3       		.byte	0xf3
 3318 038f 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 104


 3319 0390 50       		.byte	0x50
 3320 0391 9F       		.byte	0x9f
 3321 0392 00000000 		.4byte	0
 3322 0396 00000000 		.4byte	0
 3323              	.LLST21:
 3324 039a 00000000 		.4byte	.LVL79
 3325 039e 0A000000 		.4byte	.LVL80
 3326 03a2 0100     		.2byte	0x1
 3327 03a4 50       		.byte	0x50
 3328 03a5 0A000000 		.4byte	.LVL80
 3329 03a9 18000000 		.4byte	.LVL82
 3330 03ad 0400     		.2byte	0x4
 3331 03af F3       		.byte	0xf3
 3332 03b0 01       		.uleb128 0x1
 3333 03b1 50       		.byte	0x50
 3334 03b2 9F       		.byte	0x9f
 3335 03b3 18000000 		.4byte	.LVL82
 3336 03b7 1A000000 		.4byte	.LVL83
 3337 03bb 0100     		.2byte	0x1
 3338 03bd 50       		.byte	0x50
 3339 03be 1A000000 		.4byte	.LVL83
 3340 03c2 24000000 		.4byte	.LFE17
 3341 03c6 0400     		.2byte	0x4
 3342 03c8 F3       		.byte	0xf3
 3343 03c9 01       		.uleb128 0x1
 3344 03ca 50       		.byte	0x50
 3345 03cb 9F       		.byte	0x9f
 3346 03cc 00000000 		.4byte	0
 3347 03d0 00000000 		.4byte	0
 3348              	.LLST22:
 3349 03d4 00000000 		.4byte	.LVL79
 3350 03d8 16000000 		.4byte	.LVL81
 3351 03dc 0200     		.2byte	0x2
 3352 03de 30       		.byte	0x30
 3353 03df 9F       		.byte	0x9f
 3354 03e0 16000000 		.4byte	.LVL81
 3355 03e4 18000000 		.4byte	.LVL82
 3356 03e8 0100     		.2byte	0x1
 3357 03ea 50       		.byte	0x50
 3358 03eb 18000000 		.4byte	.LVL82
 3359 03ef 1A000000 		.4byte	.LVL83
 3360 03f3 0200     		.2byte	0x2
 3361 03f5 30       		.byte	0x30
 3362 03f6 9F       		.byte	0x9f
 3363 03f7 1A000000 		.4byte	.LVL83
 3364 03fb 1C000000 		.4byte	.LVL84
 3365 03ff 0100     		.2byte	0x1
 3366 0401 50       		.byte	0x50
 3367 0402 00000000 		.4byte	0
 3368 0406 00000000 		.4byte	0
 3369              	.LLST23:
 3370 040a 00000000 		.4byte	.LVL86
 3371 040e 0E000000 		.4byte	.LVL87
 3372 0412 0200     		.2byte	0x2
 3373 0414 30       		.byte	0x30
 3374 0415 9F       		.byte	0x9f
 3375 0416 0E000000 		.4byte	.LVL87
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 105


 3376 041a 14000000 		.4byte	.LFE19
 3377 041e 0100     		.2byte	0x1
 3378 0420 50       		.byte	0x50
 3379 0421 00000000 		.4byte	0
 3380 0425 00000000 		.4byte	0
 3381              		.section	.debug_aranges,"",%progbits
 3382 0000 C4000000 		.4byte	0xc4
 3383 0004 0200     		.2byte	0x2
 3384 0006 00000000 		.4byte	.Ldebug_info0
 3385 000a 04       		.byte	0x4
 3386 000b 00       		.byte	0
 3387 000c 0000     		.2byte	0
 3388 000e 0000     		.2byte	0
 3389 0010 00000000 		.4byte	.LFB2
 3390 0014 D0000000 		.4byte	.LFE2-.LFB2
 3391 0018 00000000 		.4byte	.LFB3
 3392 001c D0000000 		.4byte	.LFE3-.LFB3
 3393 0020 00000000 		.4byte	.LFB1
 3394 0024 28000000 		.4byte	.LFE1-.LFB1
 3395 0028 00000000 		.4byte	.LFB4
 3396 002c 68000000 		.4byte	.LFE4-.LFB4
 3397 0030 00000000 		.4byte	.LFB5
 3398 0034 7C000000 		.4byte	.LFE5-.LFB5
 3399 0038 00000000 		.4byte	.LFB6
 3400 003c 1C000000 		.4byte	.LFE6-.LFB6
 3401 0040 00000000 		.4byte	.LFB7
 3402 0044 0C000000 		.4byte	.LFE7-.LFB7
 3403 0048 00000000 		.4byte	.LFB8
 3404 004c 1C000000 		.4byte	.LFE8-.LFB8
 3405 0050 00000000 		.4byte	.LFB9
 3406 0054 0C000000 		.4byte	.LFE9-.LFB9
 3407 0058 00000000 		.4byte	.LFB10
 3408 005c 14000000 		.4byte	.LFE10-.LFB10
 3409 0060 00000000 		.4byte	.LFB11
 3410 0064 34000000 		.4byte	.LFE11-.LFB11
 3411 0068 00000000 		.4byte	.LFB12
 3412 006c 9C000000 		.4byte	.LFE12-.LFB12
 3413 0070 00000000 		.4byte	.LFB14
 3414 0074 30000000 		.4byte	.LFE14-.LFB14
 3415 0078 00000000 		.4byte	.LFB13
 3416 007c 58000000 		.4byte	.LFE13-.LFB13
 3417 0080 00000000 		.4byte	.LFB15
 3418 0084 1C000000 		.4byte	.LFE15-.LFB15
 3419 0088 00000000 		.4byte	.LFB16
 3420 008c 0C000000 		.4byte	.LFE16-.LFB16
 3421 0090 00000000 		.4byte	.LFB17
 3422 0094 24000000 		.4byte	.LFE17-.LFB17
 3423 0098 00000000 		.4byte	.LFB18
 3424 009c 24000000 		.4byte	.LFE18-.LFB18
 3425 00a0 00000000 		.4byte	.LFB19
 3426 00a4 14000000 		.4byte	.LFE19-.LFB19
 3427 00a8 00000000 		.4byte	.LFB20
 3428 00ac 10000000 		.4byte	.LFE20-.LFB20
 3429 00b0 00000000 		.4byte	.LFB21
 3430 00b4 10000000 		.4byte	.LFE21-.LFB21
 3431 00b8 00000000 		.4byte	.LFB22
 3432 00bc 10000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 106


 3433 00c0 00000000 		.4byte	0
 3434 00c4 00000000 		.4byte	0
 3435              		.section	.debug_ranges,"",%progbits
 3436              	.Ldebug_ranges0:
 3437 0000 58000000 		.4byte	.LBB2
 3438 0004 6C000000 		.4byte	.LBE2
 3439 0008 6E000000 		.4byte	.LBB3
 3440 000c 72000000 		.4byte	.LBE3
 3441 0010 00000000 		.4byte	0
 3442 0014 00000000 		.4byte	0
 3443 0018 00000000 		.4byte	.LFB2
 3444 001c D0000000 		.4byte	.LFE2
 3445 0020 00000000 		.4byte	.LFB3
 3446 0024 D0000000 		.4byte	.LFE3
 3447 0028 00000000 		.4byte	.LFB1
 3448 002c 28000000 		.4byte	.LFE1
 3449 0030 00000000 		.4byte	.LFB4
 3450 0034 68000000 		.4byte	.LFE4
 3451 0038 00000000 		.4byte	.LFB5
 3452 003c 7C000000 		.4byte	.LFE5
 3453 0040 00000000 		.4byte	.LFB6
 3454 0044 1C000000 		.4byte	.LFE6
 3455 0048 00000000 		.4byte	.LFB7
 3456 004c 0C000000 		.4byte	.LFE7
 3457 0050 00000000 		.4byte	.LFB8
 3458 0054 1C000000 		.4byte	.LFE8
 3459 0058 00000000 		.4byte	.LFB9
 3460 005c 0C000000 		.4byte	.LFE9
 3461 0060 00000000 		.4byte	.LFB10
 3462 0064 14000000 		.4byte	.LFE10
 3463 0068 00000000 		.4byte	.LFB11
 3464 006c 34000000 		.4byte	.LFE11
 3465 0070 00000000 		.4byte	.LFB12
 3466 0074 9C000000 		.4byte	.LFE12
 3467 0078 00000000 		.4byte	.LFB14
 3468 007c 30000000 		.4byte	.LFE14
 3469 0080 00000000 		.4byte	.LFB13
 3470 0084 58000000 		.4byte	.LFE13
 3471 0088 00000000 		.4byte	.LFB15
 3472 008c 1C000000 		.4byte	.LFE15
 3473 0090 00000000 		.4byte	.LFB16
 3474 0094 0C000000 		.4byte	.LFE16
 3475 0098 00000000 		.4byte	.LFB17
 3476 009c 24000000 		.4byte	.LFE17
 3477 00a0 00000000 		.4byte	.LFB18
 3478 00a4 24000000 		.4byte	.LFE18
 3479 00a8 00000000 		.4byte	.LFB19
 3480 00ac 14000000 		.4byte	.LFE19
 3481 00b0 00000000 		.4byte	.LFB20
 3482 00b4 10000000 		.4byte	.LFE20
 3483 00b8 00000000 		.4byte	.LFB21
 3484 00bc 10000000 		.4byte	.LFE21
 3485 00c0 00000000 		.4byte	.LFB22
 3486 00c4 10000000 		.4byte	.LFE22
 3487 00c8 00000000 		.4byte	0
 3488 00cc 00000000 		.4byte	0
 3489              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 107


 3490              	.Ldebug_line0:
 3491 0000 07030000 		.section	.debug_str,"MS",%progbits,1
 3491      02006700 
 3491      00000201 
 3491      FB0E0D00 
 3491      01010101 
 3492              	.LASF10:
 3493 0000 75696E74 		.ascii	"uint16\000"
 3493      313600
 3494              	.LASF98:
 3495 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 3495      69744372 
 3495      69746963 
 3495      616C5365 
 3495      6374696F 
 3496              	.LASF80:
 3497 001d 55534246 		.ascii	"USBFS_initVar\000"
 3497      535F696E 
 3497      69745661 
 3497      7200
 3498              	.LASF86:
 3499 002b 55534246 		.ascii	"USBFS_hidProtocol\000"
 3499      535F6869 
 3499      6450726F 
 3499      746F636F 
 3499      6C00
 3500              	.LASF102:
 3501 003d 443A5C50 		.ascii	"D:\\Projects\\PSoC\\Workspace02\\USB_HID.cydsn\000"
 3501      726F6A65 
 3501      6374735C 
 3501      50536F43 
 3501      5C576F72 
 3502              	.LASF100:
 3503 0068 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3503      43313120 
 3503      352E342E 
 3503      31203230 
 3503      31363036 
 3504 009b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3504      20726576 
 3504      6973696F 
 3504      6E203233 
 3504      37373135 
 3505 00ce 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3505      66756E63 
 3505      74696F6E 
 3505      2D736563 
 3505      74696F6E 
 3506              	.LASF69:
 3507 00f6 55534246 		.ascii	"USBFS_Force\000"
 3507      535F466F 
 3507      72636500 
 3508              	.LASF7:
 3509 0102 6C6F6E67 		.ascii	"long long unsigned int\000"
 3509      206C6F6E 
 3509      6720756E 
 3509      7369676E 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 108


 3509      65642069 
 3510              	.LASF71:
 3511 0119 55534246 		.ascii	"USBFS_GetEPAckState\000"
 3511      535F4765 
 3511      74455041 
 3511      636B5374 
 3511      61746500 
 3512              	.LASF22:
 3513 012d 61646472 		.ascii	"addr\000"
 3513      00
 3514              	.LASF32:
 3515 0132 65704366 		.ascii	"epCfg\000"
 3515      6700
 3516              	.LASF43:
 3517 0138 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 3517      535F7369 
 3517      655F6570 
 3517      735F7374 
 3517      72756374 
 3518              	.LASF45:
 3519 014d 55534246 		.ascii	"USBFS_arb_eps_struct\000"
 3519      535F6172 
 3519      625F6570 
 3519      735F7374 
 3519      72756374 
 3520              	.LASF60:
 3521 0162 65704E75 		.ascii	"epNumber\000"
 3521      6D626572 
 3521      00
 3522              	.LASF48:
 3523 016b 64657669 		.ascii	"device\000"
 3523      636500
 3524              	.LASF6:
 3525 0172 6C6F6E67 		.ascii	"long long int\000"
 3525      206C6F6E 
 3525      6720696E 
 3525      7400
 3526              	.LASF0:
 3527 0180 7369676E 		.ascii	"signed char\000"
 3527      65642063 
 3527      68617200 
 3528              	.LASF56:
 3529 018c 55534246 		.ascii	"USBFS_IsConfigurationChanged\000"
 3529      535F4973 
 3529      436F6E66 
 3529      69677572 
 3529      6174696F 
 3530              	.LASF89:
 3531 01a9 55534246 		.ascii	"USBFS_deviceAddress\000"
 3531      535F6465 
 3531      76696365 
 3531      41646472 
 3531      65737300 
 3532              	.LASF87:
 3533 01bd 55534246 		.ascii	"USBFS_interfaceNumber\000"
 3533      535F696E 
 3533      74657266 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 109


 3533      6163654E 
 3533      756D6265 
 3534              	.LASF74:
 3535 01d3 55534246 		.ascii	"USBFS_RWUEnabled\000"
 3535      535F5257 
 3535      55456E61 
 3535      626C6564 
 3535      00
 3536              	.LASF41:
 3537 01e4 55534246 		.ascii	"USBFS_arb_ep_struct\000"
 3537      535F6172 
 3537      625F6570 
 3537      5F737472 
 3537      75637400 
 3538              	.LASF62:
 3539 01f8 636E7472 		.ascii	"cntr\000"
 3539      00
 3540              	.LASF52:
 3541 01fd 55534246 		.ascii	"USBFS_Stop\000"
 3541      535F5374 
 3541      6F7000
 3542              	.LASF4:
 3543 0208 6C6F6E67 		.ascii	"long int\000"
 3543      20696E74 
 3543      00
 3544              	.LASF99:
 3545 0211 4379496E 		.ascii	"CyIntDisable\000"
 3545      74446973 
 3545      61626C65 
 3545      00
 3546              	.LASF76:
 3547 021e 55534246 		.ascii	"USBFS_GetConfiguration\000"
 3547      535F4765 
 3547      74436F6E 
 3547      66696775 
 3547      72617469 
 3548              	.LASF9:
 3549 0235 75696E74 		.ascii	"uint8\000"
 3549      3800
 3550              	.LASF21:
 3551 023b 6570546F 		.ascii	"epToggle\000"
 3551      67676C65 
 3551      00
 3552              	.LASF36:
 3553 0244 72775761 		.ascii	"rwWa\000"
 3553      00
 3554              	.LASF92:
 3555 0249 43794465 		.ascii	"CyDelayUs\000"
 3555      6C617955 
 3555      7300
 3556              	.LASF13:
 3557 0253 646F7562 		.ascii	"double\000"
 3557      6C6500
 3558              	.LASF73:
 3559 025a 706F7765 		.ascii	"powerStatus\000"
 3559      72537461 
 3559      74757300 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 110


 3560              	.LASF34:
 3561 0266 65705372 		.ascii	"epSr\000"
 3561      00
 3562              	.LASF11:
 3563 026b 75696E74 		.ascii	"uint32\000"
 3563      333200
 3564              	.LASF47:
 3565 0272 55534246 		.ascii	"USBFS_InitComponent\000"
 3565      535F496E 
 3565      6974436F 
 3565      6D706F6E 
 3565      656E7400 
 3566              	.LASF64:
 3567 0286 70446174 		.ascii	"pData\000"
 3567      6100
 3568              	.LASF42:
 3569 028c 73696545 		.ascii	"sieEp\000"
 3569      7000
 3570              	.LASF23:
 3571 0292 65704D6F 		.ascii	"epMode\000"
 3571      646500
 3572              	.LASF35:
 3573 0299 72657365 		.ascii	"reserved\000"
 3573      72766564 
 3573      00
 3574              	.LASF67:
 3575 02a2 55534246 		.ascii	"USBFS_ReadOutEP\000"
 3575      535F5265 
 3575      61644F75 
 3575      74455000 
 3576              	.LASF8:
 3577 02b2 756E7369 		.ascii	"unsigned int\000"
 3577      676E6564 
 3577      20696E74 
 3577      00
 3578              	.LASF5:
 3579 02bf 6C6F6E67 		.ascii	"long unsigned int\000"
 3579      20756E73 
 3579      69676E65 
 3579      6420696E 
 3579      7400
 3580              	.LASF83:
 3581 02d1 55534246 		.ascii	"USBFS_configuration\000"
 3581      535F636F 
 3581      6E666967 
 3581      75726174 
 3581      696F6E00 
 3582              	.LASF77:
 3583 02e5 55534246 		.ascii	"USBFS_GetDeviceAddress\000"
 3583      535F4765 
 3583      74446576 
 3583      69636541 
 3583      64647265 
 3584              	.LASF3:
 3585 02fc 73686F72 		.ascii	"short unsigned int\000"
 3585      7420756E 
 3585      7369676E 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 111


 3585      65642069 
 3585      6E7400
 3586              	.LASF95:
 3587 030f 4379496E 		.ascii	"CyIntSetVector\000"
 3587      74536574 
 3587      56656374 
 3587      6F7200
 3588              	.LASF31:
 3589 031e 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 3589      535F7369 
 3589      655F6570 
 3589      5F737472 
 3589      75637400 
 3590              	.LASF97:
 3591 0332 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3591      74657243 
 3591      72697469 
 3591      63616C53 
 3591      65637469 
 3592              	.LASF93:
 3593 0349 43795379 		.ascii	"CySysClkImoGetUsbLock\000"
 3593      73436C6B 
 3593      496D6F47 
 3593      65745573 
 3593      624C6F63 
 3594              	.LASF44:
 3595 035f 61726245 		.ascii	"arbEp\000"
 3595      7000
 3596              	.LASF26:
 3597 0365 696E7465 		.ascii	"interface\000"
 3597      72666163 
 3597      6500
 3598              	.LASF54:
 3599 036f 63723152 		.ascii	"cr1Reg\000"
 3599      656700
 3600              	.LASF84:
 3601 0376 55534246 		.ascii	"USBFS_configurationChanged\000"
 3601      535F636F 
 3601      6E666967 
 3601      75726174 
 3601      696F6E43 
 3602              	.LASF15:
 3603 0391 72656733 		.ascii	"reg32\000"
 3603      3200
 3604              	.LASF78:
 3605 0397 55534246 		.ascii	"USBFS_EnableSofInt\000"
 3605      535F456E 
 3605      61626C65 
 3605      536F6649 
 3605      6E7400
 3606              	.LASF20:
 3607 03aa 68774570 		.ascii	"hwEpState\000"
 3607      53746174 
 3607      6500
 3608              	.LASF72:
 3609 03b4 55534246 		.ascii	"USBFS_SetPowerStatus\000"
 3609      535F5365 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 112


 3609      74506F77 
 3609      65725374 
 3609      61747573 
 3610              	.LASF17:
 3611 03c9 73697A65 		.ascii	"sizetype\000"
 3611      74797065 
 3611      00
 3612              	.LASF16:
 3613 03d2 6C6F6E67 		.ascii	"long double\000"
 3613      20646F75 
 3613      626C6500 
 3614              	.LASF18:
 3615 03de 61747472 		.ascii	"attrib\000"
 3615      696200
 3616              	.LASF101:
 3617 03e5 47656E65 		.ascii	"Generated_Source\\PSoC4\\USBFS.c\000"
 3617      72617465 
 3617      645F536F 
 3617      75726365 
 3617      5C50536F 
 3618              	.LASF39:
 3619 0404 72775261 		.ascii	"rwRaMsb\000"
 3619      4D736200 
 3620              	.LASF28:
 3621 040c 6570436E 		.ascii	"epCnt0\000"
 3621      743000
 3622              	.LASF29:
 3623 0413 6570436E 		.ascii	"epCnt1\000"
 3623      743100
 3624              	.LASF94:
 3625 041a 4379496E 		.ascii	"CyIntSetPriority\000"
 3625      74536574 
 3625      5072696F 
 3625      72697479 
 3625      00
 3626              	.LASF30:
 3627 042b 65704372 		.ascii	"epCr0\000"
 3627      3000
 3628              	.LASF12:
 3629 0431 666C6F61 		.ascii	"float\000"
 3629      7400
 3630              	.LASF19:
 3631 0437 61706945 		.ascii	"apiEpState\000"
 3631      70537461 
 3631      746500
 3632              	.LASF90:
 3633 0442 55534246 		.ascii	"USBFS_EP\000"
 3633      535F4550 
 3633      00
 3634              	.LASF46:
 3635 044b 55534246 		.ascii	"USBFS_Init\000"
 3635      535F496E 
 3635      697400
 3636              	.LASF79:
 3637 0456 55534246 		.ascii	"USBFS_DisableSofInt\000"
 3637      535F4469 
 3637      7361626C 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 113


 3637      65536F66 
 3637      496E7400 
 3638              	.LASF82:
 3639 046a 55534246 		.ascii	"USBFS_transferState\000"
 3639      535F7472 
 3639      616E7366 
 3639      65725374 
 3639      61746500 
 3640              	.LASF1:
 3641 047e 756E7369 		.ascii	"unsigned char\000"
 3641      676E6564 
 3641      20636861 
 3641      7200
 3642              	.LASF2:
 3643 048c 73686F72 		.ascii	"short int\000"
 3643      7420696E 
 3643      7400
 3644              	.LASF91:
 3645 0496 55534246 		.ascii	"USBFS_lastPacketSize\000"
 3645      535F6C61 
 3645      73745061 
 3645      636B6574 
 3645      53697A65 
 3646              	.LASF96:
 3647 04ab 4379496E 		.ascii	"CyIntEnable\000"
 3647      74456E61 
 3647      626C6500 
 3648              	.LASF66:
 3649 04b7 55534246 		.ascii	"USBFS_EnableOutEP\000"
 3649      535F456E 
 3649      61626C65 
 3649      4F757445 
 3649      5000
 3650              	.LASF38:
 3651 04c9 72775261 		.ascii	"rwRa\000"
 3651      00
 3652              	.LASF88:
 3653 04ce 55534246 		.ascii	"USBFS_interfaceSetting\000"
 3653      535F696E 
 3653      74657266 
 3653      61636553 
 3653      65747469 
 3654              	.LASF27:
 3655 04e5 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 3655      4246535F 
 3655      45505F43 
 3655      544C5F42 
 3655      4C4F434B 
 3656              	.LASF81:
 3657 04fa 55534246 		.ascii	"USBFS_device\000"
 3657      535F6465 
 3657      76696365 
 3657      00
 3658              	.LASF70:
 3659 0507 62537461 		.ascii	"bState\000"
 3659      746500
 3660              	.LASF65:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 114


 3661 050e 6C656E67 		.ascii	"length\000"
 3661      746800
 3662              	.LASF14:
 3663 0515 63686172 		.ascii	"char\000"
 3663      00
 3664              	.LASF49:
 3665 051a 6D6F6465 		.ascii	"mode\000"
 3665      00
 3666              	.LASF25:
 3667 051f 62756666 		.ascii	"bufferSize\000"
 3667      65725369 
 3667      7A6500
 3668              	.LASF50:
 3669 052a 55534246 		.ascii	"USBFS_Start\000"
 3669      535F5374 
 3669      61727400 
 3670              	.LASF24:
 3671 0536 62756666 		.ascii	"buffOffset\000"
 3671      4F666673 
 3671      657400
 3672              	.LASF58:
 3673 0541 696E7465 		.ascii	"interfaceNumber\000"
 3673      72666163 
 3673      654E756D 
 3673      62657200 
 3674              	.LASF85:
 3675 0551 55534246 		.ascii	"USBFS_deviceStatus\000"
 3675      535F6465 
 3675      76696365 
 3675      53746174 
 3675      757300
 3676              	.LASF59:
 3677 0564 55534246 		.ascii	"USBFS_GetEPState\000"
 3677      535F4765 
 3677      74455053 
 3677      74617465 
 3677      00
 3678              	.LASF51:
 3679 0575 55534246 		.ascii	"USBFS_ReInitComponent\000"
 3679      535F5265 
 3679      496E6974 
 3679      436F6D70 
 3679      6F6E656E 
 3680              	.LASF53:
 3681 058b 656E6162 		.ascii	"enableInterrupts\000"
 3681      6C65496E 
 3681      74657272 
 3681      75707473 
 3681      00
 3682              	.LASF55:
 3683 059c 55534246 		.ascii	"USBFS_CheckActivity\000"
 3683      535F4368 
 3683      65636B41 
 3683      63746976 
 3683      69747900 
 3684              	.LASF40:
 3685 05b0 72774472 		.ascii	"rwDr\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWAWtxt.s 			page 115


 3685      00
 3686              	.LASF68:
 3687 05b5 55534246 		.ascii	"USBFS_DisableOutEP\000"
 3687      535F4469 
 3687      7361626C 
 3687      654F7574 
 3687      455000
 3688              	.LASF63:
 3689 05c8 55534246 		.ascii	"USBFS_LoadInEP\000"
 3689      535F4C6F 
 3689      6164496E 
 3689      455000
 3690              	.LASF37:
 3691 05d7 72775761 		.ascii	"rwWaMsb\000"
 3691      4D736200 
 3692              	.LASF33:
 3693 05df 6570496E 		.ascii	"epIntEn\000"
 3693      74456E00 
 3694              	.LASF57:
 3695 05e7 55534246 		.ascii	"USBFS_GetInterfaceSetting\000"
 3695      535F4765 
 3695      74496E74 
 3695      65726661 
 3695      63655365 
 3696              	.LASF61:
 3697 0601 55534246 		.ascii	"USBFS_GetEPCount\000"
 3697      535F4765 
 3697      74455043 
 3697      6F756E74 
 3697      00
 3698              	.LASF75:
 3699 0612 72657375 		.ascii	"result\000"
 3699      6C7400
 3700              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
