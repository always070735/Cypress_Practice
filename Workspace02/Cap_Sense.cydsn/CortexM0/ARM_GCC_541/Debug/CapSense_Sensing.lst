ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsTrimIdacsSourcing,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsTrimIdacsSourcing, %function
  24              	CapSense_SsTrimIdacsSourcing:
  25              	.LFB18:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v5.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 2


  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (0u != CapSense_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 3


  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 4


 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 5


 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDSetupWidgetExt(), CapSense_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 6


 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 7


 317:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 369:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 8


 374:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 9


 431:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 477:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 10


 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 530:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 531:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 534:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 11


 545:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE != CapSense_USES_MANY_SENSE_MODES)
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSD scanning */
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDInitialize();
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSX scanning */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXInitialize();
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ISX scanning */
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXInitialize();
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 582:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 585:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 587:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 588:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 589:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 590:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 592:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 593:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 601:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 12


 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 645:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 646:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 647:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 648:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 649:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx signal is routed to the sensor
 650:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 651:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 652:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 653:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 654:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 655:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 656:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 658:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 13


 659:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 676:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 677:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 678:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 679:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 682:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 687:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 696:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 14


 716:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 725:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 734:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 735:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 740:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 742:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 744:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 747:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 770:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 772:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 15


 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 778:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 779:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)))
 780:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 781:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 784:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 785:Generated_Source\PSoC4/CapSense_Sensing.c ****                    ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 786:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))) */
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 791:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 792:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 793:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 794:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 795:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 800:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 801:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 802:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 804:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 805:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 810:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 812:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 814:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 817:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 818:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 819:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 820:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 821:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 822:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 823:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 825:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 827:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 16


 830:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 832:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 834:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 835:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 837:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 839:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 842:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
 849:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* CapSense_USES_PORT_3 */
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 880:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
 881:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 883:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 884:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 885:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
 886:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 17


 887:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 889:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 890:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 891:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
 892:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 895:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 896:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 897:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 898:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
 901:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
 902:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
 903:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
 904:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
 905:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 906:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 907:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 908:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 910:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 935:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 936:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 937:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 943:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 18


 944:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 959:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetIOsInDefaultState
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 988:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 989:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
 990:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 992:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 993:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
 995:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 996:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 997:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
 998:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 999:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1000:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 19


1001:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1002:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1003:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1004:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1005:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1006:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetIOsInDefaultState(void)
1007:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1010:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 regValue;
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 1. Disconnect HSIOM.
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 2. Set strong DM.
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 3. Set pin state to logic 0.
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1032:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1036:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 20


1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1066:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1078:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1082:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1090:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_EN) && \
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&  \
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION))
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsSetIOsInDefaultState();
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) && \
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE != CapSense_CSD_SHIELD_EN) &&  \
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1103:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1108:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1109:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1110:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1111:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1112:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1113:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1114:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 21


1115:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1116:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1117:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1119:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1120:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1121:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1122:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1123:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1124:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1125:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1133:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1139:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1141:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1144:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1146:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1148:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1150:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1151:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1152:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1156:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1157:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1158:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1160:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1162:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1164:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1165:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1169:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1171:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 22


1172:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1174:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1179:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1183:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1184:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1185:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1186:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1187:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1188:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1189:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1190:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1191:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1192:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1193:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1194:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1195:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1196:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1197:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1198:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1200:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1207:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1210:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1211:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1212:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1215:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1219:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1224:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1226:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1227:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 23


1229:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1232:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1233:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1237:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1238:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1242:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1243:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1244:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1246:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1248:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1249:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1250:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1252:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1254:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1256:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1257:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1259:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1260:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1261:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1262:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1265:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1271:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1273:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1274:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1275:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1277:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1281:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1282:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1283:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1285:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 24


1286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1289:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1292:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1294:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1296:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1297:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1299:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1304:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1305:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1308:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1310:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1311:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1312:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1314:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1315:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1316:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1325:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1326:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1329:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1331:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1342:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 25


1343:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1347:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1356:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1359:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1360:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1364:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1365:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1366:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1367:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1368:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1369:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1370:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1371:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1372:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1373:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1378:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1379:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1381:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1382:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1387:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1388:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1389:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1390:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1391:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1392:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1393:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1396:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1397:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1398:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1399:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 26


1400:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1401:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1402:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1403:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1404:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1405:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1406:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1407:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1408:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1409:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1410:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1411:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1412:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1413:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1414:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1415:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1416:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1417:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1418:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1424:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1437:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1443:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1445:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1450:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 27


1457:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1458:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1459:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1463:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1474:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1475:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1476:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1479:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1481:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1482:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1485:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1486:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1492:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1496:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****              /* Update CRC */
1498:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
1501:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1503:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1505:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1506:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1512:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1513:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 28


1514:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1518:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1526:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1531:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1539:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1547:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1549:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1551:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1552:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1557:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1558:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
1559:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1564:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1568:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 29


1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1572:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1575:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1581:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cp = 0uL;
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cpRow = 0uL;
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cpWidget[CapSense_TOTAL_WIDGETS];
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1590:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Configure common config variables */
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
1595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk);
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Initialize CSD mode */
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDInitialize();
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
1616:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sensor Cp
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sense clock for all the widgets */
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 30


1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1630:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1632:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = CapSense_CALIBRATION_RESOLUTION;
1635:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1645:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
1647:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_LEVEL);
1650:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1651:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get IDAC */
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calculate achived calibration level */
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcountRow
1663:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Find correct sense clock value */
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cpRow)
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1672:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1673:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #if (CapSense_ENABLE != CapSense_CSDV2)
1684:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 31


1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1686:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << CapS
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 {
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_dsRam.modCsdClk;
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 }
1690:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #else
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #endif
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1694:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calculate achived calibration level */
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcount * CapSense
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cp)
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1724:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE != CapSense_CSDV2)
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_FLIP_F
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                              ptrWdgt->snsClk = CapSense_dsRam.modCsdClk;
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1741:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 32


1742:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (cpRow > cp)
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1746:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1749:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1750:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1751:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1752:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_EN)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Non-CSD widget */
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1764:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune resolution for all the widgets */
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1773:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1779:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set parasitic capacitance for columns */
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1783:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1785:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1788:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1790:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1794:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1796:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Set parasitic capacitance for rows */
1798:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 33


1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get IDAC */
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1803:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1805:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get finger capacitance */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Init pointer to sigPFC */
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1811:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find resolution */
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1823:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1824:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sensitivity for all the widgets */
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1830:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1832:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1834:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1836:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1837:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_DsUpdateWidgetCrc(wdgtIndex);
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
1841:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1846:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
1847:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1848:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 34


1856:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1863:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1865:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1868:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1873:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
1874:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1876:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1881:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
1887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1900:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
  27              		.loc 1 1906 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 35


  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
  36              		.loc 1 1910 0
  37 0002 0848     		ldr	r0, .L2
  38 0004 0368     		ldr	r3, [r0]
  39 0006 0F24     		movs	r4, #15
  40 0008 A343     		bics	r3, r4
  41 000a 1900     		movs	r1, r3
  42              	.LVL0:
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  43              		.loc 1 1911 0
  44 000c 064D     		ldr	r5, .L2+4
  45 000e 2B78     		ldrb	r3, [r5]
  46 0010 0F22     		movs	r2, #15
  47 0012 1340     		ands	r3, r2
  48 0014 0B43     		orrs	r3, r1
  49              	.LVL1:
1912:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
1913:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
  50              		.loc 1 1916 0
  51 0016 E132     		adds	r2, r2, #225
  52 0018 9343     		bics	r3, r2
  53              	.LVL2:
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  54              		.loc 1 1917 0
  55 001a 2A78     		ldrb	r2, [r5]
  56 001c A243     		bics	r2, r4
  57 001e 1343     		orrs	r3, r2
  58              	.LVL3:
1918:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1920:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
  59              		.loc 1 1922 0
  60 0020 0360     		str	r3, [r0]
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
  61              		.loc 1 1923 0
  62              		@ sp needed
  63 0022 30BD     		pop	{r4, r5, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0024 00FF2840 		.word	1076428544
  68 0028 62F2FF0F 		.word	268431970
  69              		.cfi_endproc
  70              	.LFE18:
  71              		.size	CapSense_SsTrimIdacsSourcing, .-CapSense_SsTrimIdacsSourcing
  72              		.section	.text.CapSense_SsTrimIdacs,"ax",%progbits
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 36


  73              		.align	2
  74              		.code	16
  75              		.thumb_func
  76              		.type	CapSense_SsTrimIdacs, %function
  77              	CapSense_SsTrimIdacs:
  78              	.LFB19:
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
1926:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
  79              		.loc 1 1944 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 10B5     		push	{r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
1945:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
  87              		.loc 1 1951 0
  88 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacsSourcing
  89              	.LVL4:
1952:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
1955:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
  90              		.loc 1 1955 0
  91              		@ sp needed
  92 0006 10BD     		pop	{r4, pc}
  93              		.cfi_endproc
  94              	.LFE19:
  95              		.size	CapSense_SsTrimIdacs, .-CapSense_SsTrimIdacs
  96              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
  97              		.align	2
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 37


  98              		.code	16
  99              		.thumb_func
 100              		.type	CapSense_SsCSDDisableMode, %function
 101              	CapSense_SsCSDDisableMode:
 102              	.LFB7:
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 103              		.loc 1 769 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 10B5     		push	{r4, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 111              		.loc 1 773 0
 112 0002 044A     		ldr	r2, .L6
 113 0004 1168     		ldr	r1, [r2]
 114              	.LVL5:
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 115              		.loc 1 774 0
 116 0006 044B     		ldr	r3, .L6+4
 117 0008 0B40     		ands	r3, r1
 118              	.LVL6:
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 119              		.loc 1 775 0
 120 000a 1360     		str	r3, [r2]
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 121              		.loc 1 789 0
 122 000c FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 123              	.LVL7:
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 124              		.loc 1 805 0
 125              		@ sp needed
 126 0010 10BD     		pop	{r4, pc}
 127              	.L7:
 128 0012 C046     		.align	2
 129              	.L6:
 130 0014 00040240 		.word	1073873920
 131 0018 FFF0FFFF 		.word	-3841
 132              		.cfi_endproc
 133              	.LFE7:
 134              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 135              		.section	.text.CapSense_IsBusy,"ax",%progbits
 136              		.align	2
 137              		.global	CapSense_IsBusy
 138              		.code	16
 139              		.thumb_func
 140              		.type	CapSense_IsBusy, %function
 141              	CapSense_IsBusy:
 142              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 143              		.loc 1 234 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 38


 235:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 148              		.loc 1 235 0
 149 0000 024B     		ldr	r3, .L9
 150 0002 DB68     		ldr	r3, [r3, #12]
 151 0004 8020     		movs	r0, #128
 152 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 153              		.loc 1 236 0
 154              		@ sp needed
 155 0008 7047     		bx	lr
 156              	.L10:
 157 000a C046     		.align	2
 158              	.L9:
 159 000c 00000000 		.word	CapSense_dsRam
 160              		.cfi_endproc
 161              	.LFE1:
 162              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 163              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 164              		.align	2
 165              		.global	CapSense_SetupWidget
 166              		.code	16
 167              		.thumb_func
 168              		.type	CapSense_SetupWidget, %function
 169              	CapSense_SetupWidget:
 170              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 171              		.loc 1 286 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              	.LVL8:
 176 0000 10B5     		push	{r4, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 4, -8
 179              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 180              		.loc 1 289 0
 181 0002 0E4B     		ldr	r3, .L17
 182 0004 DB68     		ldr	r3, [r3, #12]
 183 0006 DB03     		lsls	r3, r3, #15
 184 0008 0DD4     		bmi	.L14
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 185              		.loc 1 299 0
 186 000a 0428     		cmp	r0, #4
 187 000c 0DD8     		bhi	.L15
 300:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 188              		.loc 1 300 0 discriminator 1
 189 000e 4309     		lsrs	r3, r0, #5
 190 0010 0433     		adds	r3, r3, #4
 191 0012 9B00     		lsls	r3, r3, #2
 192 0014 094A     		ldr	r2, .L17
 193 0016 9B58     		ldr	r3, [r3, r2]
 194 0018 1F22     		movs	r2, #31
 195 001a 0240     		ands	r2, r0
 196 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 197              		.loc 1 299 0 discriminator 1
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 39


 198 001e DB07     		lsls	r3, r3, #31
 199 0020 05D4     		bmi	.L16
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 200              		.loc 1 307 0
 201 0022 0124     		movs	r4, #1
 202 0024 04E0     		b	.L12
 203              	.L14:
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 204              		.loc 1 292 0
 205 0026 1124     		movs	r4, #17
 206 0028 02E0     		b	.L12
 207              	.L15:
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 208              		.loc 1 307 0
 209 002a 0124     		movs	r4, #1
 210 002c 00E0     		b	.L12
 211              	.L16:
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 212              		.loc 1 303 0
 213 002e 0024     		movs	r4, #0
 214              	.L12:
 215              	.LVL9:
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 216              		.loc 1 314 0
 217 0030 002C     		cmp	r4, #0
 218 0032 01D1     		bne	.L13
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 219              		.loc 1 327 0
 220 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 221              	.LVL10:
 222              	.L13:
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 223              		.loc 1 343 0
 224 0038 2000     		movs	r0, r4
 225              		@ sp needed
 226              	.LVL11:
 227 003a 10BD     		pop	{r4, pc}
 228              	.L18:
 229              		.align	2
 230              	.L17:
 231 003c 00000000 		.word	CapSense_dsRam
 232              		.cfi_endproc
 233              	.LFE2:
 234              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 235              		.section	.text.CapSense_Scan,"ax",%progbits
 236              		.align	2
 237              		.global	CapSense_Scan
 238              		.code	16
 239              		.thumb_func
 240              		.type	CapSense_Scan, %function
 241              	CapSense_Scan:
 242              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 243              		.loc 1 369 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 40


 247 0000 10B5     		push	{r4, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
 251              	.LVL12:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 252              		.loc 1 372 0
 253 0002 084B     		ldr	r3, .L25
 254 0004 DB68     		ldr	r3, [r3, #12]
 255 0006 DB03     		lsls	r3, r3, #15
 256 0008 07D4     		bmi	.L22
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 257              		.loc 1 379 0
 258 000a 074B     		ldr	r3, .L25+4
 259 000c 1B78     		ldrb	r3, [r3]
 260 000e 012B     		cmp	r3, #1
 261 0010 05D1     		bne	.L24
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 262              		.loc 1 388 0
 263 0012 FFF7FEFF 		bl	CapSense_CSDScan
 264              	.LVL13:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 265              		.loc 1 370 0
 266 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 267              		.loc 1 389 0
 268 0018 03E0     		b	.L20
 269              	.L22:
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 270              		.loc 1 375 0
 271 001a 1120     		movs	r0, #17
 272 001c 01E0     		b	.L20
 273              	.L24:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 274              		.loc 1 397 0
 275 001e 0120     		movs	r0, #1
 276 0020 4042     		rsbs	r0, r0, #0
 277              	.L20:
 278              	.LVL14:
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 279              		.loc 1 402 0
 280              		@ sp needed
 281 0022 10BD     		pop	{r4, pc}
 282              	.L26:
 283              		.align	2
 284              	.L25:
 285 0024 00000000 		.word	CapSense_dsRam
 286 0028 00000000 		.word	.LANCHOR0
 287              		.cfi_endproc
 288              	.LFE3:
 289              		.size	CapSense_Scan, .-CapSense_Scan
 290              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 291              		.align	2
 292              		.global	CapSense_ScanAllWidgets
 293              		.code	16
 294              		.thumb_func
 295              		.type	CapSense_ScanAllWidgets, %function
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 41


 296              	CapSense_ScanAllWidgets:
 297              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 298              		.loc 1 431 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 10B5     		push	{r4, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 4, -8
 305              		.cfi_offset 14, -4
 306              	.LVL15:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307              		.loc 1 436 0
 308 0002 0F4B     		ldr	r3, .L35
 309 0004 DB68     		ldr	r3, [r3, #12]
 310 0006 1B06     		lsls	r3, r3, #24
 311 0008 18D4     		bmi	.L34
 312 000a 0024     		movs	r4, #0
 313 000c 0120     		movs	r0, #1
 314 000e 4042     		rsbs	r0, r0, #0
 315 0010 11E0     		b	.L29
 316              	.LVL16:
 317              	.L33:
 452:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 318              		.loc 1 452 0
 319 0012 2000     		movs	r0, r4
 320              	.LVL17:
 321 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 322              	.LVL18:
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 323              		.loc 1 454 0
 324 0018 0028     		cmp	r0, #0
 325 001a 0BD1     		bne	.L30
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 326              		.loc 1 458 0
 327 001c 032C     		cmp	r4, #3
 328 001e 03D8     		bhi	.L31
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 329              		.loc 1 461 0
 330 0020 0122     		movs	r2, #1
 331 0022 084B     		ldr	r3, .L35+4
 332 0024 5A70     		strb	r2, [r3, #1]
 333 0026 02E0     		b	.L32
 334              	.L31:
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 335              		.loc 1 466 0
 336 0028 0022     		movs	r2, #0
 337 002a 064B     		ldr	r3, .L35+4
 338 002c 5A70     		strb	r2, [r3, #1]
 339              	.L32:
 476:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 340              		.loc 1 476 0
 341 002e FFF7FEFF 		bl	CapSense_Scan
 342              	.LVL19:
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 343              		.loc 1 478 0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 42


 344 0032 04E0     		b	.L28
 345              	.L30:
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 346              		.loc 1 449 0
 347 0034 0134     		adds	r4, r4, #1
 348              	.LVL20:
 349              	.L29:
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 350              		.loc 1 447 0 discriminator 1
 351 0036 042C     		cmp	r4, #4
 352 0038 EBD9     		bls	.L33
 353 003a 00E0     		b	.L28
 354              	.LVL21:
 355              	.L34:
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 356              		.loc 1 439 0
 357 003c 1120     		movs	r0, #17
 358              	.LVL22:
 359              	.L28:
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 360              		.loc 1 484 0
 361              		@ sp needed
 362 003e 10BD     		pop	{r4, pc}
 363              	.L36:
 364              		.align	2
 365              	.L35:
 366 0040 00000000 		.word	CapSense_dsRam
 367 0044 00000000 		.word	.LANCHOR0
 368              		.cfi_endproc
 369              	.LFE4:
 370              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 371              		.section	.text.CapSense_SetPinState,"ax",%progbits
 372              		.align	2
 373              		.global	CapSense_SetPinState
 374              		.code	16
 375              		.thumb_func
 376              		.type	CapSense_SetPinState, %function
 377              	CapSense_SetPinState:
 378              	.LFB6:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 379              		.loc 1 656 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 0, uses_anonymous_args = 0
 383              	.LVL23:
 384 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 385              		.cfi_def_cfa_offset 24
 386              		.cfi_offset 3, -24
 387              		.cfi_offset 4, -20
 388              		.cfi_offset 5, -16
 389              		.cfi_offset 6, -12
 390              		.cfi_offset 7, -8
 391              		.cfi_offset 14, -4
 392 0002 1600     		movs	r6, r2
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 393              		.loc 1 681 0
 394 0004 4001     		lsls	r0, r0, #5
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 43


 395              	.LVL24:
 396 0006 244B     		ldr	r3, .L44
 397 0008 C458     		ldr	r4, [r0, r3]
 398 000a CB00     		lsls	r3, r1, #3
 399 000c 591A     		subs	r1, r3, r1
 400              	.LVL25:
 401 000e 8B00     		lsls	r3, r1, #2
 402 0010 E418     		adds	r4, r4, r3
 403              	.LVL26:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 404              		.loc 1 686 0
 405 0012 0025     		movs	r5, #0
 406 0014 3CE0     		b	.L38
 407              	.LVL27:
 408              	.L43:
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 409              		.loc 1 689 0
 410 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 411              	.LVL28:
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 412              		.loc 1 690 0
 413 001a 2168     		ldr	r1, [r4]
 414 001c 0B68     		ldr	r3, [r1]
 415 001e 277E     		ldrb	r7, [r4, #24]
 416 0020 0F22     		movs	r2, #15
 417 0022 BA40     		lsls	r2, r2, r7
 418 0024 9343     		bics	r3, r2
 419 0026 0B60     		str	r3, [r1]
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 420              		.loc 1 691 0
 421 0028 6168     		ldr	r1, [r4, #4]
 422 002a 0B68     		ldr	r3, [r1]
 423 002c A77E     		ldrb	r7, [r4, #26]
 424 002e 0722     		movs	r2, #7
 425 0030 BA40     		lsls	r2, r2, r7
 426 0032 9343     		bics	r3, r2
 427 0034 0B60     		str	r3, [r1]
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 428              		.loc 1 692 0
 429 0036 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL29:
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 431              		.loc 1 694 0
 432 003a 012E     		cmp	r6, #1
 433 003c 17D0     		beq	.L40
 434 003e 002E     		cmp	r6, #0
 435 0040 02D0     		beq	.L41
 436 0042 032E     		cmp	r6, #3
 437 0044 1FD0     		beq	.L42
 438 0046 21E0     		b	.L39
 439              	.L41:
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 440              		.loc 1 698 0
 441 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 442              	.LVL30:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 443              		.loc 1 699 0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 44


 444 004c 6268     		ldr	r2, [r4, #4]
 445 004e 1168     		ldr	r1, [r2]
 446 0050 A77E     		ldrb	r7, [r4, #26]
 447 0052 0623     		movs	r3, #6
 448 0054 BB40     		lsls	r3, r3, r7
 449 0056 0B43     		orrs	r3, r1
 450 0058 1360     		str	r3, [r2]
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 451              		.loc 1 700 0
 452 005a A168     		ldr	r1, [r4, #8]
 453 005c 0B68     		ldr	r3, [r1]
 454 005e 677E     		ldrb	r7, [r4, #25]
 455 0060 0122     		movs	r2, #1
 456 0062 BA40     		lsls	r2, r2, r7
 457 0064 9343     		bics	r3, r2
 458 0066 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 459              		.loc 1 701 0
 460 0068 FFF7FEFF 		bl	CyExitCriticalSection
 461              	.LVL31:
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 462              		.loc 1 702 0
 463 006c 0EE0     		b	.L39
 464              	.L40:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 465              		.loc 1 705 0
 466 006e FFF7FEFF 		bl	CyEnterCriticalSection
 467              	.LVL32:
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 468              		.loc 1 706 0
 469 0072 A168     		ldr	r1, [r4, #8]
 470 0074 0B68     		ldr	r3, [r1]
 471 0076 677E     		ldrb	r7, [r4, #25]
 472 0078 0122     		movs	r2, #1
 473 007a BA40     		lsls	r2, r2, r7
 474 007c 9343     		bics	r3, r2
 475 007e 0B60     		str	r3, [r1]
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 476              		.loc 1 707 0
 477 0080 FFF7FEFF 		bl	CyExitCriticalSection
 478              	.LVL33:
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 479              		.loc 1 708 0
 480 0084 02E0     		b	.L39
 481              	.L42:
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 482              		.loc 1 713 0
 483 0086 2000     		movs	r0, r4
 484 0088 FFF7FEFF 		bl	CapSense_CSDConnectSns
 485              	.LVL34:
 486              	.L39:
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 487              		.loc 1 748 0 discriminator 2
 488 008c 1C34     		adds	r4, r4, #28
 489              	.LVL35:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 490              		.loc 1 686 0 discriminator 2
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 45


 491 008e 0135     		adds	r5, r5, #1
 492              	.LVL36:
 493              	.L38:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 494              		.loc 1 686 0 is_stmt 0 discriminator 1
 495 0090 002D     		cmp	r5, #0
 496 0092 C0D0     		beq	.L43
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 497              		.loc 1 750 0 is_stmt 1
 498              		@ sp needed
 499              	.LVL37:
 500              	.LVL38:
 501              	.LVL39:
 502 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 503              	.L45:
 504 0096 C046     		.align	2
 505              	.L44:
 506 0098 00000000 		.word	CapSense_dsFlash
 507              		.cfi_endproc
 508              	.LFE6:
 509              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 510              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 511              		.align	2
 512              		.global	CapSense_SsSwitchSensingMode
 513              		.code	16
 514              		.thumb_func
 515              		.type	CapSense_SsSwitchSensingMode, %function
 516              	CapSense_SsSwitchSensingMode:
 517              	.LFB8:
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 518              		.loc 1 908 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              	.LVL40:
 523 0000 10B5     		push	{r4, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 4, -8
 526              		.cfi_offset 14, -4
 527 0002 0400     		movs	r4, r0
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 528              		.loc 1 909 0
 529 0004 0C4B     		ldr	r3, .L50
 530 0006 1B78     		ldrb	r3, [r3]
 531 0008 8342     		cmp	r3, r0
 532 000a 14D0     		beq	.L46
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 533              		.loc 1 912 0
 534 000c 012B     		cmp	r3, #1
 535 000e 01D1     		bne	.L48
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 536              		.loc 1 915 0
 537 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 538              	.LVL41:
 539              	.L48:
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 540              		.loc 1 945 0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 46


 541 0014 012C     		cmp	r4, #1
 542 0016 05D1     		bne	.L49
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 543              		.loc 1 949 0
 544 0018 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 545              	.LVL42:
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 546              		.loc 1 950 0
 547 001c 0122     		movs	r2, #1
 548 001e 064B     		ldr	r3, .L50
 549 0020 1A70     		strb	r2, [r3]
 550 0022 08E0     		b	.L46
 551              	.L49:
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 552              		.loc 1 953 0
 553 0024 022C     		cmp	r4, #2
 554 0026 06D0     		beq	.L46
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 555              		.loc 1 961 0
 556 0028 042C     		cmp	r4, #4
 557 002a 04D0     		beq	.L46
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 558              		.loc 1 969 0
 559 002c 032C     		cmp	r4, #3
 560 002e 02D0     		beq	.L46
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 561              		.loc 1 978 0
 562 0030 0022     		movs	r2, #0
 563 0032 014B     		ldr	r3, .L50
 564 0034 1A70     		strb	r2, [r3]
 565              	.L46:
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 566              		.loc 1 981 0
 567              		@ sp needed
 568 0036 10BD     		pop	{r4, pc}
 569              	.L51:
 570              		.align	2
 571              	.L50:
 572 0038 00000000 		.word	.LANCHOR0
 573              		.cfi_endproc
 574              	.LFE8:
 575              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 576              		.section	.text.CapSense_SsSetIOsInDefaultState,"ax",%progbits
 577              		.align	2
 578              		.global	CapSense_SsSetIOsInDefaultState
 579              		.code	16
 580              		.thumb_func
 581              		.type	CapSense_SsSetIOsInDefaultState, %function
 582              	CapSense_SsSetIOsInDefaultState:
 583              	.LFB9:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
 584              		.loc 1 1007 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588 0000 30B5     		push	{r4, r5, lr}
 589              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 47


 590              		.cfi_offset 4, -12
 591              		.cfi_offset 5, -8
 592              		.cfi_offset 14, -4
 593              	.LVL43:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 594              		.loc 1 1013 0
 595 0002 0020     		movs	r0, #0
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
 596              		.loc 1 1008 0
 597 0004 0D4B     		ldr	r3, .L55
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 598              		.loc 1 1013 0
 599 0006 16E0     		b	.L53
 600              	.LVL44:
 601              	.L54:
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 602              		.loc 1 1020 0 discriminator 3
 603 0008 1968     		ldr	r1, [r3]
 604 000a 0A68     		ldr	r2, [r1]
 605              	.LVL45:
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 606              		.loc 1 1021 0 discriminator 3
 607 000c 1C69     		ldr	r4, [r3, #16]
 608 000e A243     		bics	r2, r4
 609              	.LVL46:
1022:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 610              		.loc 1 1022 0 discriminator 3
 611 0010 0A60     		str	r2, [r1]
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
 612              		.loc 1 1024 0 discriminator 3
 613 0012 5C68     		ldr	r4, [r3, #4]
 614 0014 2268     		ldr	r2, [r4]
 615              	.LVL47:
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
 616              		.loc 1 1025 0 discriminator 3
 617 0016 9D7E     		ldrb	r5, [r3, #26]
 618 0018 0721     		movs	r1, #7
 619 001a A940     		lsls	r1, r1, r5
 620 001c 8A43     		bics	r2, r1
 621              	.LVL48:
 622 001e 1100     		movs	r1, r2
 623              	.LVL49:
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 624              		.loc 1 1026 0 discriminator 3
 625 0020 0622     		movs	r2, #6
 626 0022 AA40     		lsls	r2, r2, r5
 627 0024 0A43     		orrs	r2, r1
 628              	.LVL50:
1027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 629              		.loc 1 1027 0 discriminator 3
 630 0026 2260     		str	r2, [r4]
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
 631              		.loc 1 1029 0 discriminator 3
 632 0028 9968     		ldr	r1, [r3, #8]
 633 002a 0A68     		ldr	r2, [r1]
 634              	.LVL51:
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 48


 635              		.loc 1 1030 0 discriminator 3
 636 002c 5C69     		ldr	r4, [r3, #20]
 637 002e A243     		bics	r2, r4
 638              	.LVL52:
1031:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 639              		.loc 1 1031 0 discriminator 3
 640 0030 0A60     		str	r2, [r1]
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 641              		.loc 1 1034 0 discriminator 3
 642 0032 1C33     		adds	r3, r3, #28
 643              	.LVL53:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 644              		.loc 1 1013 0 discriminator 3
 645 0034 0130     		adds	r0, r0, #1
 646              	.LVL54:
 647              	.L53:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 648              		.loc 1 1013 0 is_stmt 0 discriminator 1
 649 0036 0428     		cmp	r0, #4
 650 0038 E6D9     		bls	.L54
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 651              		.loc 1 1040 0 is_stmt 1
 652              		@ sp needed
 653 003a 30BD     		pop	{r4, r5, pc}
 654              	.L56:
 655              		.align	2
 656              	.L55:
 657 003c 00000000 		.word	CapSense_ioList
 658              		.cfi_endproc
 659              	.LFE9:
 660              		.size	CapSense_SsSetIOsInDefaultState, .-CapSense_SsSetIOsInDefaultState
 661              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 662              		.align	2
 663              		.global	CapSense_SsPostAllWidgetsScan
 664              		.code	16
 665              		.thumb_func
 666              		.type	CapSense_SsPostAllWidgetsScan, %function
 667              	CapSense_SsPostAllWidgetsScan:
 668              	.LFB10:
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 669              		.loc 1 1125 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673 0000 10B5     		push	{r4, lr}
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 4, -8
 676              		.cfi_offset 14, -4
 677              	.L62:
1136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678              		.loc 1 1136 0
 679 0002 1B4A     		ldr	r2, .L63
 680 0004 9378     		ldrb	r3, [r2, #2]
 681 0006 0133     		adds	r3, r3, #1
 682 0008 DBB2     		uxtb	r3, r3
 683 000a 9370     		strb	r3, [r2, #2]
1138:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 49


 684              		.loc 1 1138 0
 685 000c 9078     		ldrb	r0, [r2, #2]
 686 000e C0B2     		uxtb	r0, r0
 687 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 688              	.LVL55:
 689 0014 041E     		subs	r4, r0, #0
 690              	.LVL56:
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 691              		.loc 1 1140 0
 692 0016 09D1     		bne	.L58
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 693              		.loc 1 1142 0
 694 0018 154B     		ldr	r3, .L63
 695 001a 9B78     		ldrb	r3, [r3, #2]
 696 001c 042B     		cmp	r3, #4
 697 001e 02D1     		bne	.L59
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 698              		.loc 1 1145 0
 699 0020 0022     		movs	r2, #0
 700 0022 134B     		ldr	r3, .L63
 701 0024 5A70     		strb	r2, [r3, #1]
 702              	.L59:
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 703              		.loc 1 1147 0
 704 0026 FFF7FEFF 		bl	CapSense_Scan
 705              	.LVL57:
 706 002a 1EE0     		b	.L60
 707              	.LVL58:
 708              	.L58:
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 709              		.loc 1 1149 0
 710 002c 104B     		ldr	r3, .L63
 711 002e 9B78     		ldrb	r3, [r3, #2]
 712 0030 042B     		cmp	r3, #4
 713 0032 11D1     		bne	.L61
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 714              		.loc 1 1163 0
 715 0034 0F4B     		ldr	r3, .L63+4
 716 0036 1A89     		ldrh	r2, [r3, #8]
 717 0038 0132     		adds	r2, r2, #1
 718 003a 1A81     		strh	r2, [r3, #8]
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 719              		.loc 1 1165 0
 720 003c DA68     		ldr	r2, [r3, #12]
 721 003e 8021     		movs	r1, #128
 722 0040 8A43     		bics	r2, r1
 723 0042 DA60     		str	r2, [r3, #12]
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 724              		.loc 1 1168 0
 725 0044 DA68     		ldr	r2, [r3, #12]
 726 0046 1202     		lsls	r2, r2, #8
 727 0048 120A     		lsrs	r2, r2, #8
 728 004a DA60     		str	r2, [r3, #12]
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 729              		.loc 1 1169 0
 730 004c DA68     		ldr	r2, [r3, #12]
 731 004e 0406     		lsls	r4, r0, #24
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 50


 732 0050 1443     		orrs	r4, r2
 733 0052 DC60     		str	r4, [r3, #12]
 734              	.LVL59:
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 735              		.loc 1 1172 0
 736 0054 0024     		movs	r4, #0
 737 0056 08E0     		b	.L60
 738              	.LVL60:
 739              	.L61:
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 740              		.loc 1 1177 0
 741 0058 064A     		ldr	r2, .L63+4
 742 005a D368     		ldr	r3, [r2, #12]
 743 005c 1B02     		lsls	r3, r3, #8
 744 005e 1B0A     		lsrs	r3, r3, #8
 745 0060 D360     		str	r3, [r2, #12]
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 746              		.loc 1 1178 0
 747 0062 D168     		ldr	r1, [r2, #12]
 748 0064 0306     		lsls	r3, r0, #24
 749 0066 0B43     		orrs	r3, r1
 750 0068 D360     		str	r3, [r2, #12]
 751              	.LVL61:
 752              	.L60:
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
 753              		.loc 1 1180 0
 754 006a 002C     		cmp	r4, #0
 755 006c C9D1     		bne	.L62
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 756              		.loc 1 1182 0
 757              		@ sp needed
 758              	.LVL62:
 759 006e 10BD     		pop	{r4, pc}
 760              	.L64:
 761              		.align	2
 762              	.L63:
 763 0070 00000000 		.word	.LANCHOR0
 764 0074 00000000 		.word	CapSense_dsRam
 765              		.cfi_endproc
 766              	.LFE10:
 767              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 768              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 769              		.align	2
 770              		.global	CapSense_SsIsrInitialize
 771              		.code	16
 772              		.thumb_func
 773              		.type	CapSense_SsIsrInitialize, %function
 774              	CapSense_SsIsrInitialize:
 775              	.LFB11:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 776              		.loc 1 1202 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              	.LVL63:
 781 0000 10B5     		push	{r4, lr}
 782              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 51


 783              		.cfi_offset 4, -8
 784              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 785              		.loc 1 1203 0
 786 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 787              	.LVL64:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 788              		.loc 1 1204 0
 789              		@ sp needed
 790 0006 10BD     		pop	{r4, pc}
 791              		.cfi_endproc
 792              	.LFE11:
 793              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 794              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 795              		.align	2
 796              		.global	CapSense_SsSetModClkClockDivider
 797              		.code	16
 798              		.thumb_func
 799              		.type	CapSense_SsSetModClkClockDivider, %function
 800              	CapSense_SsSetModClkClockDivider:
 801              	.LFB12:
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 802              		.loc 1 1225 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 807              	.LVL65:
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 808              		.loc 1 1228 0
 809 0000 074A     		ldr	r2, .L68
 810 0002 084B     		ldr	r3, .L68+4
 811 0004 1A60     		str	r2, [r3]
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 812              		.loc 1 1238 0
 813 0006 0138     		subs	r0, r0, #1
 814              	.LVL66:
 815 0008 0002     		lsls	r0, r0, #8
 816              	.LVL67:
 817 000a 074B     		ldr	r3, .L68+8
 818 000c 1860     		str	r0, [r3]
 819              	.L67:
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 820              		.loc 1 1241 0 discriminator 1
 821 000e 054B     		ldr	r3, .L68+4
 822 0010 1B68     		ldr	r3, [r3]
 823 0012 002B     		cmp	r3, #0
 824 0014 FBDB     		blt	.L67
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 825              		.loc 1 1247 0
 826 0016 054A     		ldr	r2, .L68+12
 827 0018 024B     		ldr	r3, .L68+4
 828 001a 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 829              		.loc 1 1272 0
 830              		@ sp needed
 831 001c 7047     		bx	lr
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 52


 832              	.L69:
 833 001e C046     		.align	2
 834              	.L68:
 835 0020 40000040 		.word	1073741888
 836 0024 00000140 		.word	1073807360
 837 0028 00030140 		.word	1073808128
 838 002c 40FF0080 		.word	-2147418304
 839              		.cfi_endproc
 840              	.LFE12:
 841              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 842              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 843              		.align	2
 844              		.global	CapSense_SsSetSnsClockDivider
 845              		.code	16
 846              		.thumb_func
 847              		.type	CapSense_SsSetSnsClockDivider, %function
 848              	CapSense_SsSetSnsClockDivider:
 849              	.LFB13:
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 850              		.loc 1 1293 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL68:
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
 856              		.loc 1 1309 0
 857 0000 074A     		ldr	r2, .L72
 858 0002 084B     		ldr	r3, .L72+4
 859 0004 1A60     		str	r2, [r3]
1319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 860              		.loc 1 1319 0
 861 0006 0138     		subs	r0, r0, #1
 862              	.LVL69:
 863 0008 0002     		lsls	r0, r0, #8
 864              	.LVL70:
 865 000a 074B     		ldr	r3, .L72+8
 866 000c 1860     		str	r0, [r3]
 867              	.L71:
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 868              		.loc 1 1322 0 discriminator 1
 869 000e 054B     		ldr	r3, .L72+4
 870 0010 1B68     		ldr	r3, [r3]
 871 0012 002B     		cmp	r3, #0
 872 0014 FBDB     		blt	.L71
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
 873              		.loc 1 1328 0
 874 0016 054A     		ldr	r2, .L72+12
 875 0018 024B     		ldr	r3, .L72+4
 876 001a 1A60     		str	r2, [r3]
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 877              		.loc 1 1354 0
 878              		@ sp needed
 879 001c 7047     		bx	lr
 880              	.L73:
 881 001e C046     		.align	2
 882              	.L72:
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 53


 883 0020 41000040 		.word	1073741889
 884 0024 00000140 		.word	1073807360
 885 0028 04030140 		.word	1073808132
 886 002c 41FF0080 		.word	-2147418303
 887              		.cfi_endproc
 888              	.LFE13:
 889              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 890              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 891              		.align	2
 892              		.global	CapSense_SsSetClockDividers
 893              		.code	16
 894              		.thumb_func
 895              		.type	CapSense_SsSetClockDividers, %function
 896              	CapSense_SsSetClockDividers:
 897              	.LFB14:
1377:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 898              		.loc 1 1377 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              	.LVL71:
 903 0000 10B5     		push	{r4, lr}
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 4, -8
 906              		.cfi_offset 14, -4
 907 0002 0400     		movs	r4, r0
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 908              		.loc 1 1379 0
 909 0004 0800     		movs	r0, r1
 910              	.LVL72:
 911 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 912              	.LVL73:
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 913              		.loc 1 1382 0
 914 000a 2000     		movs	r0, r4
 915 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 916              	.LVL74:
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 917              		.loc 1 1383 0
 918              		@ sp needed
 919              	.LVL75:
 920 0010 10BD     		pop	{r4, pc}
 921              		.cfi_endproc
 922              	.LFE14:
 923              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 924 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 925              		.align	2
 926              		.global	CapSense_CalibrateWidget
 927              		.code	16
 928              		.thumb_func
 929              		.type	CapSense_CalibrateWidget, %function
 930              	CapSense_CalibrateWidget:
 931              	.LFB15:
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 932              		.loc 1 1429 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 54


 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              	.LVL76:
 937 0000 10B5     		push	{r4, lr}
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 4, -8
 940              		.cfi_offset 14, -4
 941 0002 0300     		movs	r3, r0
 942              	.LVL77:
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 943              		.loc 1 1434 0
 944 0004 0428     		cmp	r0, #4
 945 0006 01D8     		bhi	.L78
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 946              		.loc 1 1430 0
 947 0008 0020     		movs	r0, #0
 948              	.LVL78:
 949 000a 00E0     		b	.L76
 950              	.LVL79:
 951              	.L78:
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 952              		.loc 1 1436 0
 953 000c 0120     		movs	r0, #1
 954              	.LVL80:
 955              	.L76:
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 956              		.loc 1 1454 0
 957 000e 0028     		cmp	r0, #0
 958 0010 03D1     		bne	.L77
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 959              		.loc 1 1483 0
 960 0012 5521     		movs	r1, #85
 961 0014 1800     		movs	r0, r3
 962              	.LVL81:
 963 0016 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 964              	.LVL82:
 965              	.L77:
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 966              		.loc 1 1505 0
 967              		@ sp needed
 968 001a 10BD     		pop	{r4, pc}
 969              		.cfi_endproc
 970              	.LFE15:
 971              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 972              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 973              		.align	2
 974              		.global	CapSense_CalibrateAllWidgets
 975              		.code	16
 976              		.thumb_func
 977              		.type	CapSense_CalibrateAllWidgets, %function
 978              	CapSense_CalibrateAllWidgets:
 979              	.LFB16:
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 980              		.loc 1 1542 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 55


 985              		.cfi_def_cfa_offset 16
 986              		.cfi_offset 4, -16
 987              		.cfi_offset 5, -12
 988              		.cfi_offset 6, -8
 989              		.cfi_offset 14, -4
 990              	.LVL83:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 991              		.loc 1 1546 0
 992 0002 0024     		movs	r4, #0
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 993              		.loc 1 1543 0
 994 0004 0025     		movs	r5, #0
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 995              		.loc 1 1546 0
 996 0006 04E0     		b	.L80
 997              	.LVL84:
 998              	.L81:
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 999              		.loc 1 1548 0 discriminator 3
 1000 0008 2000     		movs	r0, r4
 1001 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1002              	.LVL85:
 1003 000e 0543     		orrs	r5, r0
 1004              	.LVL86:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1005              		.loc 1 1546 0 discriminator 3
 1006 0010 0134     		adds	r4, r4, #1
 1007              	.LVL87:
 1008              	.L80:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1009              		.loc 1 1546 0 is_stmt 0 discriminator 1
 1010 0012 042C     		cmp	r4, #4
 1011 0014 F8D9     		bls	.L81
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1012              		.loc 1 1552 0 is_stmt 1
 1013 0016 2800     		movs	r0, r5
 1014              		@ sp needed
 1015              	.LVL88:
 1016              	.LVL89:
 1017 0018 70BD     		pop	{r4, r5, r6, pc}
 1018              		.cfi_endproc
 1019              	.LFE16:
 1020              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1021 001a C046     		.section	.text.CapSense_SsClearCSDSensors,"ax",%progbits
 1022              		.align	2
 1023              		.global	CapSense_SsClearCSDSensors
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	CapSense_SsClearCSDSensors, %function
 1027              	CapSense_SsClearCSDSensors:
 1028              	.LFB22:
1956:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
1957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1958:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1959:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 56


1962:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1969:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
1970:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
1976:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1979:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
1982:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1985:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1989:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2004:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2006:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2011:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2014:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2017:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 57


2019:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2021:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2024:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2025:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2026:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2045:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2051:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2064:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2065:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2066:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2072:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 58


2076:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2077:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2083:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2086:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2091:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2098:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2102:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2104:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2105:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2122:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2130:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 59


2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2137:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2138:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2143:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2144:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2157:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2160:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2163:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2169:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2172:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2173:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2174:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2177:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2178:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2179:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2180:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2181:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2182:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2183:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2184:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2185:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2186:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2187:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2188:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 60


2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2195:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2197:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2216:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2218:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2222:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2223:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2230:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2236:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2244:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 61


2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2262:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2280:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2281:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2283:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2289:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2294:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 62


2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2313:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2318:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2321:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2334:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2345:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2348:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2355:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 63


2361:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2370:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2372:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2373:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2374:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2377:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2381:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2382:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2391:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2404:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 64


2418:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2432:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2433:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2440:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2442:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2444:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2446:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2447:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2448:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2449:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2450:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2451:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2452:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2453:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2454:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2455:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2456:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2457:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2458:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2459:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2460:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2462:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2463:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2464:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2465:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2466:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2467:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2469:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2472:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2473:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2474:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 65


2475:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2476:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2477:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2478:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2479:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2498:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2500:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2507:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2513:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2522:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2528:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 66


2532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2535:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2536:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2537:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2540:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2541:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2542:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2551:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsClearCSDSensors
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2559:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  an inactive state.
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  connection is Ground or Hi-Z.
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsClearCSDSensors(void)
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1029              		.loc 1 2569 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033 0000 70B5     		push	{r4, r5, r6, lr}
 1034              		.cfi_def_cfa_offset 16
 1035              		.cfi_offset 4, -16
 1036              		.cfi_offset 5, -12
 1037              		.cfi_offset 6, -8
 1038              		.cfi_offset 14, -4
 1039              	.LVL90:
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
2572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 pinIndex;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 67


2578:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Declare ptr to sensor IO structure */
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 1040              		.loc 1 2585 0
 1041 0002 0025     		movs	r5, #0
 1042 0004 12E0     		b	.L83
 1043              	.LVL91:
 1044              	.L86:
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2588:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2589:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2590:Generated_Source\PSoC4/CapSense_Sensing.c ****                 curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 1045              		.loc 1 2590 0
 1046 0006 6B01     		lsls	r3, r5, #5
 1047 0008 0A4A     		ldr	r2, .L87
 1048 000a 9E58     		ldr	r6, [r3, r2]
 1049              	.LVL92:
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
2592:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Go through all the sensors in widget */
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_dsFlash.wdgtArray[wdgtIndex].totalNu
 1050              		.loc 1 2594 0
 1051 000c 0024     		movs	r4, #0
 1052 000e 06E0     		b	.L84
 1053              	.LVL93:
 1054              	.L85:
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2597:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Check ganged sns flag */
2598:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].stat
2599:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                  CapSense_GANGED_SNS_MASK))
2600:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2601:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get sns pointer */
2602:Generated_Source\PSoC4/CapSense_Sensing.c ****                             curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
2603:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                CapSense_dsFlash.wdgtArray[wdgtIndex
2604:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                snsIndex;
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2606:Generated_Source\PSoC4/CapSense_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2607:Generated_Source\PSoC4/CapSense_Sensing.c ****                             {
2608:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2609:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId 
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2611:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Disconnect dedicated pin */
2612:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 CapSense_CSDDisconnectSns(curDedicatedSnsIOPtr);
2613:Generated_Source\PSoC4/CapSense_Sensing.c ****                             }
2614:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2615:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2616:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2617:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Disable sensor */
2618:Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2619:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 68


2620:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable sensor */
2622:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1055              		.loc 1 2622 0 discriminator 3
 1056 0010 E300     		lsls	r3, r4, #3
 1057 0012 1B1B     		subs	r3, r3, r4
 1058 0014 9800     		lsls	r0, r3, #2
 1059 0016 3018     		adds	r0, r6, r0
 1060 0018 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1061              	.LVL94:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1062              		.loc 1 2594 0 discriminator 3
 1063 001c 0134     		adds	r4, r4, #1
 1064              	.LVL95:
 1065              	.L84:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1066              		.loc 1 2594 0 is_stmt 0 discriminator 1
 1067 001e 6B01     		lsls	r3, r5, #5
 1068 0020 044A     		ldr	r2, .L87
 1069 0022 D318     		adds	r3, r2, r3
 1070 0024 1B7E     		ldrb	r3, [r3, #24]
 1071 0026 9C42     		cmp	r4, r3
 1072 0028 F2D3     		bcc	.L85
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1073              		.loc 1 2585 0 is_stmt 1 discriminator 2
 1074 002a 0135     		adds	r5, r5, #1
 1075              	.LVL96:
 1076              	.L83:
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1077              		.loc 1 2585 0 is_stmt 0 discriminator 1
 1078 002c 042D     		cmp	r5, #4
 1079 002e EAD9     		bls	.L86
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1080              		.loc 1 2627 0 is_stmt 1
 1081              		@ sp needed
 1082              	.LVL97:
 1083 0030 70BD     		pop	{r4, r5, r6, pc}
 1084              	.L88:
 1085 0032 C046     		.align	2
 1086              	.L87:
 1087 0034 00000000 		.word	CapSense_dsFlash
 1088              		.cfi_endproc
 1089              	.LFE22:
 1090              		.size	CapSense_SsClearCSDSensors, .-CapSense_SsClearCSDSensors
 1091              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1092              		.align	2
 1093              		.global	CapSense_SsCSDGetColSnsClkDivider
 1094              		.code	16
 1095              		.thumb_func
 1096              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1097              	CapSense_SsCSDGetColSnsClkDivider:
 1098              	.LFB23:
2628:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 69


2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1099              		.loc 1 2651 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 1104              	.LVL98:
2652:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2653:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2654:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2655:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2656:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2658:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1105              		.loc 1 2658 0
 1106 0000 4001     		lsls	r0, r0, #5
 1107              	.LVL99:
 1108 0002 024B     		ldr	r3, .L90
 1109 0004 1818     		adds	r0, r3, r0
 1110 0006 4368     		ldr	r3, [r0, #4]
 1111              	.LVL100:
2659:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2661:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1112              		.loc 1 2661 0
 1113 0008 5889     		ldrh	r0, [r3, #10]
 1114              	.LVL101:
2662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2663:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2665:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2666:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2668:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2669:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 70


 1115              		.loc 1 2669 0
 1116              		@ sp needed
 1117 000a 7047     		bx	lr
 1118              	.L91:
 1119              		.align	2
 1120              	.L90:
 1121 000c 00000000 		.word	CapSense_dsFlash
 1122              		.cfi_endproc
 1123              	.LFE23:
 1124              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1125              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1126              		.align	2
 1127              		.global	CapSense_SsCSDCalcPrsSize
 1128              		.code	16
 1129              		.thumb_func
 1130              		.type	CapSense_SsCSDCalcPrsSize, %function
 1131              	CapSense_SsCSDCalcPrsSize:
 1132              	.LFB24:
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2672:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2673:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2674:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2675:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2676:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2677:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2678:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2679:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2680:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2681:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2682:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2683:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2684:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2685:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2686:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2687:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2688:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2689:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2690:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2691:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2692:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2693:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2694:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2696:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2704:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 71


2709:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2711:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2716:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2730:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1133              		.loc 1 2738 0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 0
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 1137              	.LVL102:
 1138 0000 10B5     		push	{r4, lr}
 1139              		.cfi_def_cfa_offset 8
 1140              		.cfi_offset 4, -8
 1141              		.cfi_offset 14, -4
 1142              	.LVL103:
2739:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE != CapSense_CSDV2) && \
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK))
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
 1143              		.loc 1 2744 0
 1144 0002 2023     		movs	r3, #32
 1145 0004 0A4A     		ldr	r2, .L96
 1146 0006 D45C     		ldrb	r4, [r2, r3]
 1147              	.LVL104:
2745:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1148              		.loc 1 2747 0
 1149 0008 0203     		lsls	r2, r0, #12
 1150 000a 121A     		subs	r2, r2, r0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 72


 1151 000c 1F3B     		subs	r3, r3, #31
 1152 000e 8B40     		lsls	r3, r3, r1
 1153 0010 013B     		subs	r3, r3, #1
 1154 0012 6343     		muls	r3, r4
 1155 0014 9A42     		cmp	r2, r3
 1156 0016 05D9     		bls	.L94
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1157              		.loc 1 2752 0
 1158 0018 0202     		lsls	r2, r0, #8
 1159 001a 101A     		subs	r0, r2, r0
 1160              	.LVL105:
 1161 001c 8342     		cmp	r3, r0
 1162 001e 03D3     		bcc	.L95
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1163              		.loc 1 2755 0
 1164 0020 4020     		movs	r0, #64
 1165 0022 02E0     		b	.L93
 1166              	.LVL106:
 1167              	.L94:
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1168              		.loc 1 2750 0
 1169 0024 C020     		movs	r0, #192
 1170              	.LVL107:
 1171 0026 00E0     		b	.L93
 1172              	.L95:
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2757:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2758:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2759:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1173              		.loc 1 2760 0
 1174 0028 0020     		movs	r0, #0
 1175              	.L93:
 1176              	.LVL108:
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2762:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1177              		.loc 1 2763 0
 1178 002a C0B2     		uxtb	r0, r0
 1179              	.LVL109:
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1180              		.loc 1 2764 0
 1181              		@ sp needed
 1182              	.LVL110:
 1183 002c 10BD     		pop	{r4, pc}
 1184              	.L97:
 1185 002e C046     		.align	2
 1186              	.L96:
 1187 0030 00000000 		.word	CapSense_dsRam
 1188              		.cfi_endproc
 1189              	.LFE24:
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 73


 1190              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1191              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1192              		.align	2
 1193              		.code	16
 1194              		.thumb_func
 1195              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1196              	CapSense_SsSetWidgetSenseClkSrc:
 1197              	.LFB21:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1198              		.loc 1 2241 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              	.LVL111:
 1203 0000 10B5     		push	{r4, lr}
 1204              		.cfi_def_cfa_offset 8
 1205              		.cfi_offset 4, -8
 1206              		.cfi_offset 14, -4
 1207 0002 0C00     		movs	r4, r1
2253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1208              		.loc 1 2253 0
 1209 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1210              	.LVL112:
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
 1211              		.loc 1 2273 0
 1212 0008 4000     		lsls	r0, r0, #1
 1213              	.LVL113:
 1214 000a 2188     		ldrh	r1, [r4]
 1215 000c FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1216              	.LVL114:
2282:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1217              		.loc 1 2282 0
 1218 0010 2073     		strb	r0, [r4, #12]
2317:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1219              		.loc 1 2317 0
 1220              		@ sp needed
 1221              	.LVL115:
 1222 0012 10BD     		pop	{r4, pc}
 1223              		.cfi_endproc
 1224              	.LFE21:
 1225              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1226              		.global	__aeabi_uidiv
 1227              		.section	.text.CapSense_SsAutoTune,"ax",%progbits
 1228              		.align	2
 1229              		.global	CapSense_SsAutoTune
 1230              		.code	16
 1231              		.thumb_func
 1232              		.type	CapSense_SsAutoTune, %function
 1233              	CapSense_SsAutoTune:
 1234              	.LFB17:
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1235              		.loc 1 1578 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 56
 1238              		@ frame_needed = 0, uses_anonymous_args = 0
 1239 0000 70B5     		push	{r4, r5, r6, lr}
 1240              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 74


 1241              		.cfi_offset 4, -16
 1242              		.cfi_offset 5, -12
 1243              		.cfi_offset 6, -8
 1244              		.cfi_offset 14, -4
 1245 0002 8EB0     		sub	sp, sp, #56
 1246              		.cfi_def_cfa_offset 72
 1247              	.LVL116:
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
 1248              		.loc 1 1592 0
 1249 0004 FA23     		movs	r3, #250
 1250 0006 9B00     		lsls	r3, r3, #2
 1251 0008 02AA     		add	r2, sp, #8
 1252 000a 1380     		strh	r3, [r2]
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
 1253              		.loc 1 1593 0
 1254 000c C833     		adds	r3, r3, #200
 1255 000e 5380     		strh	r3, [r2, #2]
1594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1256              		.loc 1 1594 0
 1257 0010 9380     		strh	r3, [r2, #4]
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 1258              		.loc 1 1602 0
 1259 0012 404B     		ldr	r3, .L111
 1260 0014 9381     		strh	r3, [r2, #12]
 1261              	.LVL117:
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1262              		.loc 1 1625 0
 1263 0016 0025     		movs	r5, #0
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1264              		.loc 1 1579 0
 1265 0018 0026     		movs	r6, #0
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1266              		.loc 1 1625 0
 1267 001a 41E0     		b	.L100
 1268              	.LVL118:
 1269              	.L105:
1630:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1270              		.loc 1 1630 0
 1271 001c 6B01     		lsls	r3, r5, #5
 1272 001e 3E4A     		ldr	r2, .L111+4
 1273 0020 D318     		adds	r3, r2, r3
 1274 0022 5C68     		ldr	r4, [r3, #4]
 1275              	.LVL119:
1634:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1276              		.loc 1 1634 0
 1277 0024 0C23     		movs	r3, #12
 1278 0026 2380     		strh	r3, [r4]
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
 1279              		.loc 1 1637 0
 1280 0028 0023     		movs	r3, #0
 1281 002a 2373     		strb	r3, [r4, #12]
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
 1282              		.loc 1 1638 0
 1283 002c 02AB     		add	r3, sp, #8
 1284 002e 9889     		ldrh	r0, [r3, #12]
 1285 0030 3A49     		ldr	r1, .L111+8
 1286 0032 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 75


 1287              	.LVL120:
 1288 0036 6081     		strh	r0, [r4, #10]
1649:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1289              		.loc 1 1649 0
 1290 0038 5521     		movs	r1, #85
 1291 003a 2800     		movs	r0, r5
 1292 003c FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1293              	.LVL121:
1698:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1294              		.loc 1 1698 0
 1295 0040 2300     		movs	r3, r4
 1296 0042 0A33     		adds	r3, r3, #10
 1297 0044 0693     		str	r3, [sp, #24]
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1298              		.loc 1 1701 0
 1299 0046 364B     		ldr	r3, .L111+12
 1300 0048 1B78     		ldrb	r3, [r3]
 1301 004a 02AA     		add	r2, sp, #8
 1302 004c 1376     		strb	r3, [r2, #24]
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
 1303              		.loc 1 1704 0
 1304 004e 354B     		ldr	r3, .L111+16
 1305 0050 1888     		ldrh	r0, [r3]
 1306 0052 FA23     		movs	r3, #250
 1307 0054 9B00     		lsls	r3, r3, #2
 1308 0056 5843     		muls	r0, r3
 1309 0058 3349     		ldr	r1, .L111+20
 1310 005a FFF7FEFF 		bl	__aeabi_uidiv
 1311              	.LVL122:
 1312 005e 02AB     		add	r3, sp, #8
 1313 0060 D881     		strh	r0, [r3, #14]
1708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1314              		.loc 1 1708 0
 1315 0062 1800     		movs	r0, r3
 1316 0064 FFF7FEFF 		bl	SmartSense_TunePrescalers
 1317              	.LVL123:
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1318              		.loc 1 1710 0
 1319 0068 304B     		ldr	r3, .L111+24
 1320 006a 9842     		cmp	r0, r3
 1321 006c 03D9     		bls	.L102
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1322              		.loc 1 1712 0
 1323 006e 0626     		movs	r6, #6
 1324              	.LVL124:
 1325 0070 01E0     		b	.L102
 1326              	.LVL125:
 1327              	.L103:
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1328              		.loc 1 1722 0
 1329 0072 5B00     		lsls	r3, r3, #1
 1330 0074 6381     		strh	r3, [r4, #10]
 1331              	.LVL126:
 1332              	.L102:
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1333              		.loc 1 1719 0
 1334 0076 02AB     		add	r3, sp, #8
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 76


 1335 0078 9989     		ldrh	r1, [r3, #12]
 1336 007a 6389     		ldrh	r3, [r4, #10]
 1337 007c 2C4A     		ldr	r2, .L111+28
 1338 007e 5A43     		muls	r2, r3
 1339 0080 9142     		cmp	r1, r2
 1340 0082 F6D8     		bhi	.L103
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1341              		.loc 1 1719 0 is_stmt 0 discriminator 1
 1342 0084 002B     		cmp	r3, #0
 1343 0086 F4D0     		beq	.L103
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
 1344              		.loc 1 1728 0 is_stmt 1
 1345 0088 2022     		movs	r2, #32
 1346 008a 2A49     		ldr	r1, .L111+32
 1347 008c 8A5C     		ldrb	r2, [r1, r2]
 1348 008e 5B00     		lsls	r3, r3, #1
 1349 0090 DBB2     		uxtb	r3, r3
 1350 0092 9A42     		cmp	r2, r3
 1351 0094 00D3     		bcc	.L104
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
 1352              		.loc 1 1730 0
 1353 0096 6281     		strh	r2, [r4, #10]
 1354              	.L104:
1737:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1355              		.loc 1 1737 0
 1356 0098 AA00     		lsls	r2, r5, #2
 1357 009a 09AB     		add	r3, sp, #36
 1358 009c D050     		str	r0, [r2, r3]
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1359              		.loc 1 1625 0
 1360 009e 0135     		adds	r5, r5, #1
 1361              	.LVL127:
 1362              	.L100:
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1363              		.loc 1 1625 0 is_stmt 0 discriminator 1
 1364 00a0 042D     		cmp	r5, #4
 1365 00a2 BBD9     		bls	.L105
 1366 00a4 0024     		movs	r4, #0
 1367 00a6 1EE0     		b	.L106
 1368              	.LVL128:
 1369              	.L107:
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1370              		.loc 1 1771 0 is_stmt 1
 1371 00a8 6301     		lsls	r3, r4, #5
 1372 00aa 1B4A     		ldr	r2, .L111+4
 1373 00ac D318     		adds	r3, r2, r3
 1374 00ae 5D68     		ldr	r5, [r3, #4]
 1375              	.LVL129:
1775:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1376              		.loc 1 1775 0
 1377 00b0 5521     		movs	r1, #85
 1378 00b2 2000     		movs	r0, r4
 1379 00b4 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1380              	.LVL130:
 1381 00b8 0643     		orrs	r6, r0
 1382              	.LVL131:
1778:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 77


 1383              		.loc 1 1778 0
 1384 00ba 2B00     		movs	r3, r5
 1385 00bc 0A33     		adds	r3, r3, #10
 1386 00be 0693     		str	r3, [sp, #24]
1781:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1387              		.loc 1 1781 0
 1388 00c0 A200     		lsls	r2, r4, #2
 1389 00c2 09AB     		add	r3, sp, #36
 1390 00c4 D358     		ldr	r3, [r2, r3]
 1391 00c6 0193     		str	r3, [sp, #4]
 1392 00c8 0493     		str	r3, [sp, #16]
1784:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1393              		.loc 1 1784 0
 1394 00ca 154B     		ldr	r3, .L111+12
 1395 00cc 1B78     		ldrb	r3, [r3]
 1396 00ce 02AA     		add	r2, sp, #8
 1397 00d0 1376     		strb	r3, [r2, #24]
1807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1398              		.loc 1 1807 0
 1399 00d2 EB89     		ldrh	r3, [r5, #14]
 1400 00d4 D380     		strh	r3, [r2, #6]
1810:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1401              		.loc 1 1810 0
 1402 00d6 2B00     		movs	r3, r5
 1403 00d8 1033     		adds	r3, r3, #16
 1404 00da 0793     		str	r3, [sp, #28]
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1405              		.loc 1 1813 0
 1406 00dc 1000     		movs	r0, r2
 1407 00de FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1408              	.LVL132:
 1409 00e2 2880     		strh	r0, [r5]
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1410              		.loc 1 1766 0
 1411 00e4 0134     		adds	r4, r4, #1
 1412              	.LVL133:
 1413              	.L106:
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1414              		.loc 1 1766 0 is_stmt 0 discriminator 1
 1415 00e6 042C     		cmp	r4, #4
 1416 00e8 DED9     		bls	.L107
 1417 00ea 0024     		movs	r4, #0
 1418              	.LVL134:
 1419 00ec 0CE0     		b	.L108
 1420              	.LVL135:
 1421              	.L109:
1830:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1422              		.loc 1 1830 0 is_stmt 1
 1423 00ee 6301     		lsls	r3, r4, #5
 1424 00f0 094A     		ldr	r2, .L111+4
 1425 00f2 D318     		adds	r3, r2, r3
 1426 00f4 5968     		ldr	r1, [r3, #4]
 1427              	.LVL136:
1833:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1428              		.loc 1 1833 0
 1429 00f6 2000     		movs	r0, r4
 1430 00f8 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 78


 1431              	.LVL137:
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1432              		.loc 1 1836 0
 1433 00fc 5521     		movs	r1, #85
 1434 00fe 2000     		movs	r0, r4
 1435 0100 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1436              	.LVL138:
 1437 0104 0643     		orrs	r6, r0
 1438              	.LVL139:
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1439              		.loc 1 1825 0
 1440 0106 0134     		adds	r4, r4, #1
 1441              	.LVL140:
 1442              	.L108:
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1443              		.loc 1 1825 0 is_stmt 0 discriminator 1
 1444 0108 042C     		cmp	r4, #4
 1445 010a F0D9     		bls	.L109
1845:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
 1446              		.loc 1 1845 0 is_stmt 1
 1447 010c 3000     		movs	r0, r6
 1448 010e 0EB0     		add	sp, sp, #56
 1449              		@ sp needed
 1450              	.LVL141:
 1451              	.LVL142:
 1452 0110 70BD     		pop	{r4, r5, r6, pc}
 1453              	.L112:
 1454 0112 C046     		.align	2
 1455              	.L111:
 1456 0114 C05D0000 		.word	24000
 1457 0118 00000000 		.word	CapSense_dsFlash
 1458 011c DC050000 		.word	1500
 1459 0120 00000000 		.word	CapSense_calibratedIdac
 1460 0124 00000000 		.word	CapSense_calibratedRawcount
 1461 0128 FF0F0000 		.word	4095
 1462 012c 870D0100 		.word	68999
 1463 0130 38310000 		.word	12600
 1464 0134 00000000 		.word	CapSense_dsRam
 1465              		.cfi_endproc
 1466              	.LFE17:
 1467              		.size	CapSense_SsAutoTune, .-CapSense_SsAutoTune
 1468              		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1469              		.align	2
 1470              		.global	CapSense_SsInitializeSourceSenseClk
 1471              		.code	16
 1472              		.thumb_func
 1473              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1474              	CapSense_SsInitializeSourceSenseClk:
 1475              	.LFB20:
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1476              		.loc 1 2188 0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 0
 1479              		@ frame_needed = 0, uses_anonymous_args = 0
 1480 0000 10B5     		push	{r4, lr}
 1481              		.cfi_def_cfa_offset 8
 1482              		.cfi_offset 4, -8
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 79


 1483              		.cfi_offset 14, -4
 1484              	.LVL143:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1485              		.loc 1 2192 0
 1486 0002 0024     		movs	r4, #0
 1487 0004 07E0     		b	.L114
 1488              	.LVL144:
 1489              	.L115:
2194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1490              		.loc 1 2194 0
 1491 0006 6301     		lsls	r3, r4, #5
 1492 0008 044A     		ldr	r2, .L116
 1493 000a D318     		adds	r3, r2, r3
 1494 000c 5968     		ldr	r1, [r3, #4]
 1495              	.LVL145:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1496              		.loc 1 2200 0
 1497 000e 2000     		movs	r0, r4
 1498 0010 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1499              	.LVL146:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1500              		.loc 1 2192 0
 1501 0014 0134     		adds	r4, r4, #1
 1502              	.LVL147:
 1503              	.L114:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1504              		.loc 1 2192 0 is_stmt 0 discriminator 1
 1505 0016 042C     		cmp	r4, #4
 1506 0018 F5D9     		bls	.L115
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1507              		.loc 1 2215 0 is_stmt 1
 1508              		@ sp needed
 1509              	.LVL148:
 1510 001a 10BD     		pop	{r4, pc}
 1511              	.L117:
 1512              		.align	2
 1513              	.L116:
 1514 001c 00000000 		.word	CapSense_dsFlash
 1515              		.cfi_endproc
 1516              	.LFE20:
 1517              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1518              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1519              		.align	2
 1520              		.global	CapSense_SsInitialize
 1521              		.code	16
 1522              		.thumb_func
 1523              		.type	CapSense_SsInitialize, %function
 1524              	CapSense_SsInitialize:
 1525              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1526              		.loc 1 517 0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 0
 1529              		@ frame_needed = 0, uses_anonymous_args = 0
 1530 0000 10B5     		push	{r4, lr}
 1531              		.cfi_def_cfa_offset 8
 1532              		.cfi_offset 4, -8
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 80


 1533              		.cfi_offset 14, -4
 1534              	.LVL149:
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 1535              		.loc 1 551 0
 1536 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacs
 1537              	.LVL150:
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1538              		.loc 1 556 0
 1539 0006 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1540              	.LVL151:
 561:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1541              		.loc 1 561 0
 1542 000a FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 1543              	.LVL152:
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 1544              		.loc 1 568 0
 1545 000e FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1546              	.LVL153:
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 1547              		.loc 1 569 0
 1548 0012 0120     		movs	r0, #1
 1549 0014 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1550              	.LVL154:
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1551              		.loc 1 584 0
 1552 0018 0020     		movs	r0, #0
 1553              		@ sp needed
 1554 001a 10BD     		pop	{r4, pc}
 1555              		.cfi_endproc
 1556              	.LFE5:
 1557              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1558              		.comm	CapSense_curSnsIOPtr,4,4
 1559              		.comm	CapSense_curRamSnsPtr,4,4
 1560              		.global	CapSense_requestScanAllWidget
 1561              		.global	CapSense_sensorIndex
 1562              		.global	CapSense_widgetIndex
 1563              		.global	CapSense_scanFreqIndex
 1564              		.global	CapSense_currentSenseMethod
 1565              		.section	.rodata
 1566              		.type	CapSense_scanFreqIndex, %object
 1567              		.size	CapSense_scanFreqIndex, 1
 1568              	CapSense_scanFreqIndex:
 1569 0000 00       		.space	1
 1570              		.bss
 1571              		.set	.LANCHOR0,. + 0
 1572              		.type	CapSense_currentSenseMethod, %object
 1573              		.size	CapSense_currentSenseMethod, 1
 1574              	CapSense_currentSenseMethod:
 1575 0000 00       		.space	1
 1576              		.type	CapSense_requestScanAllWidget, %object
 1577              		.size	CapSense_requestScanAllWidget, 1
 1578              	CapSense_requestScanAllWidget:
 1579 0001 00       		.space	1
 1580              		.type	CapSense_widgetIndex, %object
 1581              		.size	CapSense_widgetIndex, 1
 1582              	CapSense_widgetIndex:
 1583 0002 00       		.space	1
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 81


 1584              		.type	CapSense_sensorIndex, %object
 1585              		.size	CapSense_sensorIndex, 1
 1586              	CapSense_sensorIndex:
 1587 0003 00       		.space	1
 1588              		.text
 1589              	.Letext0:
 1590              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1591              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1592              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 1593              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1594              		.file 6 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1595              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1596              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1597              		.section	.debug_info,"",%progbits
 1598              	.Ldebug_info0:
 1599 0000 5E100000 		.4byte	0x105e
 1600 0004 0400     		.2byte	0x4
 1601 0006 00000000 		.4byte	.Ldebug_abbrev0
 1602 000a 04       		.byte	0x4
 1603 000b 01       		.uleb128 0x1
 1604 000c 93020000 		.4byte	.LASF192
 1605 0010 0C       		.byte	0xc
 1606 0011 64080000 		.4byte	.LASF193
 1607 0015 300A0000 		.4byte	.LASF194
 1608 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1609 001d 00000000 		.4byte	0
 1610 0021 00000000 		.4byte	.Ldebug_line0
 1611 0025 02       		.uleb128 0x2
 1612 0026 01       		.byte	0x1
 1613 0027 06       		.byte	0x6
 1614 0028 F20A0000 		.4byte	.LASF0
 1615 002c 02       		.uleb128 0x2
 1616 002d 01       		.byte	0x1
 1617 002e 08       		.byte	0x8
 1618 002f 8E090000 		.4byte	.LASF1
 1619 0033 02       		.uleb128 0x2
 1620 0034 02       		.byte	0x2
 1621 0035 05       		.byte	0x5
 1622 0036 56070000 		.4byte	.LASF2
 1623 003a 02       		.uleb128 0x2
 1624 003b 02       		.byte	0x2
 1625 003c 07       		.byte	0x7
 1626 003d 1A0B0000 		.4byte	.LASF3
 1627 0041 02       		.uleb128 0x2
 1628 0042 04       		.byte	0x4
 1629 0043 05       		.byte	0x5
 1630 0044 8E070000 		.4byte	.LASF4
 1631 0048 02       		.uleb128 0x2
 1632 0049 04       		.byte	0x4
 1633 004a 07       		.byte	0x7
 1634 004b F6080000 		.4byte	.LASF5
 1635 004f 02       		.uleb128 0x2
 1636 0050 08       		.byte	0x8
 1637 0051 05       		.byte	0x5
 1638 0052 E6040000 		.4byte	.LASF6
 1639 0056 02       		.uleb128 0x2
 1640 0057 08       		.byte	0x8
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 82


 1641 0058 07       		.byte	0x7
 1642 0059 1D020000 		.4byte	.LASF7
 1643 005d 03       		.uleb128 0x3
 1644 005e 04       		.byte	0x4
 1645 005f 05       		.byte	0x5
 1646 0060 696E7400 		.ascii	"int\000"
 1647 0064 02       		.uleb128 0x2
 1648 0065 04       		.byte	0x4
 1649 0066 07       		.byte	0x7
 1650 0067 AF000000 		.4byte	.LASF8
 1651 006b 04       		.uleb128 0x4
 1652 006c 8A0B0000 		.4byte	.LASF9
 1653 0070 02       		.byte	0x2
 1654 0071 E401     		.2byte	0x1e4
 1655 0073 2C000000 		.4byte	0x2c
 1656 0077 04       		.uleb128 0x4
 1657 0078 27040000 		.4byte	.LASF10
 1658 007c 02       		.byte	0x2
 1659 007d E501     		.2byte	0x1e5
 1660 007f 3A000000 		.4byte	0x3a
 1661 0083 04       		.uleb128 0x4
 1662 0084 FB050000 		.4byte	.LASF11
 1663 0088 02       		.byte	0x2
 1664 0089 E601     		.2byte	0x1e6
 1665 008b 48000000 		.4byte	0x48
 1666 008f 02       		.uleb128 0x2
 1667 0090 04       		.byte	0x4
 1668 0091 04       		.byte	0x4
 1669 0092 D6010000 		.4byte	.LASF12
 1670 0096 02       		.uleb128 0x2
 1671 0097 08       		.byte	0x8
 1672 0098 04       		.byte	0x4
 1673 0099 900B0000 		.4byte	.LASF13
 1674 009d 02       		.uleb128 0x2
 1675 009e 01       		.byte	0x1
 1676 009f 08       		.byte	0x8
 1677 00a0 01040000 		.4byte	.LASF14
 1678 00a4 04       		.uleb128 0x4
 1679 00a5 85090000 		.4byte	.LASF15
 1680 00a9 02       		.byte	0x2
 1681 00aa 8602     		.2byte	0x286
 1682 00ac 48000000 		.4byte	0x48
 1683 00b0 04       		.uleb128 0x4
 1684 00b1 F8000000 		.4byte	.LASF16
 1685 00b5 02       		.byte	0x2
 1686 00b6 8E02     		.2byte	0x28e
 1687 00b8 BC000000 		.4byte	0xbc
 1688 00bc 05       		.uleb128 0x5
 1689 00bd 6B000000 		.4byte	0x6b
 1690 00c1 04       		.uleb128 0x4
 1691 00c2 9F060000 		.4byte	.LASF17
 1692 00c6 02       		.byte	0x2
 1693 00c7 9002     		.2byte	0x290
 1694 00c9 CD000000 		.4byte	0xcd
 1695 00cd 05       		.uleb128 0x5
 1696 00ce 83000000 		.4byte	0x83
 1697 00d2 04       		.uleb128 0x4
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 83


 1698 00d3 C9050000 		.4byte	.LASF18
 1699 00d7 02       		.byte	0x2
 1700 00d8 A002     		.2byte	0x2a0
 1701 00da DE000000 		.4byte	0xde
 1702 00de 06       		.uleb128 0x6
 1703 00df 04       		.byte	0x4
 1704 00e0 E4000000 		.4byte	0xe4
 1705 00e4 07       		.uleb128 0x7
 1706 00e5 04       		.uleb128 0x4
 1707 00e6 E4090000 		.4byte	.LASF19
 1708 00ea 03       		.byte	0x3
 1709 00eb 0D01     		.2byte	0x10d
 1710 00ed 77000000 		.4byte	0x77
 1711 00f1 04       		.uleb128 0x4
 1712 00f2 7D040000 		.4byte	.LASF20
 1713 00f6 03       		.byte	0x3
 1714 00f7 1101     		.2byte	0x111
 1715 00f9 6B000000 		.4byte	0x6b
 1716 00fd 08       		.uleb128 0x8
 1717 00fe 1C       		.byte	0x1c
 1718 00ff 04       		.byte	0x4
 1719 0100 2F       		.byte	0x2f
 1720 0101 7E010000 		.4byte	0x17e
 1721 0105 09       		.uleb128 0x9
 1722 0106 8F060000 		.4byte	.LASF21
 1723 010a 04       		.byte	0x4
 1724 010b 34       		.byte	0x34
 1725 010c 77000000 		.4byte	0x77
 1726 0110 00       		.byte	0
 1727 0111 09       		.uleb128 0x9
 1728 0112 0F090000 		.4byte	.LASF22
 1729 0116 04       		.byte	0x4
 1730 0117 39       		.byte	0x39
 1731 0118 77000000 		.4byte	0x77
 1732 011c 02       		.byte	0x2
 1733 011d 09       		.uleb128 0x9
 1734 011e 07010000 		.4byte	.LASF23
 1735 0122 04       		.byte	0x4
 1736 0123 3E       		.byte	0x3e
 1737 0124 77000000 		.4byte	0x77
 1738 0128 04       		.byte	0x4
 1739 0129 09       		.uleb128 0x9
 1740 012a 35080000 		.4byte	.LASF24
 1741 012e 04       		.byte	0x4
 1742 012f 43       		.byte	0x43
 1743 0130 77000000 		.4byte	0x77
 1744 0134 06       		.byte	0x6
 1745 0135 09       		.uleb128 0x9
 1746 0136 C8090000 		.4byte	.LASF25
 1747 013a 04       		.byte	0x4
 1748 013b 48       		.byte	0x48
 1749 013c 83000000 		.4byte	0x83
 1750 0140 08       		.byte	0x8
 1751 0141 09       		.uleb128 0x9
 1752 0142 2B010000 		.4byte	.LASF26
 1753 0146 04       		.byte	0x4
 1754 0147 4D       		.byte	0x4d
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 84


 1755 0148 77000000 		.4byte	0x77
 1756 014c 0C       		.byte	0xc
 1757 014d 09       		.uleb128 0x9
 1758 014e 6C030000 		.4byte	.LASF27
 1759 0152 04       		.byte	0x4
 1760 0153 52       		.byte	0x52
 1761 0154 77000000 		.4byte	0x77
 1762 0158 0E       		.byte	0xe
 1763 0159 09       		.uleb128 0x9
 1764 015a 48060000 		.4byte	.LASF28
 1765 015e 04       		.byte	0x4
 1766 015f 57       		.byte	0x57
 1767 0160 7E010000 		.4byte	0x17e
 1768 0164 10       		.byte	0x10
 1769 0165 09       		.uleb128 0x9
 1770 0166 83030000 		.4byte	.LASF29
 1771 016a 04       		.byte	0x4
 1772 016b 5C       		.byte	0x5c
 1773 016c 7E010000 		.4byte	0x17e
 1774 0170 14       		.byte	0x14
 1775 0171 09       		.uleb128 0x9
 1776 0172 27060000 		.4byte	.LASF30
 1777 0176 04       		.byte	0x4
 1778 0177 61       		.byte	0x61
 1779 0178 6B000000 		.4byte	0x6b
 1780 017c 18       		.byte	0x18
 1781 017d 00       		.byte	0
 1782 017e 06       		.uleb128 0x6
 1783 017f 04       		.byte	0x4
 1784 0180 77000000 		.4byte	0x77
 1785 0184 0A       		.uleb128 0xa
 1786 0185 2D0B0000 		.4byte	.LASF31
 1787 0189 04       		.byte	0x4
 1788 018a 63       		.byte	0x63
 1789 018b FD000000 		.4byte	0xfd
 1790 018f 08       		.uleb128 0x8
 1791 0190 0C       		.byte	0xc
 1792 0191 04       		.byte	0x4
 1793 0192 6E       		.byte	0x6e
 1794 0193 EC010000 		.4byte	0x1ec
 1795 0197 09       		.uleb128 0x9
 1796 0198 A50B0000 		.4byte	.LASF32
 1797 019c 04       		.byte	0x4
 1798 019d 73       		.byte	0x73
 1799 019e 77000000 		.4byte	0x77
 1800 01a2 00       		.byte	0
 1801 01a3 09       		.uleb128 0x9
 1802 01a4 AC0B0000 		.4byte	.LASF33
 1803 01a8 04       		.byte	0x4
 1804 01a9 77       		.byte	0x77
 1805 01aa 77000000 		.4byte	0x77
 1806 01ae 02       		.byte	0x2
 1807 01af 09       		.uleb128 0x9
 1808 01b0 B30B0000 		.4byte	.LASF34
 1809 01b4 04       		.byte	0x4
 1810 01b5 7B       		.byte	0x7b
 1811 01b6 77000000 		.4byte	0x77
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 85


 1812 01ba 04       		.byte	0x4
 1813 01bb 09       		.uleb128 0x9
 1814 01bc BA0B0000 		.4byte	.LASF35
 1815 01c0 04       		.byte	0x4
 1816 01c1 7F       		.byte	0x7f
 1817 01c2 77000000 		.4byte	0x77
 1818 01c6 06       		.byte	0x6
 1819 01c7 09       		.uleb128 0x9
 1820 01c8 C10B0000 		.4byte	.LASF36
 1821 01cc 04       		.byte	0x4
 1822 01cd 83       		.byte	0x83
 1823 01ce 77000000 		.4byte	0x77
 1824 01d2 08       		.byte	0x8
 1825 01d3 09       		.uleb128 0x9
 1826 01d4 C80B0000 		.4byte	.LASF37
 1827 01d8 04       		.byte	0x4
 1828 01d9 87       		.byte	0x87
 1829 01da 6B000000 		.4byte	0x6b
 1830 01de 0A       		.byte	0xa
 1831 01df 09       		.uleb128 0x9
 1832 01e0 CF0B0000 		.4byte	.LASF38
 1833 01e4 04       		.byte	0x4
 1834 01e5 8B       		.byte	0x8b
 1835 01e6 6B000000 		.4byte	0x6b
 1836 01ea 0B       		.byte	0xb
 1837 01eb 00       		.byte	0
 1838 01ec 0A       		.uleb128 0xa
 1839 01ed C5030000 		.4byte	.LASF39
 1840 01f1 04       		.byte	0x4
 1841 01f2 8C       		.byte	0x8c
 1842 01f3 8F010000 		.4byte	0x18f
 1843 01f7 0B       		.uleb128 0xb
 1844 01f8 01       		.byte	0x1
 1845 01f9 2C000000 		.4byte	0x2c
 1846 01fd 05       		.byte	0x5
 1847 01fe 6F       		.byte	0x6f
 1848 01ff 22020000 		.4byte	0x222
 1849 0203 0C       		.uleb128 0xc
 1850 0204 9A000000 		.4byte	.LASF40
 1851 0208 00       		.byte	0
 1852 0209 0C       		.uleb128 0xc
 1853 020a A5080000 		.4byte	.LASF41
 1854 020e 01       		.byte	0x1
 1855 020f 0C       		.uleb128 0xc
 1856 0210 B0070000 		.4byte	.LASF42
 1857 0214 02       		.byte	0x2
 1858 0215 0C       		.uleb128 0xc
 1859 0216 0D0A0000 		.4byte	.LASF43
 1860 021a 03       		.byte	0x3
 1861 021b 0C       		.uleb128 0xc
 1862 021c 67060000 		.4byte	.LASF44
 1863 0220 04       		.byte	0x4
 1864 0221 00       		.byte	0
 1865 0222 0A       		.uleb128 0xa
 1866 0223 B6040000 		.4byte	.LASF45
 1867 0227 05       		.byte	0x5
 1868 0228 75       		.byte	0x75
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 86


 1869 0229 F7010000 		.4byte	0x1f7
 1870 022d 08       		.uleb128 0x8
 1871 022e 12       		.byte	0x12
 1872 022f 05       		.byte	0x5
 1873 0230 8D       		.byte	0x8d
 1874 0231 C6020000 		.4byte	0x2c6
 1875 0235 09       		.uleb128 0x9
 1876 0236 52040000 		.4byte	.LASF46
 1877 023a 05       		.byte	0x5
 1878 023b 92       		.byte	0x92
 1879 023c 77000000 		.4byte	0x77
 1880 0240 00       		.byte	0
 1881 0241 09       		.uleb128 0x9
 1882 0242 56090000 		.4byte	.LASF47
 1883 0246 05       		.byte	0x5
 1884 0247 97       		.byte	0x97
 1885 0248 E5000000 		.4byte	0xe5
 1886 024c 02       		.byte	0x2
 1887 024d 09       		.uleb128 0x9
 1888 024e F9030000 		.4byte	.LASF48
 1889 0252 05       		.byte	0x5
 1890 0253 9C       		.byte	0x9c
 1891 0254 6B000000 		.4byte	0x6b
 1892 0258 04       		.byte	0x4
 1893 0259 09       		.uleb128 0x9
 1894 025a B5050000 		.4byte	.LASF49
 1895 025e 05       		.byte	0x5
 1896 025f A1       		.byte	0xa1
 1897 0260 6B000000 		.4byte	0x6b
 1898 0264 05       		.byte	0x5
 1899 0265 09       		.uleb128 0x9
 1900 0266 8A030000 		.4byte	.LASF50
 1901 026a 05       		.byte	0x5
 1902 026b A7       		.byte	0xa7
 1903 026c 6B000000 		.4byte	0x6b
 1904 0270 06       		.byte	0x6
 1905 0271 09       		.uleb128 0x9
 1906 0272 15050000 		.4byte	.LASF51
 1907 0276 05       		.byte	0x5
 1908 0277 AD       		.byte	0xad
 1909 0278 6B000000 		.4byte	0x6b
 1910 027c 07       		.byte	0x7
 1911 027d 09       		.uleb128 0x9
 1912 027e AE030000 		.4byte	.LASF52
 1913 0282 05       		.byte	0x5
 1914 0283 B4       		.byte	0xb4
 1915 0284 F1000000 		.4byte	0xf1
 1916 0288 08       		.byte	0x8
 1917 0289 09       		.uleb128 0x9
 1918 028a 14090000 		.4byte	.LASF53
 1919 028e 05       		.byte	0x5
 1920 028f BB       		.byte	0xbb
 1921 0290 C6020000 		.4byte	0x2c6
 1922 0294 09       		.byte	0x9
 1923 0295 09       		.uleb128 0x9
 1924 0296 A10A0000 		.4byte	.LASF54
 1925 029a 05       		.byte	0x5
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 87


 1926 029b C3       		.byte	0xc3
 1927 029c 77000000 		.4byte	0x77
 1928 02a0 0A       		.byte	0xa
 1929 02a1 09       		.uleb128 0x9
 1930 02a2 13070000 		.4byte	.LASF55
 1931 02a6 05       		.byte	0x5
 1932 02a7 C8       		.byte	0xc8
 1933 02a8 6B000000 		.4byte	0x6b
 1934 02ac 0C       		.byte	0xc
 1935 02ad 09       		.uleb128 0x9
 1936 02ae 35080000 		.4byte	.LASF24
 1937 02b2 05       		.byte	0x5
 1938 02b3 CE       		.byte	0xce
 1939 02b4 77000000 		.4byte	0x77
 1940 02b8 0E       		.byte	0xe
 1941 02b9 09       		.uleb128 0x9
 1942 02ba 83030000 		.4byte	.LASF29
 1943 02be 05       		.byte	0x5
 1944 02bf D3       		.byte	0xd3
 1945 02c0 77000000 		.4byte	0x77
 1946 02c4 10       		.byte	0x10
 1947 02c5 00       		.byte	0
 1948 02c6 0D       		.uleb128 0xd
 1949 02c7 6B000000 		.4byte	0x6b
 1950 02cb D6020000 		.4byte	0x2d6
 1951 02cf 0E       		.uleb128 0xe
 1952 02d0 D6020000 		.4byte	0x2d6
 1953 02d4 00       		.byte	0
 1954 02d5 00       		.byte	0
 1955 02d6 02       		.uleb128 0x2
 1956 02d7 04       		.byte	0x4
 1957 02d8 07       		.byte	0x7
 1958 02d9 E5080000 		.4byte	.LASF56
 1959 02dd 0A       		.uleb128 0xa
 1960 02de D6050000 		.4byte	.LASF57
 1961 02e2 05       		.byte	0x5
 1962 02e3 D4       		.byte	0xd4
 1963 02e4 2D020000 		.4byte	0x22d
 1964 02e8 08       		.uleb128 0x8
 1965 02e9 12       		.byte	0x12
 1966 02ea 05       		.byte	0x5
 1967 02eb D9       		.byte	0xd9
 1968 02ec 87030000 		.4byte	0x387
 1969 02f0 09       		.uleb128 0x9
 1970 02f1 52040000 		.4byte	.LASF46
 1971 02f5 05       		.byte	0x5
 1972 02f6 DE       		.byte	0xde
 1973 02f7 77000000 		.4byte	0x77
 1974 02fb 00       		.byte	0
 1975 02fc 09       		.uleb128 0x9
 1976 02fd 56090000 		.4byte	.LASF47
 1977 0301 05       		.byte	0x5
 1978 0302 E3       		.byte	0xe3
 1979 0303 E5000000 		.4byte	0xe5
 1980 0307 02       		.byte	0x2
 1981 0308 09       		.uleb128 0x9
 1982 0309 F9030000 		.4byte	.LASF48
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 88


 1983 030d 05       		.byte	0x5
 1984 030e E8       		.byte	0xe8
 1985 030f 6B000000 		.4byte	0x6b
 1986 0313 04       		.byte	0x4
 1987 0314 09       		.uleb128 0x9
 1988 0315 B5050000 		.4byte	.LASF49
 1989 0319 05       		.byte	0x5
 1990 031a ED       		.byte	0xed
 1991 031b 6B000000 		.4byte	0x6b
 1992 031f 05       		.byte	0x5
 1993 0320 09       		.uleb128 0x9
 1994 0321 8A030000 		.4byte	.LASF50
 1995 0325 05       		.byte	0x5
 1996 0326 F3       		.byte	0xf3
 1997 0327 6B000000 		.4byte	0x6b
 1998 032b 06       		.byte	0x6
 1999 032c 09       		.uleb128 0x9
 2000 032d 15050000 		.4byte	.LASF51
 2001 0331 05       		.byte	0x5
 2002 0332 F9       		.byte	0xf9
 2003 0333 6B000000 		.4byte	0x6b
 2004 0337 07       		.byte	0x7
 2005 0338 0F       		.uleb128 0xf
 2006 0339 AE030000 		.4byte	.LASF52
 2007 033d 05       		.byte	0x5
 2008 033e 0001     		.2byte	0x100
 2009 0340 F1000000 		.4byte	0xf1
 2010 0344 08       		.byte	0x8
 2011 0345 0F       		.uleb128 0xf
 2012 0346 14090000 		.4byte	.LASF53
 2013 034a 05       		.byte	0x5
 2014 034b 0701     		.2byte	0x107
 2015 034d C6020000 		.4byte	0x2c6
 2016 0351 09       		.byte	0x9
 2017 0352 0F       		.uleb128 0xf
 2018 0353 A10A0000 		.4byte	.LASF54
 2019 0357 05       		.byte	0x5
 2020 0358 0F01     		.2byte	0x10f
 2021 035a 77000000 		.4byte	0x77
 2022 035e 0A       		.byte	0xa
 2023 035f 0F       		.uleb128 0xf
 2024 0360 13070000 		.4byte	.LASF55
 2025 0364 05       		.byte	0x5
 2026 0365 1401     		.2byte	0x114
 2027 0367 6B000000 		.4byte	0x6b
 2028 036b 0C       		.byte	0xc
 2029 036c 0F       		.uleb128 0xf
 2030 036d 35080000 		.4byte	.LASF24
 2031 0371 05       		.byte	0x5
 2032 0372 1A01     		.2byte	0x11a
 2033 0374 77000000 		.4byte	0x77
 2034 0378 0E       		.byte	0xe
 2035 0379 0F       		.uleb128 0xf
 2036 037a 83030000 		.4byte	.LASF29
 2037 037e 05       		.byte	0x5
 2038 037f 1F01     		.2byte	0x11f
 2039 0381 77000000 		.4byte	0x77
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 89


 2040 0385 10       		.byte	0x10
 2041 0386 00       		.byte	0
 2042 0387 04       		.uleb128 0x4
 2043 0388 67090000 		.4byte	.LASF58
 2044 038c 05       		.byte	0x5
 2045 038d 2001     		.2byte	0x120
 2046 038f E8020000 		.4byte	0x2e8
 2047 0393 10       		.uleb128 0x10
 2048 0394 5A       		.byte	0x5a
 2049 0395 05       		.byte	0x5
 2050 0396 2601     		.2byte	0x126
 2051 0398 DD030000 		.4byte	0x3dd
 2052 039c 0F       		.uleb128 0xf
 2053 039d 03080000 		.4byte	.LASF59
 2054 03a1 05       		.byte	0x5
 2055 03a2 2B01     		.2byte	0x12b
 2056 03a4 87030000 		.4byte	0x387
 2057 03a8 00       		.byte	0
 2058 03a9 0F       		.uleb128 0xf
 2059 03aa DA040000 		.4byte	.LASF60
 2060 03ae 05       		.byte	0x5
 2061 03af 3001     		.2byte	0x130
 2062 03b1 87030000 		.4byte	0x387
 2063 03b5 12       		.byte	0x12
 2064 03b6 11       		.uleb128 0x11
 2065 03b7 757000   		.ascii	"up\000"
 2066 03ba 05       		.byte	0x5
 2067 03bb 3501     		.2byte	0x135
 2068 03bd 87030000 		.4byte	0x387
 2069 03c1 24       		.byte	0x24
 2070 03c2 0F       		.uleb128 0xf
 2071 03c3 C7010000 		.4byte	.LASF61
 2072 03c7 05       		.byte	0x5
 2073 03c8 3A01     		.2byte	0x13a
 2074 03ca 87030000 		.4byte	0x387
 2075 03ce 36       		.byte	0x36
 2076 03cf 0F       		.uleb128 0xf
 2077 03d0 2E040000 		.4byte	.LASF62
 2078 03d4 05       		.byte	0x5
 2079 03d5 3F01     		.2byte	0x13f
 2080 03d7 87030000 		.4byte	0x387
 2081 03db 48       		.byte	0x48
 2082 03dc 00       		.byte	0
 2083 03dd 04       		.uleb128 0x4
 2084 03de 72010000 		.4byte	.LASF63
 2085 03e2 05       		.byte	0x5
 2086 03e3 4001     		.2byte	0x140
 2087 03e5 93030000 		.4byte	0x393
 2088 03e9 10       		.uleb128 0x10
 2089 03ea 0A       		.byte	0xa
 2090 03eb 05       		.byte	0x5
 2091 03ec 4601     		.2byte	0x146
 2092 03ee 41040000 		.4byte	0x441
 2093 03f2 11       		.uleb128 0x11
 2094 03f3 72617700 		.ascii	"raw\000"
 2095 03f7 05       		.byte	0x5
 2096 03f8 4B01     		.2byte	0x14b
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 90


 2097 03fa 41040000 		.4byte	0x441
 2098 03fe 00       		.byte	0
 2099 03ff 0F       		.uleb128 0xf
 2100 0400 150B0000 		.4byte	.LASF64
 2101 0404 05       		.byte	0x5
 2102 0405 5001     		.2byte	0x150
 2103 0407 41040000 		.4byte	0x441
 2104 040b 02       		.byte	0x2
 2105 040c 0F       		.uleb128 0xf
 2106 040d 5F090000 		.4byte	.LASF65
 2107 0411 05       		.byte	0x5
 2108 0412 5601     		.2byte	0x156
 2109 0414 C6020000 		.4byte	0x2c6
 2110 0418 04       		.byte	0x4
 2111 0419 0F       		.uleb128 0xf
 2112 041a A2070000 		.4byte	.LASF66
 2113 041e 05       		.byte	0x5
 2114 041f 5B01     		.2byte	0x15b
 2115 0421 E5000000 		.4byte	0xe5
 2116 0425 06       		.byte	0x6
 2117 0426 0F       		.uleb128 0xf
 2118 0427 970B0000 		.4byte	.LASF67
 2119 042b 05       		.byte	0x5
 2120 042c 6001     		.2byte	0x160
 2121 042e 51040000 		.4byte	0x451
 2122 0432 08       		.byte	0x8
 2123 0433 0F       		.uleb128 0xf
 2124 0434 D1040000 		.4byte	.LASF68
 2125 0438 05       		.byte	0x5
 2126 0439 6501     		.2byte	0x165
 2127 043b C6020000 		.4byte	0x2c6
 2128 043f 09       		.byte	0x9
 2129 0440 00       		.byte	0
 2130 0441 0D       		.uleb128 0xd
 2131 0442 77000000 		.4byte	0x77
 2132 0446 51040000 		.4byte	0x451
 2133 044a 0E       		.uleb128 0xe
 2134 044b D6020000 		.4byte	0x2d6
 2135 044f 00       		.byte	0
 2136 0450 00       		.byte	0
 2137 0451 0D       		.uleb128 0xd
 2138 0452 F1000000 		.4byte	0xf1
 2139 0456 61040000 		.4byte	0x461
 2140 045a 0E       		.uleb128 0xe
 2141 045b D6020000 		.4byte	0x2d6
 2142 045f 00       		.byte	0
 2143 0460 00       		.byte	0
 2144 0461 04       		.uleb128 0x4
 2145 0462 3A030000 		.4byte	.LASF69
 2146 0466 05       		.byte	0x5
 2147 0467 6601     		.2byte	0x166
 2148 0469 E9030000 		.4byte	0x3e9
 2149 046d 10       		.uleb128 0x10
 2150 046e 32       		.byte	0x32
 2151 046f 05       		.byte	0x5
 2152 0470 6C01     		.2byte	0x16c
 2153 0472 B7040000 		.4byte	0x4b7
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 91


 2154 0476 0F       		.uleb128 0xf
 2155 0477 03080000 		.4byte	.LASF59
 2156 047b 05       		.byte	0x5
 2157 047c 7101     		.2byte	0x171
 2158 047e B7040000 		.4byte	0x4b7
 2159 0482 00       		.byte	0
 2160 0483 0F       		.uleb128 0xf
 2161 0484 DA040000 		.4byte	.LASF60
 2162 0488 05       		.byte	0x5
 2163 0489 7601     		.2byte	0x176
 2164 048b B7040000 		.4byte	0x4b7
 2165 048f 0A       		.byte	0xa
 2166 0490 11       		.uleb128 0x11
 2167 0491 757000   		.ascii	"up\000"
 2168 0494 05       		.byte	0x5
 2169 0495 7B01     		.2byte	0x17b
 2170 0497 B7040000 		.4byte	0x4b7
 2171 049b 14       		.byte	0x14
 2172 049c 0F       		.uleb128 0xf
 2173 049d C7010000 		.4byte	.LASF61
 2174 04a1 05       		.byte	0x5
 2175 04a2 8001     		.2byte	0x180
 2176 04a4 B7040000 		.4byte	0x4b7
 2177 04a8 1E       		.byte	0x1e
 2178 04a9 0F       		.uleb128 0xf
 2179 04aa 2E040000 		.4byte	.LASF62
 2180 04ae 05       		.byte	0x5
 2181 04af 8501     		.2byte	0x185
 2182 04b1 B7040000 		.4byte	0x4b7
 2183 04b5 28       		.byte	0x28
 2184 04b6 00       		.byte	0
 2185 04b7 0D       		.uleb128 0xd
 2186 04b8 61040000 		.4byte	0x461
 2187 04bc C7040000 		.4byte	0x4c7
 2188 04c0 0E       		.uleb128 0xe
 2189 04c1 D6020000 		.4byte	0x2d6
 2190 04c5 00       		.byte	0
 2191 04c6 00       		.byte	0
 2192 04c7 04       		.uleb128 0x4
 2193 04c8 530C0000 		.4byte	.LASF70
 2194 04cc 05       		.byte	0x5
 2195 04cd 8601     		.2byte	0x186
 2196 04cf 6D040000 		.4byte	0x46d
 2197 04d3 10       		.uleb128 0x10
 2198 04d4 B4       		.byte	0xb4
 2199 04d5 05       		.byte	0x5
 2200 04d6 8C01     		.2byte	0x18c
 2201 04d8 BA050000 		.4byte	0x5ba
 2202 04dc 0F       		.uleb128 0xf
 2203 04dd B8060000 		.4byte	.LASF71
 2204 04e1 05       		.byte	0x5
 2205 04e2 9301     		.2byte	0x193
 2206 04e4 77000000 		.4byte	0x77
 2207 04e8 00       		.byte	0
 2208 04e9 0F       		.uleb128 0xf
 2209 04ea F20B0000 		.4byte	.LASF72
 2210 04ee 05       		.byte	0x5
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 92


 2211 04ef 9801     		.2byte	0x198
 2212 04f1 77000000 		.4byte	0x77
 2213 04f5 02       		.byte	0x2
 2214 04f6 0F       		.uleb128 0xf
 2215 04f7 C8000000 		.4byte	.LASF73
 2216 04fb 05       		.byte	0x5
 2217 04fc 9D01     		.2byte	0x19d
 2218 04fe 77000000 		.4byte	0x77
 2219 0502 04       		.byte	0x4
 2220 0503 0F       		.uleb128 0xf
 2221 0504 A7070000 		.4byte	.LASF74
 2222 0508 05       		.byte	0x5
 2223 0509 A301     		.2byte	0x1a3
 2224 050b 77000000 		.4byte	0x77
 2225 050f 06       		.byte	0x6
 2226 0510 0F       		.uleb128 0xf
 2227 0511 BC000000 		.4byte	.LASF75
 2228 0515 05       		.byte	0x5
 2229 0516 A801     		.2byte	0x1a8
 2230 0518 77000000 		.4byte	0x77
 2231 051c 08       		.byte	0x8
 2232 051d 0F       		.uleb128 0xf
 2233 051e 5D040000 		.4byte	.LASF76
 2234 0522 05       		.byte	0x5
 2235 0523 AD01     		.2byte	0x1ad
 2236 0525 CD000000 		.4byte	0xcd
 2237 0529 0C       		.byte	0xc
 2238 052a 0F       		.uleb128 0xf
 2239 052b 97070000 		.4byte	.LASF77
 2240 052f 05       		.byte	0x5
 2241 0530 B301     		.2byte	0x1b3
 2242 0532 BA050000 		.4byte	0x5ba
 2243 0536 10       		.byte	0x10
 2244 0537 0F       		.uleb128 0xf
 2245 0538 3F080000 		.4byte	.LASF78
 2246 053c 05       		.byte	0x5
 2247 053d BA01     		.2byte	0x1ba
 2248 053f BA050000 		.4byte	0x5ba
 2249 0543 14       		.byte	0x14
 2250 0544 0F       		.uleb128 0xf
 2251 0545 FA060000 		.4byte	.LASF79
 2252 0549 05       		.byte	0x5
 2253 054a CA01     		.2byte	0x1ca
 2254 054c CA050000 		.4byte	0x5ca
 2255 0550 18       		.byte	0x18
 2256 0551 0F       		.uleb128 0xf
 2257 0552 BE050000 		.4byte	.LASF80
 2258 0556 05       		.byte	0x5
 2259 0557 D001     		.2byte	0x1d0
 2260 0559 77000000 		.4byte	0x77
 2261 055d 1E       		.byte	0x1e
 2262 055e 0F       		.uleb128 0xf
 2263 055f 30030000 		.4byte	.LASF81
 2264 0563 05       		.byte	0x5
 2265 0564 D501     		.2byte	0x1d5
 2266 0566 6B000000 		.4byte	0x6b
 2267 056a 20       		.byte	0x20
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 93


 2268 056b 0F       		.uleb128 0xf
 2269 056c 38050000 		.4byte	.LASF82
 2270 0570 05       		.byte	0x5
 2271 0571 DA01     		.2byte	0x1da
 2272 0573 DD030000 		.4byte	0x3dd
 2273 0577 22       		.byte	0x22
 2274 0578 0F       		.uleb128 0xf
 2275 0579 15020000 		.4byte	.LASF83
 2276 057d 05       		.byte	0x5
 2277 057e DF01     		.2byte	0x1df
 2278 0580 C7040000 		.4byte	0x4c7
 2279 0584 7C       		.byte	0x7c
 2280 0585 0F       		.uleb128 0xf
 2281 0586 8A000000 		.4byte	.LASF84
 2282 058a 05       		.byte	0x5
 2283 058b E401     		.2byte	0x1e4
 2284 058d 6B000000 		.4byte	0x6b
 2285 0591 AE       		.byte	0xae
 2286 0592 0F       		.uleb128 0xf
 2287 0593 62020000 		.4byte	.LASF85
 2288 0597 05       		.byte	0x5
 2289 0598 E901     		.2byte	0x1e9
 2290 059a 6B000000 		.4byte	0x6b
 2291 059e AF       		.byte	0xaf
 2292 059f 0F       		.uleb128 0xf
 2293 05a0 A5060000 		.4byte	.LASF86
 2294 05a4 05       		.byte	0x5
 2295 05a5 EE01     		.2byte	0x1ee
 2296 05a7 77000000 		.4byte	0x77
 2297 05ab B0       		.byte	0xb0
 2298 05ac 0F       		.uleb128 0xf
 2299 05ad 91050000 		.4byte	.LASF87
 2300 05b1 05       		.byte	0x5
 2301 05b2 F301     		.2byte	0x1f3
 2302 05b4 41040000 		.4byte	0x441
 2303 05b8 B2       		.byte	0xb2
 2304 05b9 00       		.byte	0
 2305 05ba 0D       		.uleb128 0xd
 2306 05bb 83000000 		.4byte	0x83
 2307 05bf CA050000 		.4byte	0x5ca
 2308 05c3 0E       		.uleb128 0xe
 2309 05c4 D6020000 		.4byte	0x2d6
 2310 05c8 00       		.byte	0
 2311 05c9 00       		.byte	0
 2312 05ca 0D       		.uleb128 0xd
 2313 05cb 6B000000 		.4byte	0x6b
 2314 05cf DA050000 		.4byte	0x5da
 2315 05d3 0E       		.uleb128 0xe
 2316 05d4 D6020000 		.4byte	0x2d6
 2317 05d8 04       		.byte	0x4
 2318 05d9 00       		.byte	0
 2319 05da 04       		.uleb128 0x4
 2320 05db 60070000 		.4byte	.LASF88
 2321 05df 05       		.byte	0x5
 2322 05e0 F401     		.2byte	0x1f4
 2323 05e2 D3040000 		.4byte	0x4d3
 2324 05e6 10       		.uleb128 0x10
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 94


 2325 05e7 1C       		.byte	0x1c
 2326 05e8 05       		.byte	0x5
 2327 05e9 FA01     		.2byte	0x1fa
 2328 05eb 65060000 		.4byte	0x665
 2329 05ef 0F       		.uleb128 0xf
 2330 05f0 F2050000 		.4byte	.LASF89
 2331 05f4 05       		.byte	0x5
 2332 05f5 FF01     		.2byte	0x1ff
 2333 05f7 65060000 		.4byte	0x665
 2334 05fb 00       		.byte	0
 2335 05fc 0F       		.uleb128 0xf
 2336 05fd E0040000 		.4byte	.LASF90
 2337 0601 05       		.byte	0x5
 2338 0602 0402     		.2byte	0x204
 2339 0604 65060000 		.4byte	0x665
 2340 0608 04       		.byte	0x4
 2341 0609 0F       		.uleb128 0xf
 2342 060a 76030000 		.4byte	.LASF91
 2343 060e 05       		.byte	0x5
 2344 060f 0902     		.2byte	0x209
 2345 0611 65060000 		.4byte	0x665
 2346 0615 08       		.byte	0x8
 2347 0616 0F       		.uleb128 0xf
 2348 0617 CC070000 		.4byte	.LASF92
 2349 061b 05       		.byte	0x5
 2350 061c 0E02     		.2byte	0x20e
 2351 061e 65060000 		.4byte	0x665
 2352 0622 0C       		.byte	0xc
 2353 0623 0F       		.uleb128 0xf
 2354 0624 8B0A0000 		.4byte	.LASF93
 2355 0628 05       		.byte	0x5
 2356 0629 1302     		.2byte	0x213
 2357 062b 83000000 		.4byte	0x83
 2358 062f 10       		.byte	0x10
 2359 0630 0F       		.uleb128 0xf
 2360 0631 D0000000 		.4byte	.LASF94
 2361 0635 05       		.byte	0x5
 2362 0636 1802     		.2byte	0x218
 2363 0638 83000000 		.4byte	0x83
 2364 063c 14       		.byte	0x14
 2365 063d 0F       		.uleb128 0xf
 2366 063e 1C040000 		.4byte	.LASF95
 2367 0642 05       		.byte	0x5
 2368 0643 1D02     		.2byte	0x21d
 2369 0645 6B000000 		.4byte	0x6b
 2370 0649 18       		.byte	0x18
 2371 064a 0F       		.uleb128 0xf
 2372 064b EE080000 		.4byte	.LASF96
 2373 064f 05       		.byte	0x5
 2374 0650 2202     		.2byte	0x222
 2375 0652 6B000000 		.4byte	0x6b
 2376 0656 19       		.byte	0x19
 2377 0657 0F       		.uleb128 0xf
 2378 0658 DC010000 		.4byte	.LASF97
 2379 065c 05       		.byte	0x5
 2380 065d 2702     		.2byte	0x227
 2381 065f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 95


 2382 0663 1A       		.byte	0x1a
 2383 0664 00       		.byte	0
 2384 0665 06       		.uleb128 0x6
 2385 0666 04       		.byte	0x4
 2386 0667 C1000000 		.4byte	0xc1
 2387 066b 04       		.uleb128 0x4
 2388 066c 49020000 		.4byte	.LASF98
 2389 0670 05       		.byte	0x5
 2390 0671 2802     		.2byte	0x228
 2391 0673 E6050000 		.4byte	0x5e6
 2392 0677 10       		.uleb128 0x10
 2393 0678 20       		.byte	0x20
 2394 0679 05       		.byte	0x5
 2395 067a 5B02     		.2byte	0x25b
 2396 067c 03070000 		.4byte	0x703
 2397 0680 0F       		.uleb128 0xf
 2398 0681 710B0000 		.4byte	.LASF99
 2399 0685 05       		.byte	0x5
 2400 0686 6402     		.2byte	0x264
 2401 0688 03070000 		.4byte	0x703
 2402 068c 00       		.byte	0
 2403 068d 0F       		.uleb128 0xf
 2404 068e D8090000 		.4byte	.LASF100
 2405 0692 05       		.byte	0x5
 2406 0693 6B02     		.2byte	0x26b
 2407 0695 0A070000 		.4byte	0x70a
 2408 0699 04       		.byte	0x4
 2409 069a 0F       		.uleb128 0xf
 2410 069b C1060000 		.4byte	.LASF101
 2411 069f 05       		.byte	0x5
 2412 06a0 7102     		.2byte	0x271
 2413 06a2 0C070000 		.4byte	0x70c
 2414 06a6 08       		.byte	0x8
 2415 06a7 0F       		.uleb128 0xf
 2416 06a8 02060000 		.4byte	.LASF102
 2417 06ac 05       		.byte	0x5
 2418 06ad 7702     		.2byte	0x277
 2419 06af 0A070000 		.4byte	0x70a
 2420 06b3 0C       		.byte	0xc
 2421 06b4 0F       		.uleb128 0xf
 2422 06b5 31090000 		.4byte	.LASF103
 2423 06b9 05       		.byte	0x5
 2424 06ba 7E02     		.2byte	0x27e
 2425 06bc 12070000 		.4byte	0x712
 2426 06c0 10       		.byte	0x10
 2427 06c1 0F       		.uleb128 0xf
 2428 06c2 BB090000 		.4byte	.LASF104
 2429 06c6 05       		.byte	0x5
 2430 06c7 8302     		.2byte	0x283
 2431 06c9 83000000 		.4byte	0x83
 2432 06cd 14       		.byte	0x14
 2433 06ce 0F       		.uleb128 0xf
 2434 06cf B9030000 		.4byte	.LASF105
 2435 06d3 05       		.byte	0x5
 2436 06d4 8A02     		.2byte	0x28a
 2437 06d6 77000000 		.4byte	0x77
 2438 06da 18       		.byte	0x18
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 96


 2439 06db 0F       		.uleb128 0xf
 2440 06dc 81020000 		.4byte	.LASF106
 2441 06e0 05       		.byte	0x5
 2442 06e1 9102     		.2byte	0x291
 2443 06e3 6B000000 		.4byte	0x6b
 2444 06e7 1A       		.byte	0x1a
 2445 06e8 0F       		.uleb128 0xf
 2446 06e9 F4040000 		.4byte	.LASF107
 2447 06ed 05       		.byte	0x5
 2448 06ee 9B02     		.2byte	0x29b
 2449 06f0 6B000000 		.4byte	0x6b
 2450 06f4 1B       		.byte	0x1b
 2451 06f5 0F       		.uleb128 0xf
 2452 06f6 72020000 		.4byte	.LASF108
 2453 06fa 05       		.byte	0x5
 2454 06fb A302     		.2byte	0x2a3
 2455 06fd 18070000 		.4byte	0x718
 2456 0701 1C       		.byte	0x1c
 2457 0702 00       		.byte	0
 2458 0703 06       		.uleb128 0x6
 2459 0704 04       		.byte	0x4
 2460 0705 09070000 		.4byte	0x709
 2461 0709 12       		.uleb128 0x12
 2462 070a 13       		.uleb128 0x13
 2463 070b 04       		.byte	0x4
 2464 070c 06       		.uleb128 0x6
 2465 070d 04       		.byte	0x4
 2466 070e 61040000 		.4byte	0x461
 2467 0712 06       		.uleb128 0x6
 2468 0713 04       		.byte	0x4
 2469 0714 6B000000 		.4byte	0x6b
 2470 0718 06       		.uleb128 0x6
 2471 0719 04       		.byte	0x4
 2472 071a EC010000 		.4byte	0x1ec
 2473 071e 04       		.uleb128 0x4
 2474 071f 95030000 		.4byte	.LASF109
 2475 0723 05       		.byte	0x5
 2476 0724 A402     		.2byte	0x2a4
 2477 0726 77060000 		.4byte	0x677
 2478 072a 10       		.uleb128 0x10
 2479 072b A0       		.byte	0xa0
 2480 072c 05       		.byte	0x5
 2481 072d AA02     		.2byte	0x2aa
 2482 072f 41070000 		.4byte	0x741
 2483 0733 0F       		.uleb128 0xf
 2484 0734 700C0000 		.4byte	.LASF110
 2485 0738 05       		.byte	0x5
 2486 0739 AF02     		.2byte	0x2af
 2487 073b 41070000 		.4byte	0x741
 2488 073f 00       		.byte	0
 2489 0740 00       		.byte	0
 2490 0741 0D       		.uleb128 0xd
 2491 0742 1E070000 		.4byte	0x71e
 2492 0746 51070000 		.4byte	0x751
 2493 074a 0E       		.uleb128 0xe
 2494 074b D6020000 		.4byte	0x2d6
 2495 074f 04       		.byte	0x4
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 97


 2496 0750 00       		.byte	0
 2497 0751 04       		.uleb128 0x4
 2498 0752 5E050000 		.4byte	.LASF111
 2499 0756 05       		.byte	0x5
 2500 0757 B002     		.2byte	0x2b0
 2501 0759 2A070000 		.4byte	0x72a
 2502 075d 02       		.uleb128 0x2
 2503 075e 08       		.byte	0x8
 2504 075f 04       		.byte	0x4
 2505 0760 83060000 		.4byte	.LASF112
 2506 0764 14       		.uleb128 0x14
 2507 0765 35040000 		.4byte	.LASF113
 2508 0769 01       		.byte	0x1
 2509 076a 7107     		.2byte	0x771
 2510 076c 00000000 		.4byte	.LFB18
 2511 0770 2C000000 		.4byte	.LFE18-.LFB18
 2512 0774 01       		.uleb128 0x1
 2513 0775 9C       		.byte	0x9c
 2514 0776 8B070000 		.4byte	0x78b
 2515 077a 15       		.uleb128 0x15
 2516 077b 9C090000 		.4byte	.LASF116
 2517 077f 01       		.byte	0x1
 2518 0780 7307     		.2byte	0x773
 2519 0782 83000000 		.4byte	0x83
 2520 0786 00000000 		.4byte	.LLST0
 2521 078a 00       		.byte	0
 2522 078b 14       		.uleb128 0x14
 2523 078c 41090000 		.4byte	.LASF114
 2524 0790 01       		.byte	0x1
 2525 0791 9707     		.2byte	0x797
 2526 0793 00000000 		.4byte	.LFB19
 2527 0797 08000000 		.4byte	.LFE19-.LFB19
 2528 079b 01       		.uleb128 0x1
 2529 079c 9C       		.byte	0x9c
 2530 079d AB070000 		.4byte	0x7ab
 2531 07a1 16       		.uleb128 0x16
 2532 07a2 06000000 		.4byte	.LVL4
 2533 07a6 64070000 		.4byte	0x764
 2534 07aa 00       		.byte	0
 2535 07ab 14       		.uleb128 0x14
 2536 07ac 3B000000 		.4byte	.LASF115
 2537 07b0 01       		.byte	0x1
 2538 07b1 0003     		.2byte	0x300
 2539 07b3 00000000 		.4byte	.LFB7
 2540 07b7 1C000000 		.4byte	.LFE7-.LFB7
 2541 07bb 01       		.uleb128 0x1
 2542 07bc 9C       		.byte	0x9c
 2543 07bd DB070000 		.4byte	0x7db
 2544 07c1 15       		.uleb128 0x15
 2545 07c2 7E0B0000 		.4byte	.LASF117
 2546 07c6 01       		.byte	0x1
 2547 07c7 0203     		.2byte	0x302
 2548 07c9 83000000 		.4byte	0x83
 2549 07cd 1E000000 		.4byte	.LLST1
 2550 07d1 16       		.uleb128 0x16
 2551 07d2 10000000 		.4byte	.LVL7
 2552 07d6 D60F0000 		.4byte	0xfd6
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 98


 2553 07da 00       		.byte	0
 2554 07db 17       		.uleb128 0x17
 2555 07dc 41010000 		.4byte	.LASF195
 2556 07e0 01       		.byte	0x1
 2557 07e1 E9       		.byte	0xe9
 2558 07e2 83000000 		.4byte	0x83
 2559 07e6 00000000 		.4byte	.LFB1
 2560 07ea 10000000 		.4byte	.LFE1-.LFB1
 2561 07ee 01       		.uleb128 0x1
 2562 07ef 9C       		.byte	0x9c
 2563 07f0 18       		.uleb128 0x18
 2564 07f1 D2070000 		.4byte	.LASF119
 2565 07f5 01       		.byte	0x1
 2566 07f6 1D01     		.2byte	0x11d
 2567 07f8 A4000000 		.4byte	0xa4
 2568 07fc 00000000 		.4byte	.LFB2
 2569 0800 40000000 		.4byte	.LFE2-.LFB2
 2570 0804 01       		.uleb128 0x1
 2571 0805 9C       		.byte	0x9c
 2572 0806 34080000 		.4byte	0x834
 2573 080a 19       		.uleb128 0x19
 2574 080b 080C0000 		.4byte	.LASF124
 2575 080f 01       		.byte	0x1
 2576 0810 1D01     		.2byte	0x11d
 2577 0812 83000000 		.4byte	0x83
 2578 0816 3C000000 		.4byte	.LLST2
 2579 081a 15       		.uleb128 0x15
 2580 081b FB0B0000 		.4byte	.LASF118
 2581 081f 01       		.byte	0x1
 2582 0820 1F01     		.2byte	0x11f
 2583 0822 A4000000 		.4byte	0xa4
 2584 0826 5D000000 		.4byte	.LLST3
 2585 082a 16       		.uleb128 0x16
 2586 082b 38000000 		.4byte	.LVL10
 2587 082f E20F0000 		.4byte	0xfe2
 2588 0833 00       		.byte	0
 2589 0834 18       		.uleb128 0x18
 2590 0835 74050000 		.4byte	.LASF120
 2591 0839 01       		.byte	0x1
 2592 083a 7001     		.2byte	0x170
 2593 083c A4000000 		.4byte	0xa4
 2594 0840 00000000 		.4byte	.LFB3
 2595 0844 2C000000 		.4byte	.LFE3-.LFB3
 2596 0848 01       		.uleb128 0x1
 2597 0849 9C       		.byte	0x9c
 2598 084a 68080000 		.4byte	0x868
 2599 084e 15       		.uleb128 0x15
 2600 084f 30000000 		.4byte	.LASF121
 2601 0853 01       		.byte	0x1
 2602 0854 7201     		.2byte	0x172
 2603 0856 A4000000 		.4byte	0xa4
 2604 085a 7B000000 		.4byte	.LLST4
 2605 085e 16       		.uleb128 0x16
 2606 085f 16000000 		.4byte	.LVL13
 2607 0863 EE0F0000 		.4byte	0xfee
 2608 0867 00       		.byte	0
 2609 0868 18       		.uleb128 0x18
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 99


 2610 0869 730A0000 		.4byte	.LASF122
 2611 086d 01       		.byte	0x1
 2612 086e AE01     		.2byte	0x1ae
 2613 0870 A4000000 		.4byte	0xa4
 2614 0874 00000000 		.4byte	.LFB4
 2615 0878 48000000 		.4byte	.LFE4-.LFB4
 2616 087c 01       		.uleb128 0x1
 2617 087d 9C       		.byte	0x9c
 2618 087e C0080000 		.4byte	0x8c0
 2619 0882 15       		.uleb128 0x15
 2620 0883 30000000 		.4byte	.LASF121
 2621 0887 01       		.byte	0x1
 2622 0888 B001     		.2byte	0x1b0
 2623 088a A4000000 		.4byte	0xa4
 2624 088e 9A000000 		.4byte	.LLST5
 2625 0892 15       		.uleb128 0x15
 2626 0893 54060000 		.4byte	.LASF123
 2627 0897 01       		.byte	0x1
 2628 0898 B201     		.2byte	0x1b2
 2629 089a 83000000 		.4byte	0x83
 2630 089e E8000000 		.4byte	.LLST6
 2631 08a2 1A       		.uleb128 0x1a
 2632 08a3 18000000 		.4byte	.LVL18
 2633 08a7 F0070000 		.4byte	0x7f0
 2634 08ab B6080000 		.4byte	0x8b6
 2635 08af 1B       		.uleb128 0x1b
 2636 08b0 01       		.uleb128 0x1
 2637 08b1 50       		.byte	0x50
 2638 08b2 02       		.uleb128 0x2
 2639 08b3 74       		.byte	0x74
 2640 08b4 00       		.sleb128 0
 2641 08b5 00       		.byte	0
 2642 08b6 16       		.uleb128 0x16
 2643 08b7 32000000 		.4byte	.LVL19
 2644 08bb 34080000 		.4byte	0x834
 2645 08bf 00       		.byte	0
 2646 08c0 1C       		.uleb128 0x1c
 2647 08c1 A6090000 		.4byte	.LASF131
 2648 08c5 01       		.byte	0x1
 2649 08c6 8F02     		.2byte	0x28f
 2650 08c8 00000000 		.4byte	.LFB6
 2651 08cc 9C000000 		.4byte	.LFE6-.LFB6
 2652 08d0 01       		.uleb128 0x1
 2653 08d1 9C       		.byte	0x9c
 2654 08d2 8A090000 		.4byte	0x98a
 2655 08d6 19       		.uleb128 0x19
 2656 08d7 080C0000 		.4byte	.LASF124
 2657 08db 01       		.byte	0x1
 2658 08dc 8F02     		.2byte	0x28f
 2659 08de 83000000 		.4byte	0x83
 2660 08e2 FB000000 		.4byte	.LLST7
 2661 08e6 19       		.uleb128 0x19
 2662 08e7 22000000 		.4byte	.LASF125
 2663 08eb 01       		.byte	0x1
 2664 08ec 8F02     		.2byte	0x28f
 2665 08ee 83000000 		.4byte	0x83
 2666 08f2 1C010000 		.4byte	.LLST8
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 100


 2667 08f6 19       		.uleb128 0x19
 2668 08f7 2A0A0000 		.4byte	.LASF126
 2669 08fb 01       		.byte	0x1
 2670 08fc 8F02     		.2byte	0x28f
 2671 08fe 83000000 		.4byte	0x83
 2672 0902 3D010000 		.4byte	.LLST9
 2673 0906 1D       		.uleb128 0x1d
 2674 0907 97010000 		.4byte	.LASF127
 2675 090b 01       		.byte	0x1
 2676 090c 9102     		.2byte	0x291
 2677 090e 83000000 		.4byte	0x83
 2678 0912 01       		.byte	0x1
 2679 0913 15       		.uleb128 0x15
 2680 0914 690A0000 		.4byte	.LASF128
 2681 0918 01       		.byte	0x1
 2682 0919 9202     		.2byte	0x292
 2683 091b 83000000 		.4byte	0x83
 2684 091f 69010000 		.4byte	.LLST10
 2685 0923 15       		.uleb128 0x15
 2686 0924 E9000000 		.4byte	.LASF129
 2687 0928 01       		.byte	0x1
 2688 0929 9302     		.2byte	0x293
 2689 092b 6B000000 		.4byte	0x6b
 2690 092f 88010000 		.4byte	.LLST11
 2691 0933 15       		.uleb128 0x15
 2692 0934 D2090000 		.4byte	.LASF130
 2693 0938 01       		.byte	0x1
 2694 0939 9402     		.2byte	0x294
 2695 093b 8A090000 		.4byte	0x98a
 2696 093f B1010000 		.4byte	.LLST12
 2697 0943 16       		.uleb128 0x16
 2698 0944 1A000000 		.4byte	.LVL28
 2699 0948 FA0F0000 		.4byte	0xffa
 2700 094c 16       		.uleb128 0x16
 2701 094d 3A000000 		.4byte	.LVL29
 2702 0951 05100000 		.4byte	0x1005
 2703 0955 16       		.uleb128 0x16
 2704 0956 4C000000 		.4byte	.LVL30
 2705 095a FA0F0000 		.4byte	0xffa
 2706 095e 16       		.uleb128 0x16
 2707 095f 6C000000 		.4byte	.LVL31
 2708 0963 05100000 		.4byte	0x1005
 2709 0967 16       		.uleb128 0x16
 2710 0968 72000000 		.4byte	.LVL32
 2711 096c FA0F0000 		.4byte	0xffa
 2712 0970 16       		.uleb128 0x16
 2713 0971 84000000 		.4byte	.LVL33
 2714 0975 05100000 		.4byte	0x1005
 2715 0979 1E       		.uleb128 0x1e
 2716 097a 8C000000 		.4byte	.LVL34
 2717 097e 10100000 		.4byte	0x1010
 2718 0982 1B       		.uleb128 0x1b
 2719 0983 01       		.uleb128 0x1
 2720 0984 50       		.byte	0x50
 2721 0985 02       		.uleb128 0x2
 2722 0986 74       		.byte	0x74
 2723 0987 00       		.sleb128 0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 101


 2724 0988 00       		.byte	0
 2725 0989 00       		.byte	0
 2726 098a 06       		.uleb128 0x6
 2727 098b 04       		.byte	0x4
 2728 098c 90090000 		.4byte	0x990
 2729 0990 1F       		.uleb128 0x1f
 2730 0991 6B060000 		.4byte	0x66b
 2731 0995 1C       		.uleb128 0x1c
 2732 0996 A80A0000 		.4byte	.LASF132
 2733 099a 01       		.byte	0x1
 2734 099b 8B03     		.2byte	0x38b
 2735 099d 00000000 		.4byte	.LFB8
 2736 09a1 3C000000 		.4byte	.LFE8-.LFB8
 2737 09a5 01       		.uleb128 0x1
 2738 09a6 9C       		.byte	0x9c
 2739 09a7 CE090000 		.4byte	0x9ce
 2740 09ab 19       		.uleb128 0x19
 2741 09ac 3C010000 		.4byte	.LASF133
 2742 09b0 01       		.byte	0x1
 2743 09b1 8B03     		.2byte	0x38b
 2744 09b3 22020000 		.4byte	0x222
 2745 09b7 C4010000 		.4byte	.LLST13
 2746 09bb 16       		.uleb128 0x16
 2747 09bc 14000000 		.4byte	.LVL41
 2748 09c0 AB070000 		.4byte	0x7ab
 2749 09c4 16       		.uleb128 0x16
 2750 09c5 1C000000 		.4byte	.LVL42
 2751 09c9 1C100000 		.4byte	0x101c
 2752 09cd 00       		.byte	0
 2753 09ce 1C       		.uleb128 0x1c
 2754 09cf 55000000 		.4byte	.LASF134
 2755 09d3 01       		.byte	0x1
 2756 09d4 EE03     		.2byte	0x3ee
 2757 09d6 00000000 		.4byte	.LFB9
 2758 09da 40000000 		.4byte	.LFE9-.LFB9
 2759 09de 01       		.uleb128 0x1
 2760 09df 9C       		.byte	0x9c
 2761 09e0 150A0000 		.4byte	0xa15
 2762 09e4 15       		.uleb128 0x15
 2763 09e5 D2090000 		.4byte	.LASF130
 2764 09e9 01       		.byte	0x1
 2765 09ea F003     		.2byte	0x3f0
 2766 09ec 8A090000 		.4byte	0x98a
 2767 09f0 E5010000 		.4byte	.LLST14
 2768 09f4 15       		.uleb128 0x15
 2769 09f5 CC010000 		.4byte	.LASF135
 2770 09f9 01       		.byte	0x1
 2771 09fa F103     		.2byte	0x3f1
 2772 09fc 83000000 		.4byte	0x83
 2773 0a00 F8010000 		.4byte	.LLST15
 2774 0a04 15       		.uleb128 0x15
 2775 0a05 E0000000 		.4byte	.LASF136
 2776 0a09 01       		.byte	0x1
 2777 0a0a F203     		.2byte	0x3f2
 2778 0a0c 83000000 		.4byte	0x83
 2779 0a10 17020000 		.4byte	.LLST16
 2780 0a14 00       		.byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 102


 2781 0a15 1C       		.uleb128 0x1c
 2782 0a16 530B0000 		.4byte	.LASF137
 2783 0a1a 01       		.byte	0x1
 2784 0a1b 6404     		.2byte	0x464
 2785 0a1d 00000000 		.4byte	.LFB10
 2786 0a21 78000000 		.4byte	.LFE10-.LFB10
 2787 0a25 01       		.uleb128 0x1
 2788 0a26 9C       		.byte	0x9c
 2789 0a27 4E0A0000 		.4byte	0xa4e
 2790 0a2b 15       		.uleb128 0x15
 2791 0a2c 04070000 		.4byte	.LASF138
 2792 0a30 01       		.byte	0x1
 2793 0a31 6C04     		.2byte	0x46c
 2794 0a33 A4000000 		.4byte	0xa4
 2795 0a37 40020000 		.4byte	.LLST17
 2796 0a3b 16       		.uleb128 0x16
 2797 0a3c 14000000 		.4byte	.LVL55
 2798 0a40 F0070000 		.4byte	0x7f0
 2799 0a44 16       		.uleb128 0x16
 2800 0a45 2A000000 		.4byte	.LVL57
 2801 0a49 34080000 		.4byte	0x834
 2802 0a4d 00       		.byte	0
 2803 0a4e 1C       		.uleb128 0x1c
 2804 0a4f 3D070000 		.4byte	.LASF139
 2805 0a53 01       		.byte	0x1
 2806 0a54 B104     		.2byte	0x4b1
 2807 0a56 00000000 		.4byte	.LFB11
 2808 0a5a 08000000 		.4byte	.LFE11-.LFB11
 2809 0a5e 01       		.uleb128 0x1
 2810 0a5f 9C       		.byte	0x9c
 2811 0a60 860A0000 		.4byte	0xa86
 2812 0a64 19       		.uleb128 0x19
 2813 0a65 20050000 		.4byte	.LASF140
 2814 0a69 01       		.byte	0x1
 2815 0a6a B104     		.2byte	0x4b1
 2816 0a6c D2000000 		.4byte	0xd2
 2817 0a70 8B020000 		.4byte	.LLST18
 2818 0a74 1E       		.uleb128 0x1e
 2819 0a75 06000000 		.4byte	.LVL64
 2820 0a79 28100000 		.4byte	0x1028
 2821 0a7d 1B       		.uleb128 0x1b
 2822 0a7e 01       		.uleb128 0x1
 2823 0a7f 50       		.byte	0x50
 2824 0a80 03       		.uleb128 0x3
 2825 0a81 F3       		.byte	0xf3
 2826 0a82 01       		.uleb128 0x1
 2827 0a83 50       		.byte	0x50
 2828 0a84 00       		.byte	0
 2829 0a85 00       		.byte	0
 2830 0a86 1C       		.uleb128 0x1c
 2831 0a87 51010000 		.4byte	.LASF141
 2832 0a8b 01       		.byte	0x1
 2833 0a8c C804     		.2byte	0x4c8
 2834 0a8e 00000000 		.4byte	.LFB12
 2835 0a92 30000000 		.4byte	.LFE12-.LFB12
 2836 0a96 01       		.uleb128 0x1
 2837 0a97 9C       		.byte	0x9c
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 103


 2838 0a98 AD0A0000 		.4byte	0xaad
 2839 0a9c 19       		.uleb128 0x19
 2840 0a9d 7C030000 		.4byte	.LASF142
 2841 0aa1 01       		.byte	0x1
 2842 0aa2 C804     		.2byte	0x4c8
 2843 0aa4 83000000 		.4byte	0x83
 2844 0aa8 AC020000 		.4byte	.LLST19
 2845 0aac 00       		.byte	0
 2846 0aad 1C       		.uleb128 0x1c
 2847 0aae 98040000 		.4byte	.LASF143
 2848 0ab2 01       		.byte	0x1
 2849 0ab3 0C05     		.2byte	0x50c
 2850 0ab5 00000000 		.4byte	.LFB13
 2851 0ab9 30000000 		.4byte	.LFE13-.LFB13
 2852 0abd 01       		.uleb128 0x1
 2853 0abe 9C       		.byte	0x9c
 2854 0abf D40A0000 		.4byte	0xad4
 2855 0ac3 19       		.uleb128 0x19
 2856 0ac4 A10A0000 		.4byte	.LASF54
 2857 0ac8 01       		.byte	0x1
 2858 0ac9 0C05     		.2byte	0x50c
 2859 0acb 83000000 		.4byte	0x83
 2860 0acf DA020000 		.4byte	.LLST20
 2861 0ad3 00       		.byte	0
 2862 0ad4 1C       		.uleb128 0x1c
 2863 0ad5 2C060000 		.4byte	.LASF144
 2864 0ad9 01       		.byte	0x1
 2865 0ada 6005     		.2byte	0x560
 2866 0adc 00000000 		.4byte	.LFB14
 2867 0ae0 12000000 		.4byte	.LFE14-.LFB14
 2868 0ae4 01       		.uleb128 0x1
 2869 0ae5 9C       		.byte	0x9c
 2870 0ae6 300B0000 		.4byte	0xb30
 2871 0aea 19       		.uleb128 0x19
 2872 0aeb A10A0000 		.4byte	.LASF54
 2873 0aef 01       		.byte	0x1
 2874 0af0 6005     		.2byte	0x560
 2875 0af2 83000000 		.4byte	0x83
 2876 0af6 08030000 		.4byte	.LLST21
 2877 0afa 19       		.uleb128 0x19
 2878 0afb 7C030000 		.4byte	.LASF142
 2879 0aff 01       		.byte	0x1
 2880 0b00 6005     		.2byte	0x560
 2881 0b02 83000000 		.4byte	0x83
 2882 0b06 34030000 		.4byte	.LLST22
 2883 0b0a 1A       		.uleb128 0x1a
 2884 0b0b 0A000000 		.4byte	.LVL73
 2885 0b0f 860A0000 		.4byte	0xa86
 2886 0b13 1F0B0000 		.4byte	0xb1f
 2887 0b17 1B       		.uleb128 0x1b
 2888 0b18 01       		.uleb128 0x1
 2889 0b19 50       		.byte	0x50
 2890 0b1a 03       		.uleb128 0x3
 2891 0b1b F3       		.byte	0xf3
 2892 0b1c 01       		.uleb128 0x1
 2893 0b1d 51       		.byte	0x51
 2894 0b1e 00       		.byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 104


 2895 0b1f 1E       		.uleb128 0x1e
 2896 0b20 10000000 		.4byte	.LVL74
 2897 0b24 AD0A0000 		.4byte	0xaad
 2898 0b28 1B       		.uleb128 0x1b
 2899 0b29 01       		.uleb128 0x1
 2900 0b2a 50       		.byte	0x50
 2901 0b2b 02       		.uleb128 0x2
 2902 0b2c 74       		.byte	0x74
 2903 0b2d 00       		.sleb128 0
 2904 0b2e 00       		.byte	0
 2905 0b2f 00       		.byte	0
 2906 0b30 18       		.uleb128 0x18
 2907 0b31 64040000 		.4byte	.LASF145
 2908 0b35 01       		.byte	0x1
 2909 0b36 9405     		.2byte	0x594
 2910 0b38 A4000000 		.4byte	0xa4
 2911 0b3c 00000000 		.4byte	.LFB15
 2912 0b40 1C000000 		.4byte	.LFE15-.LFB15
 2913 0b44 01       		.uleb128 0x1
 2914 0b45 9C       		.byte	0x9c
 2915 0b46 820B0000 		.4byte	0xb82
 2916 0b4a 19       		.uleb128 0x19
 2917 0b4b 080C0000 		.4byte	.LASF124
 2918 0b4f 01       		.byte	0x1
 2919 0b50 9405     		.2byte	0x594
 2920 0b52 83000000 		.4byte	0x83
 2921 0b56 55030000 		.4byte	.LLST23
 2922 0b5a 15       		.uleb128 0x15
 2923 0b5b 28050000 		.4byte	.LASF146
 2924 0b5f 01       		.byte	0x1
 2925 0b60 9605     		.2byte	0x596
 2926 0b62 A4000000 		.4byte	0xa4
 2927 0b66 97030000 		.4byte	.LLST24
 2928 0b6a 1E       		.uleb128 0x1e
 2929 0b6b 1A000000 		.4byte	.LVL82
 2930 0b6f 33100000 		.4byte	0x1033
 2931 0b73 1B       		.uleb128 0x1b
 2932 0b74 01       		.uleb128 0x1
 2933 0b75 50       		.byte	0x50
 2934 0b76 03       		.uleb128 0x3
 2935 0b77 F3       		.byte	0xf3
 2936 0b78 01       		.uleb128 0x1
 2937 0b79 50       		.byte	0x50
 2938 0b7a 1B       		.uleb128 0x1b
 2939 0b7b 01       		.uleb128 0x1
 2940 0b7c 51       		.byte	0x51
 2941 0b7d 02       		.uleb128 0x2
 2942 0b7e 08       		.byte	0x8
 2943 0b7f 55       		.byte	0x55
 2944 0b80 00       		.byte	0
 2945 0b81 00       		.byte	0
 2946 0b82 18       		.uleb128 0x18
 2947 0b83 41050000 		.4byte	.LASF147
 2948 0b87 01       		.byte	0x1
 2949 0b88 0506     		.2byte	0x605
 2950 0b8a A4000000 		.4byte	0xa4
 2951 0b8e 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 105


 2952 0b92 1A000000 		.4byte	.LFE16-.LFB16
 2953 0b96 01       		.uleb128 0x1
 2954 0b97 9C       		.byte	0x9c
 2955 0b98 CD0B0000 		.4byte	0xbcd
 2956 0b9c 15       		.uleb128 0x15
 2957 0b9d 28050000 		.4byte	.LASF146
 2958 0ba1 01       		.byte	0x1
 2959 0ba2 0706     		.2byte	0x607
 2960 0ba4 A4000000 		.4byte	0xa4
 2961 0ba8 C1030000 		.4byte	.LLST25
 2962 0bac 15       		.uleb128 0x15
 2963 0bad 54060000 		.4byte	.LASF123
 2964 0bb1 01       		.byte	0x1
 2965 0bb2 0806     		.2byte	0x608
 2966 0bb4 83000000 		.4byte	0x83
 2967 0bb8 EB030000 		.4byte	.LLST26
 2968 0bbc 1E       		.uleb128 0x1e
 2969 0bbd 0E000000 		.4byte	.LVL85
 2970 0bc1 300B0000 		.4byte	0xb30
 2971 0bc5 1B       		.uleb128 0x1b
 2972 0bc6 01       		.uleb128 0x1
 2973 0bc7 50       		.byte	0x50
 2974 0bc8 02       		.uleb128 0x2
 2975 0bc9 74       		.byte	0x74
 2976 0bca 00       		.sleb128 0
 2977 0bcb 00       		.byte	0
 2978 0bcc 00       		.byte	0
 2979 0bcd 1C       		.uleb128 0x1c
 2980 0bce E2010000 		.4byte	.LASF148
 2981 0bd2 01       		.byte	0x1
 2982 0bd3 080A     		.2byte	0xa08
 2983 0bd5 00000000 		.4byte	.LFB22
 2984 0bd9 38000000 		.4byte	.LFE22-.LFB22
 2985 0bdd 01       		.uleb128 0x1
 2986 0bde 9C       		.byte	0x9c
 2987 0bdf 2E0C0000 		.4byte	0xc2e
 2988 0be3 15       		.uleb128 0x15
 2989 0be4 54060000 		.4byte	.LASF123
 2990 0be8 01       		.byte	0x1
 2991 0be9 0A0A     		.2byte	0xa0a
 2992 0beb 83000000 		.4byte	0x83
 2993 0bef 0A040000 		.4byte	.LLST27
 2994 0bf3 15       		.uleb128 0x15
 2995 0bf4 5E060000 		.4byte	.LASF149
 2996 0bf8 01       		.byte	0x1
 2997 0bf9 0B0A     		.2byte	0xa0b
 2998 0bfb 83000000 		.4byte	0x83
 2999 0bff 29040000 		.4byte	.LLST28
 3000 0c03 15       		.uleb128 0x15
 3001 0c04 950A0000 		.4byte	.LASF150
 3002 0c08 01       		.byte	0x1
 3003 0c09 170A     		.2byte	0xa17
 3004 0c0b 8A090000 		.4byte	0x98a
 3005 0c0f 48040000 		.4byte	.LLST29
 3006 0c13 1E       		.uleb128 0x1e
 3007 0c14 1C000000 		.4byte	.LVL94
 3008 0c18 3F100000 		.4byte	0x103f
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 106


 3009 0c1c 1B       		.uleb128 0x1b
 3010 0c1d 01       		.uleb128 0x1
 3011 0c1e 50       		.byte	0x50
 3012 0c1f 0C       		.uleb128 0xc
 3013 0c20 74       		.byte	0x74
 3014 0c21 00       		.sleb128 0
 3015 0c22 33       		.byte	0x33
 3016 0c23 24       		.byte	0x24
 3017 0c24 74       		.byte	0x74
 3018 0c25 00       		.sleb128 0
 3019 0c26 1C       		.byte	0x1c
 3020 0c27 32       		.byte	0x32
 3021 0c28 24       		.byte	0x24
 3022 0c29 76       		.byte	0x76
 3023 0c2a 00       		.sleb128 0
 3024 0c2b 22       		.byte	0x22
 3025 0c2c 00       		.byte	0
 3026 0c2d 00       		.byte	0
 3027 0c2e 18       		.uleb128 0x18
 3028 0c2f 00000000 		.4byte	.LASF151
 3029 0c33 01       		.byte	0x1
 3030 0c34 5A0A     		.2byte	0xa5a
 3031 0c36 83000000 		.4byte	0x83
 3032 0c3a 00000000 		.4byte	.LFB23
 3033 0c3e 10000000 		.4byte	.LFE23-.LFB23
 3034 0c42 01       		.uleb128 0x1
 3035 0c43 9C       		.byte	0x9c
 3036 0c44 750C0000 		.4byte	0xc75
 3037 0c48 19       		.uleb128 0x19
 3038 0c49 080C0000 		.4byte	.LASF124
 3039 0c4d 01       		.byte	0x1
 3040 0c4e 5A0A     		.2byte	0xa5a
 3041 0c50 83000000 		.4byte	0x83
 3042 0c54 5B040000 		.4byte	.LLST30
 3043 0c58 20       		.uleb128 0x20
 3044 0c59 08090000 		.4byte	.LASF152
 3045 0c5d 01       		.byte	0x1
 3046 0c5e 5C0A     		.2byte	0xa5c
 3047 0c60 83000000 		.4byte	0x83
 3048 0c64 01       		.uleb128 0x1
 3049 0c65 50       		.byte	0x50
 3050 0c66 20       		.uleb128 0x20
 3051 0c67 9F010000 		.4byte	.LASF153
 3052 0c6b 01       		.byte	0x1
 3053 0c6c 600A     		.2byte	0xa60
 3054 0c6e 750C0000 		.4byte	0xc75
 3055 0c72 01       		.uleb128 0x1
 3056 0c73 53       		.byte	0x53
 3057 0c74 00       		.byte	0
 3058 0c75 06       		.uleb128 0x6
 3059 0c76 04       		.byte	0x4
 3060 0c77 DD020000 		.4byte	0x2dd
 3061 0c7b 18       		.uleb128 0x18
 3062 0c7c 52030000 		.4byte	.LASF154
 3063 0c80 01       		.byte	0x1
 3064 0c81 B10A     		.2byte	0xab1
 3065 0c83 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 107


 3066 0c87 00000000 		.4byte	.LFB24
 3067 0c8b 34000000 		.4byte	.LFE24-.LFB24
 3068 0c8f 01       		.uleb128 0x1
 3069 0c90 9C       		.byte	0x9c
 3070 0c91 D40C0000 		.4byte	0xcd4
 3071 0c95 19       		.uleb128 0x19
 3072 0c96 D60B0000 		.4byte	.LASF155
 3073 0c9a 01       		.byte	0x1
 3074 0c9b B10A     		.2byte	0xab1
 3075 0c9d 83000000 		.4byte	0x83
 3076 0ca1 7C040000 		.4byte	.LLST31
 3077 0ca5 21       		.uleb128 0x21
 3078 0ca6 52040000 		.4byte	.LASF46
 3079 0caa 01       		.byte	0x1
 3080 0cab B10A     		.2byte	0xab1
 3081 0cad 83000000 		.4byte	0x83
 3082 0cb1 01       		.uleb128 0x1
 3083 0cb2 51       		.byte	0x51
 3084 0cb3 15       		.uleb128 0x15
 3085 0cb4 DD080000 		.4byte	.LASF156
 3086 0cb8 01       		.byte	0x1
 3087 0cb9 B30A     		.2byte	0xab3
 3088 0cbb 83000000 		.4byte	0x83
 3089 0cbf B6040000 		.4byte	.LLST32
 3090 0cc3 15       		.uleb128 0x15
 3091 0cc4 E40B0000 		.4byte	.LASF157
 3092 0cc8 01       		.byte	0x1
 3093 0cc9 B40A     		.2byte	0xab4
 3094 0ccb 83000000 		.4byte	0x83
 3095 0ccf C9040000 		.4byte	.LLST33
 3096 0cd3 00       		.byte	0
 3097 0cd4 14       		.uleb128 0x14
 3098 0cd5 A7010000 		.4byte	.LASF158
 3099 0cd9 01       		.byte	0x1
 3100 0cda C008     		.2byte	0x8c0
 3101 0cdc 00000000 		.4byte	.LFB21
 3102 0ce0 14000000 		.4byte	.LFE21-.LFB21
 3103 0ce4 01       		.uleb128 0x1
 3104 0ce5 9C       		.byte	0x9c
 3105 0ce6 540D0000 		.4byte	0xd54
 3106 0cea 19       		.uleb128 0x19
 3107 0ceb 54060000 		.4byte	.LASF123
 3108 0cef 01       		.byte	0x1
 3109 0cf0 C008     		.2byte	0x8c0
 3110 0cf2 83000000 		.4byte	0x83
 3111 0cf6 E8040000 		.4byte	.LLST34
 3112 0cfa 19       		.uleb128 0x19
 3113 0cfb 9F010000 		.4byte	.LASF153
 3114 0cff 01       		.byte	0x1
 3115 0d00 C008     		.2byte	0x8c0
 3116 0d02 750C0000 		.4byte	0xc75
 3117 0d06 09050000 		.4byte	.LLST35
 3118 0d0a 20       		.uleb128 0x20
 3119 0d0b 8A020000 		.4byte	.LASF159
 3120 0d0f 01       		.byte	0x1
 3121 0d10 C208     		.2byte	0x8c2
 3122 0d12 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 108


 3123 0d16 01       		.uleb128 0x1
 3124 0d17 50       		.byte	0x50
 3125 0d18 1D       		.uleb128 0x1d
 3126 0d19 FD000000 		.4byte	.LASF160
 3127 0d1d 01       		.byte	0x1
 3128 0d1e C308     		.2byte	0x8c3
 3129 0d20 6B000000 		.4byte	0x6b
 3130 0d24 00       		.byte	0
 3131 0d25 15       		.uleb128 0x15
 3132 0d26 D60B0000 		.4byte	.LASF155
 3133 0d2a 01       		.byte	0x1
 3134 0d2b C908     		.2byte	0x8c9
 3135 0d2d 83000000 		.4byte	0x83
 3136 0d31 35050000 		.4byte	.LLST36
 3137 0d35 1A       		.uleb128 0x1a
 3138 0d36 08000000 		.4byte	.LVL112
 3139 0d3a 2E0C0000 		.4byte	0xc2e
 3140 0d3e 4A0D0000 		.4byte	0xd4a
 3141 0d42 1B       		.uleb128 0x1b
 3142 0d43 01       		.uleb128 0x1
 3143 0d44 50       		.byte	0x50
 3144 0d45 03       		.uleb128 0x3
 3145 0d46 F3       		.byte	0xf3
 3146 0d47 01       		.uleb128 0x1
 3147 0d48 50       		.byte	0x50
 3148 0d49 00       		.byte	0
 3149 0d4a 16       		.uleb128 0x16
 3150 0d4b 10000000 		.4byte	.LVL114
 3151 0d4f 7B0C0000 		.4byte	0xc7b
 3152 0d53 00       		.byte	0
 3153 0d54 22       		.uleb128 0x22
 3154 0d55 A1050000 		.4byte	.LASF161
 3155 0d59 01       		.byte	0x1
 3156 0d5a 2906     		.2byte	0x629
 3157 0d5c A4000000 		.4byte	0xa4
 3158 0d60 00000000 		.4byte	.LFB17
 3159 0d64 38010000 		.4byte	.LFE17-.LFB17
 3160 0d68 01       		.uleb128 0x1
 3161 0d69 9C       		.byte	0x9c
 3162 0d6a 520E0000 		.4byte	0xe52
 3163 0d6e 15       		.uleb128 0x15
 3164 0d6f 21030000 		.4byte	.LASF162
 3165 0d73 01       		.byte	0x1
 3166 0d74 2B06     		.2byte	0x62b
 3167 0d76 A4000000 		.4byte	0xa4
 3168 0d7a 48050000 		.4byte	.LLST37
 3169 0d7e 15       		.uleb128 0x15
 3170 0d7f 54060000 		.4byte	.LASF123
 3171 0d83 01       		.byte	0x1
 3172 0d84 2C06     		.2byte	0x62c
 3173 0d86 83000000 		.4byte	0x83
 3174 0d8a 7D050000 		.4byte	.LLST38
 3175 0d8e 23       		.uleb128 0x23
 3176 0d8f 637000   		.ascii	"cp\000"
 3177 0d92 01       		.byte	0x1
 3178 0d93 2E06     		.2byte	0x62e
 3179 0d95 83000000 		.4byte	0x83
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 109


 3180 0d99 B2050000 		.4byte	.LLST39
 3181 0d9d 20       		.uleb128 0x20
 3182 0d9e 8E010000 		.4byte	.LASF163
 3183 0da2 01       		.byte	0x1
 3184 0da3 3306     		.2byte	0x633
 3185 0da5 520E0000 		.4byte	0xe52
 3186 0da9 02       		.uleb128 0x2
 3187 0daa 91       		.byte	0x91
 3188 0dab 5C       		.sleb128 -36
 3189 0dac 15       		.uleb128 0x15
 3190 0dad 9F010000 		.4byte	.LASF153
 3191 0db1 01       		.byte	0x1
 3192 0db2 3406     		.2byte	0x634
 3193 0db4 750C0000 		.4byte	0xc75
 3194 0db8 D1050000 		.4byte	.LLST40
 3195 0dbc 20       		.uleb128 0x20
 3196 0dbd EA030000 		.4byte	.LASF164
 3197 0dc1 01       		.byte	0x1
 3198 0dc2 3506     		.2byte	0x635
 3199 0dc4 84010000 		.4byte	0x184
 3200 0dc8 02       		.uleb128 0x2
 3201 0dc9 91       		.byte	0x91
 3202 0dca 40       		.sleb128 -64
 3203 0dcb 1A       		.uleb128 0x1a
 3204 0dcc 40000000 		.4byte	.LVL121
 3205 0dd0 33100000 		.4byte	0x1033
 3206 0dd4 E50D0000 		.4byte	0xde5
 3207 0dd8 1B       		.uleb128 0x1b
 3208 0dd9 01       		.uleb128 0x1
 3209 0dda 50       		.byte	0x50
 3210 0ddb 02       		.uleb128 0x2
 3211 0ddc 75       		.byte	0x75
 3212 0ddd 00       		.sleb128 0
 3213 0dde 1B       		.uleb128 0x1b
 3214 0ddf 01       		.uleb128 0x1
 3215 0de0 51       		.byte	0x51
 3216 0de1 02       		.uleb128 0x2
 3217 0de2 08       		.byte	0x8
 3218 0de3 55       		.byte	0x55
 3219 0de4 00       		.byte	0
 3220 0de5 1A       		.uleb128 0x1a
 3221 0de6 68000000 		.4byte	.LVL123
 3222 0dea 4B100000 		.4byte	0x104b
 3223 0dee F90D0000 		.4byte	0xdf9
 3224 0df2 1B       		.uleb128 0x1b
 3225 0df3 01       		.uleb128 0x1
 3226 0df4 50       		.byte	0x50
 3227 0df5 02       		.uleb128 0x2
 3228 0df6 91       		.byte	0x91
 3229 0df7 40       		.sleb128 -64
 3230 0df8 00       		.byte	0
 3231 0df9 1A       		.uleb128 0x1a
 3232 0dfa B8000000 		.4byte	.LVL130
 3233 0dfe 33100000 		.4byte	0x1033
 3234 0e02 130E0000 		.4byte	0xe13
 3235 0e06 1B       		.uleb128 0x1b
 3236 0e07 01       		.uleb128 0x1
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 110


 3237 0e08 50       		.byte	0x50
 3238 0e09 02       		.uleb128 0x2
 3239 0e0a 74       		.byte	0x74
 3240 0e0b 00       		.sleb128 0
 3241 0e0c 1B       		.uleb128 0x1b
 3242 0e0d 01       		.uleb128 0x1
 3243 0e0e 51       		.byte	0x51
 3244 0e0f 02       		.uleb128 0x2
 3245 0e10 08       		.byte	0x8
 3246 0e11 55       		.byte	0x55
 3247 0e12 00       		.byte	0
 3248 0e13 1A       		.uleb128 0x1a
 3249 0e14 E2000000 		.4byte	.LVL132
 3250 0e18 56100000 		.4byte	0x1056
 3251 0e1c 270E0000 		.4byte	0xe27
 3252 0e20 1B       		.uleb128 0x1b
 3253 0e21 01       		.uleb128 0x1
 3254 0e22 50       		.byte	0x50
 3255 0e23 02       		.uleb128 0x2
 3256 0e24 91       		.byte	0x91
 3257 0e25 40       		.sleb128 -64
 3258 0e26 00       		.byte	0
 3259 0e27 1A       		.uleb128 0x1a
 3260 0e28 FC000000 		.4byte	.LVL137
 3261 0e2c D40C0000 		.4byte	0xcd4
 3262 0e30 3B0E0000 		.4byte	0xe3b
 3263 0e34 1B       		.uleb128 0x1b
 3264 0e35 01       		.uleb128 0x1
 3265 0e36 50       		.byte	0x50
 3266 0e37 02       		.uleb128 0x2
 3267 0e38 74       		.byte	0x74
 3268 0e39 00       		.sleb128 0
 3269 0e3a 00       		.byte	0
 3270 0e3b 1E       		.uleb128 0x1e
 3271 0e3c 04010000 		.4byte	.LVL138
 3272 0e40 33100000 		.4byte	0x1033
 3273 0e44 1B       		.uleb128 0x1b
 3274 0e45 01       		.uleb128 0x1
 3275 0e46 50       		.byte	0x50
 3276 0e47 02       		.uleb128 0x2
 3277 0e48 74       		.byte	0x74
 3278 0e49 00       		.sleb128 0
 3279 0e4a 1B       		.uleb128 0x1b
 3280 0e4b 01       		.uleb128 0x1
 3281 0e4c 51       		.byte	0x51
 3282 0e4d 02       		.uleb128 0x2
 3283 0e4e 08       		.byte	0x8
 3284 0e4f 55       		.byte	0x55
 3285 0e50 00       		.byte	0
 3286 0e51 00       		.byte	0
 3287 0e52 0D       		.uleb128 0xd
 3288 0e53 83000000 		.4byte	0x83
 3289 0e57 620E0000 		.4byte	0xe62
 3290 0e5b 0E       		.uleb128 0xe
 3291 0e5c D6020000 		.4byte	0x2d6
 3292 0e60 04       		.byte	0x4
 3293 0e61 00       		.byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 111


 3294 0e62 1C       		.uleb128 0x1c
 3295 0e63 2F0C0000 		.4byte	.LASF165
 3296 0e67 01       		.byte	0x1
 3297 0e68 8B08     		.2byte	0x88b
 3298 0e6a 00000000 		.4byte	.LFB20
 3299 0e6e 20000000 		.4byte	.LFE20-.LFB20
 3300 0e72 01       		.uleb128 0x1
 3301 0e73 9C       		.byte	0x9c
 3302 0e74 A90E0000 		.4byte	0xea9
 3303 0e78 15       		.uleb128 0x15
 3304 0e79 54060000 		.4byte	.LASF123
 3305 0e7d 01       		.byte	0x1
 3306 0e7e 8D08     		.2byte	0x88d
 3307 0e80 83000000 		.4byte	0x83
 3308 0e84 FA050000 		.4byte	.LLST41
 3309 0e88 15       		.uleb128 0x15
 3310 0e89 9F010000 		.4byte	.LASF153
 3311 0e8d 01       		.byte	0x1
 3312 0e8e 8E08     		.2byte	0x88e
 3313 0e90 750C0000 		.4byte	0xc75
 3314 0e94 19060000 		.4byte	.LLST42
 3315 0e98 1E       		.uleb128 0x1e
 3316 0e99 14000000 		.4byte	.LVL146
 3317 0e9d D40C0000 		.4byte	0xcd4
 3318 0ea1 1B       		.uleb128 0x1b
 3319 0ea2 01       		.uleb128 0x1
 3320 0ea3 50       		.byte	0x50
 3321 0ea4 02       		.uleb128 0x2
 3322 0ea5 74       		.byte	0x74
 3323 0ea6 00       		.sleb128 0
 3324 0ea7 00       		.byte	0
 3325 0ea8 00       		.byte	0
 3326 0ea9 18       		.uleb128 0x18
 3327 0eaa CC060000 		.4byte	.LASF166
 3328 0eae 01       		.byte	0x1
 3329 0eaf 0402     		.2byte	0x204
 3330 0eb1 A4000000 		.4byte	0xa4
 3331 0eb5 00000000 		.4byte	.LFB5
 3332 0eb9 1C000000 		.4byte	.LFE5-.LFB5
 3333 0ebd 01       		.uleb128 0x1
 3334 0ebe 9C       		.byte	0x9c
 3335 0ebf 040F0000 		.4byte	0xf04
 3336 0ec3 1D       		.uleb128 0x1d
 3337 0ec4 D5000000 		.4byte	.LASF167
 3338 0ec8 01       		.byte	0x1
 3339 0ec9 0602     		.2byte	0x206
 3340 0ecb A4000000 		.4byte	0xa4
 3341 0ecf 00       		.byte	0
 3342 0ed0 16       		.uleb128 0x16
 3343 0ed1 06000000 		.4byte	.LVL150
 3344 0ed5 8B070000 		.4byte	0x78b
 3345 0ed9 16       		.uleb128 0x16
 3346 0eda 0A000000 		.4byte	.LVL151
 3347 0ede 620E0000 		.4byte	0xe62
 3348 0ee2 16       		.uleb128 0x16
 3349 0ee3 0E000000 		.4byte	.LVL152
 3350 0ee7 CE090000 		.4byte	0x9ce
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 112


 3351 0eeb 16       		.uleb128 0x16
 3352 0eec 12000000 		.4byte	.LVL153
 3353 0ef0 1C100000 		.4byte	0x101c
 3354 0ef4 1E       		.uleb128 0x1e
 3355 0ef5 18000000 		.4byte	.LVL154
 3356 0ef9 95090000 		.4byte	0x995
 3357 0efd 1B       		.uleb128 0x1b
 3358 0efe 01       		.uleb128 0x1
 3359 0eff 50       		.byte	0x50
 3360 0f00 01       		.uleb128 0x1
 3361 0f01 31       		.byte	0x31
 3362 0f02 00       		.byte	0
 3363 0f03 00       		.byte	0
 3364 0f04 24       		.uleb128 0x24
 3365 0f05 82050000 		.4byte	.LASF168
 3366 0f09 05       		.byte	0x5
 3367 0f0a 4404     		.2byte	0x444
 3368 0f0c DA050000 		.4byte	0x5da
 3369 0f10 24       		.uleb128 0x24
 3370 0f11 24080000 		.4byte	.LASF169
 3371 0f15 05       		.byte	0x5
 3372 0f16 4504     		.2byte	0x445
 3373 0f18 1C0F0000 		.4byte	0xf1c
 3374 0f1c 1F       		.uleb128 0x1f
 3375 0f1d 51070000 		.4byte	0x751
 3376 0f21 0D       		.uleb128 0xd
 3377 0f22 90090000 		.4byte	0x990
 3378 0f26 310F0000 		.4byte	0xf31
 3379 0f2a 0E       		.uleb128 0xe
 3380 0f2b D6020000 		.4byte	0x2d6
 3381 0f2f 04       		.byte	0x4
 3382 0f30 00       		.byte	0
 3383 0f31 24       		.uleb128 0x24
 3384 0f32 430B0000 		.4byte	.LASF170
 3385 0f36 05       		.byte	0x5
 3386 0f37 4604     		.2byte	0x446
 3387 0f39 3D0F0000 		.4byte	0xf3d
 3388 0f3d 1F       		.uleb128 0x1f
 3389 0f3e 210F0000 		.4byte	0xf21
 3390 0f42 25       		.uleb128 0x25
 3391 0f43 75000000 		.4byte	.LASF171
 3392 0f47 01       		.byte	0x1
 3393 0f48 BB       		.byte	0xbb
 3394 0f49 BC000000 		.4byte	0xbc
 3395 0f4d 05       		.uleb128 0x5
 3396 0f4e 03       		.byte	0x3
 3397 0f4f 00000000 		.4byte	CapSense_widgetIndex
 3398 0f53 25       		.uleb128 0x25
 3399 0f54 34020000 		.4byte	.LASF172
 3400 0f58 01       		.byte	0x1
 3401 0f59 BC       		.byte	0xbc
 3402 0f5a BC000000 		.4byte	0xbc
 3403 0f5e 05       		.uleb128 0x5
 3404 0f5f 03       		.byte	0x3
 3405 0f60 00000000 		.4byte	CapSense_sensorIndex
 3406 0f64 25       		.uleb128 0x25
 3407 0f65 110C0000 		.4byte	.LASF173
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 113


 3408 0f69 01       		.byte	0x1
 3409 0f6a BD       		.byte	0xbd
 3410 0f6b 6B000000 		.4byte	0x6b
 3411 0f6f 05       		.uleb128 0x5
 3412 0f70 03       		.byte	0x3
 3413 0f71 00000000 		.4byte	CapSense_requestScanAllWidget
 3414 0f75 25       		.uleb128 0x25
 3415 0f76 DC0A0000 		.4byte	.LASF174
 3416 0f7a 01       		.byte	0x1
 3417 0f7b C0       		.byte	0xc0
 3418 0f7c 0C070000 		.4byte	0x70c
 3419 0f80 05       		.uleb128 0x5
 3420 0f81 03       		.byte	0x3
 3421 0f82 00000000 		.4byte	CapSense_curRamSnsPtr
 3422 0f86 25       		.uleb128 0x25
 3423 0f87 C1080000 		.4byte	.LASF175
 3424 0f8b 01       		.byte	0x1
 3425 0f8c AE       		.byte	0xae
 3426 0f8d 22020000 		.4byte	0x222
 3427 0f91 05       		.uleb128 0x5
 3428 0f92 03       		.byte	0x3
 3429 0f93 00000000 		.4byte	CapSense_currentSenseMethod
 3430 0f97 25       		.uleb128 0x25
 3431 0f98 FE0A0000 		.4byte	.LASF176
 3432 0f9c 01       		.byte	0x1
 3433 0f9d B7       		.byte	0xb7
 3434 0f9e A80F0000 		.4byte	0xfa8
 3435 0fa2 05       		.uleb128 0x5
 3436 0fa3 03       		.byte	0x3
 3437 0fa4 00000000 		.4byte	CapSense_scanFreqIndex
 3438 0fa8 1F       		.uleb128 0x1f
 3439 0fa9 6B000000 		.4byte	0x6b
 3440 0fad 25       		.uleb128 0x25
 3441 0fae 12060000 		.4byte	.LASF177
 3442 0fb2 01       		.byte	0x1
 3443 0fb3 CF       		.byte	0xcf
 3444 0fb4 8A090000 		.4byte	0x98a
 3445 0fb8 05       		.uleb128 0x5
 3446 0fb9 03       		.byte	0x3
 3447 0fba 00000000 		.4byte	CapSense_curSnsIOPtr
 3448 0fbe 24       		.uleb128 0x24
 3449 0fbf E2060000 		.4byte	.LASF178
 3450 0fc3 06       		.byte	0x6
 3451 0fc4 A501     		.2byte	0x1a5
 3452 0fc6 6B000000 		.4byte	0x6b
 3453 0fca 24       		.uleb128 0x24
 3454 0fcb 08080000 		.4byte	.LASF179
 3455 0fcf 06       		.byte	0x6
 3456 0fd0 A601     		.2byte	0x1a6
 3457 0fd2 77000000 		.4byte	0x77
 3458 0fd6 26       		.uleb128 0x26
 3459 0fd7 20070000 		.4byte	.LASF180
 3460 0fdb 20070000 		.4byte	.LASF180
 3461 0fdf 06       		.byte	0x6
 3462 0fe0 D401     		.2byte	0x1d4
 3463 0fe2 26       		.uleb128 0x26
 3464 0fe3 FD010000 		.4byte	.LASF181
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 114


 3465 0fe7 FD010000 		.4byte	.LASF181
 3466 0feb 06       		.byte	0x6
 3467 0fec B701     		.2byte	0x1b7
 3468 0fee 26       		.uleb128 0x26
 3469 0fef FC090000 		.4byte	.LASF182
 3470 0ff3 FC090000 		.4byte	.LASF182
 3471 0ff7 06       		.byte	0x6
 3472 0ff8 B901     		.2byte	0x1b9
 3473 0ffa 27       		.uleb128 0x27
 3474 0ffb C50A0000 		.4byte	.LASF183
 3475 0fff C50A0000 		.4byte	.LASF183
 3476 1003 07       		.byte	0x7
 3477 1004 E5       		.byte	0xe5
 3478 1005 27       		.uleb128 0x27
 3479 1006 06040000 		.4byte	.LASF184
 3480 100a 06040000 		.4byte	.LASF184
 3481 100e 07       		.byte	0x7
 3482 100f E6       		.byte	0xe6
 3483 1010 26       		.uleb128 0x26
 3484 1011 8E080000 		.4byte	.LASF185
 3485 1015 8E080000 		.4byte	.LASF185
 3486 1019 06       		.byte	0x6
 3487 101a C001     		.2byte	0x1c0
 3488 101c 26       		.uleb128 0x26
 3489 101d FC040000 		.4byte	.LASF186
 3490 1021 FC040000 		.4byte	.LASF186
 3491 1025 06       		.byte	0x6
 3492 1026 D001     		.2byte	0x1d0
 3493 1028 27       		.uleb128 0x27
 3494 1029 1C090000 		.4byte	.LASF187
 3495 102d 1C090000 		.4byte	.LASF187
 3496 1031 08       		.byte	0x8
 3497 1032 18       		.byte	0x18
 3498 1033 26       		.uleb128 0x26
 3499 1034 E7070000 		.4byte	.LASF188
 3500 1038 E7070000 		.4byte	.LASF188
 3501 103c 06       		.byte	0x6
 3502 103d BD01     		.2byte	0x1bd
 3503 103f 26       		.uleb128 0x26
 3504 1040 74070000 		.4byte	.LASF189
 3505 1044 74070000 		.4byte	.LASF189
 3506 1048 06       		.byte	0x6
 3507 1049 C101     		.2byte	0x1c1
 3508 104b 27       		.uleb128 0x27
 3509 104c 4A080000 		.4byte	.LASF190
 3510 1050 4A080000 		.4byte	.LASF190
 3511 1054 04       		.byte	0x4
 3512 1055 B0       		.byte	0xb0
 3513 1056 27       		.uleb128 0x27
 3514 1057 10010000 		.4byte	.LASF191
 3515 105b 10010000 		.4byte	.LASF191
 3516 105f 04       		.byte	0x4
 3517 1060 B1       		.byte	0xb1
 3518 1061 00       		.byte	0
 3519              		.section	.debug_abbrev,"",%progbits
 3520              	.Ldebug_abbrev0:
 3521 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 115


 3522 0001 11       		.uleb128 0x11
 3523 0002 01       		.byte	0x1
 3524 0003 25       		.uleb128 0x25
 3525 0004 0E       		.uleb128 0xe
 3526 0005 13       		.uleb128 0x13
 3527 0006 0B       		.uleb128 0xb
 3528 0007 03       		.uleb128 0x3
 3529 0008 0E       		.uleb128 0xe
 3530 0009 1B       		.uleb128 0x1b
 3531 000a 0E       		.uleb128 0xe
 3532 000b 55       		.uleb128 0x55
 3533 000c 17       		.uleb128 0x17
 3534 000d 11       		.uleb128 0x11
 3535 000e 01       		.uleb128 0x1
 3536 000f 10       		.uleb128 0x10
 3537 0010 17       		.uleb128 0x17
 3538 0011 00       		.byte	0
 3539 0012 00       		.byte	0
 3540 0013 02       		.uleb128 0x2
 3541 0014 24       		.uleb128 0x24
 3542 0015 00       		.byte	0
 3543 0016 0B       		.uleb128 0xb
 3544 0017 0B       		.uleb128 0xb
 3545 0018 3E       		.uleb128 0x3e
 3546 0019 0B       		.uleb128 0xb
 3547 001a 03       		.uleb128 0x3
 3548 001b 0E       		.uleb128 0xe
 3549 001c 00       		.byte	0
 3550 001d 00       		.byte	0
 3551 001e 03       		.uleb128 0x3
 3552 001f 24       		.uleb128 0x24
 3553 0020 00       		.byte	0
 3554 0021 0B       		.uleb128 0xb
 3555 0022 0B       		.uleb128 0xb
 3556 0023 3E       		.uleb128 0x3e
 3557 0024 0B       		.uleb128 0xb
 3558 0025 03       		.uleb128 0x3
 3559 0026 08       		.uleb128 0x8
 3560 0027 00       		.byte	0
 3561 0028 00       		.byte	0
 3562 0029 04       		.uleb128 0x4
 3563 002a 16       		.uleb128 0x16
 3564 002b 00       		.byte	0
 3565 002c 03       		.uleb128 0x3
 3566 002d 0E       		.uleb128 0xe
 3567 002e 3A       		.uleb128 0x3a
 3568 002f 0B       		.uleb128 0xb
 3569 0030 3B       		.uleb128 0x3b
 3570 0031 05       		.uleb128 0x5
 3571 0032 49       		.uleb128 0x49
 3572 0033 13       		.uleb128 0x13
 3573 0034 00       		.byte	0
 3574 0035 00       		.byte	0
 3575 0036 05       		.uleb128 0x5
 3576 0037 35       		.uleb128 0x35
 3577 0038 00       		.byte	0
 3578 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 116


 3579 003a 13       		.uleb128 0x13
 3580 003b 00       		.byte	0
 3581 003c 00       		.byte	0
 3582 003d 06       		.uleb128 0x6
 3583 003e 0F       		.uleb128 0xf
 3584 003f 00       		.byte	0
 3585 0040 0B       		.uleb128 0xb
 3586 0041 0B       		.uleb128 0xb
 3587 0042 49       		.uleb128 0x49
 3588 0043 13       		.uleb128 0x13
 3589 0044 00       		.byte	0
 3590 0045 00       		.byte	0
 3591 0046 07       		.uleb128 0x7
 3592 0047 15       		.uleb128 0x15
 3593 0048 00       		.byte	0
 3594 0049 27       		.uleb128 0x27
 3595 004a 19       		.uleb128 0x19
 3596 004b 00       		.byte	0
 3597 004c 00       		.byte	0
 3598 004d 08       		.uleb128 0x8
 3599 004e 13       		.uleb128 0x13
 3600 004f 01       		.byte	0x1
 3601 0050 0B       		.uleb128 0xb
 3602 0051 0B       		.uleb128 0xb
 3603 0052 3A       		.uleb128 0x3a
 3604 0053 0B       		.uleb128 0xb
 3605 0054 3B       		.uleb128 0x3b
 3606 0055 0B       		.uleb128 0xb
 3607 0056 01       		.uleb128 0x1
 3608 0057 13       		.uleb128 0x13
 3609 0058 00       		.byte	0
 3610 0059 00       		.byte	0
 3611 005a 09       		.uleb128 0x9
 3612 005b 0D       		.uleb128 0xd
 3613 005c 00       		.byte	0
 3614 005d 03       		.uleb128 0x3
 3615 005e 0E       		.uleb128 0xe
 3616 005f 3A       		.uleb128 0x3a
 3617 0060 0B       		.uleb128 0xb
 3618 0061 3B       		.uleb128 0x3b
 3619 0062 0B       		.uleb128 0xb
 3620 0063 49       		.uleb128 0x49
 3621 0064 13       		.uleb128 0x13
 3622 0065 38       		.uleb128 0x38
 3623 0066 0B       		.uleb128 0xb
 3624 0067 00       		.byte	0
 3625 0068 00       		.byte	0
 3626 0069 0A       		.uleb128 0xa
 3627 006a 16       		.uleb128 0x16
 3628 006b 00       		.byte	0
 3629 006c 03       		.uleb128 0x3
 3630 006d 0E       		.uleb128 0xe
 3631 006e 3A       		.uleb128 0x3a
 3632 006f 0B       		.uleb128 0xb
 3633 0070 3B       		.uleb128 0x3b
 3634 0071 0B       		.uleb128 0xb
 3635 0072 49       		.uleb128 0x49
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 117


 3636 0073 13       		.uleb128 0x13
 3637 0074 00       		.byte	0
 3638 0075 00       		.byte	0
 3639 0076 0B       		.uleb128 0xb
 3640 0077 04       		.uleb128 0x4
 3641 0078 01       		.byte	0x1
 3642 0079 0B       		.uleb128 0xb
 3643 007a 0B       		.uleb128 0xb
 3644 007b 49       		.uleb128 0x49
 3645 007c 13       		.uleb128 0x13
 3646 007d 3A       		.uleb128 0x3a
 3647 007e 0B       		.uleb128 0xb
 3648 007f 3B       		.uleb128 0x3b
 3649 0080 0B       		.uleb128 0xb
 3650 0081 01       		.uleb128 0x1
 3651 0082 13       		.uleb128 0x13
 3652 0083 00       		.byte	0
 3653 0084 00       		.byte	0
 3654 0085 0C       		.uleb128 0xc
 3655 0086 28       		.uleb128 0x28
 3656 0087 00       		.byte	0
 3657 0088 03       		.uleb128 0x3
 3658 0089 0E       		.uleb128 0xe
 3659 008a 1C       		.uleb128 0x1c
 3660 008b 0B       		.uleb128 0xb
 3661 008c 00       		.byte	0
 3662 008d 00       		.byte	0
 3663 008e 0D       		.uleb128 0xd
 3664 008f 01       		.uleb128 0x1
 3665 0090 01       		.byte	0x1
 3666 0091 49       		.uleb128 0x49
 3667 0092 13       		.uleb128 0x13
 3668 0093 01       		.uleb128 0x1
 3669 0094 13       		.uleb128 0x13
 3670 0095 00       		.byte	0
 3671 0096 00       		.byte	0
 3672 0097 0E       		.uleb128 0xe
 3673 0098 21       		.uleb128 0x21
 3674 0099 00       		.byte	0
 3675 009a 49       		.uleb128 0x49
 3676 009b 13       		.uleb128 0x13
 3677 009c 2F       		.uleb128 0x2f
 3678 009d 0B       		.uleb128 0xb
 3679 009e 00       		.byte	0
 3680 009f 00       		.byte	0
 3681 00a0 0F       		.uleb128 0xf
 3682 00a1 0D       		.uleb128 0xd
 3683 00a2 00       		.byte	0
 3684 00a3 03       		.uleb128 0x3
 3685 00a4 0E       		.uleb128 0xe
 3686 00a5 3A       		.uleb128 0x3a
 3687 00a6 0B       		.uleb128 0xb
 3688 00a7 3B       		.uleb128 0x3b
 3689 00a8 05       		.uleb128 0x5
 3690 00a9 49       		.uleb128 0x49
 3691 00aa 13       		.uleb128 0x13
 3692 00ab 38       		.uleb128 0x38
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 118


 3693 00ac 0B       		.uleb128 0xb
 3694 00ad 00       		.byte	0
 3695 00ae 00       		.byte	0
 3696 00af 10       		.uleb128 0x10
 3697 00b0 13       		.uleb128 0x13
 3698 00b1 01       		.byte	0x1
 3699 00b2 0B       		.uleb128 0xb
 3700 00b3 0B       		.uleb128 0xb
 3701 00b4 3A       		.uleb128 0x3a
 3702 00b5 0B       		.uleb128 0xb
 3703 00b6 3B       		.uleb128 0x3b
 3704 00b7 05       		.uleb128 0x5
 3705 00b8 01       		.uleb128 0x1
 3706 00b9 13       		.uleb128 0x13
 3707 00ba 00       		.byte	0
 3708 00bb 00       		.byte	0
 3709 00bc 11       		.uleb128 0x11
 3710 00bd 0D       		.uleb128 0xd
 3711 00be 00       		.byte	0
 3712 00bf 03       		.uleb128 0x3
 3713 00c0 08       		.uleb128 0x8
 3714 00c1 3A       		.uleb128 0x3a
 3715 00c2 0B       		.uleb128 0xb
 3716 00c3 3B       		.uleb128 0x3b
 3717 00c4 05       		.uleb128 0x5
 3718 00c5 49       		.uleb128 0x49
 3719 00c6 13       		.uleb128 0x13
 3720 00c7 38       		.uleb128 0x38
 3721 00c8 0B       		.uleb128 0xb
 3722 00c9 00       		.byte	0
 3723 00ca 00       		.byte	0
 3724 00cb 12       		.uleb128 0x12
 3725 00cc 26       		.uleb128 0x26
 3726 00cd 00       		.byte	0
 3727 00ce 00       		.byte	0
 3728 00cf 00       		.byte	0
 3729 00d0 13       		.uleb128 0x13
 3730 00d1 0F       		.uleb128 0xf
 3731 00d2 00       		.byte	0
 3732 00d3 0B       		.uleb128 0xb
 3733 00d4 0B       		.uleb128 0xb
 3734 00d5 00       		.byte	0
 3735 00d6 00       		.byte	0
 3736 00d7 14       		.uleb128 0x14
 3737 00d8 2E       		.uleb128 0x2e
 3738 00d9 01       		.byte	0x1
 3739 00da 03       		.uleb128 0x3
 3740 00db 0E       		.uleb128 0xe
 3741 00dc 3A       		.uleb128 0x3a
 3742 00dd 0B       		.uleb128 0xb
 3743 00de 3B       		.uleb128 0x3b
 3744 00df 05       		.uleb128 0x5
 3745 00e0 27       		.uleb128 0x27
 3746 00e1 19       		.uleb128 0x19
 3747 00e2 11       		.uleb128 0x11
 3748 00e3 01       		.uleb128 0x1
 3749 00e4 12       		.uleb128 0x12
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 119


 3750 00e5 06       		.uleb128 0x6
 3751 00e6 40       		.uleb128 0x40
 3752 00e7 18       		.uleb128 0x18
 3753 00e8 9742     		.uleb128 0x2117
 3754 00ea 19       		.uleb128 0x19
 3755 00eb 01       		.uleb128 0x1
 3756 00ec 13       		.uleb128 0x13
 3757 00ed 00       		.byte	0
 3758 00ee 00       		.byte	0
 3759 00ef 15       		.uleb128 0x15
 3760 00f0 34       		.uleb128 0x34
 3761 00f1 00       		.byte	0
 3762 00f2 03       		.uleb128 0x3
 3763 00f3 0E       		.uleb128 0xe
 3764 00f4 3A       		.uleb128 0x3a
 3765 00f5 0B       		.uleb128 0xb
 3766 00f6 3B       		.uleb128 0x3b
 3767 00f7 05       		.uleb128 0x5
 3768 00f8 49       		.uleb128 0x49
 3769 00f9 13       		.uleb128 0x13
 3770 00fa 02       		.uleb128 0x2
 3771 00fb 17       		.uleb128 0x17
 3772 00fc 00       		.byte	0
 3773 00fd 00       		.byte	0
 3774 00fe 16       		.uleb128 0x16
 3775 00ff 898201   		.uleb128 0x4109
 3776 0102 00       		.byte	0
 3777 0103 11       		.uleb128 0x11
 3778 0104 01       		.uleb128 0x1
 3779 0105 31       		.uleb128 0x31
 3780 0106 13       		.uleb128 0x13
 3781 0107 00       		.byte	0
 3782 0108 00       		.byte	0
 3783 0109 17       		.uleb128 0x17
 3784 010a 2E       		.uleb128 0x2e
 3785 010b 00       		.byte	0
 3786 010c 3F       		.uleb128 0x3f
 3787 010d 19       		.uleb128 0x19
 3788 010e 03       		.uleb128 0x3
 3789 010f 0E       		.uleb128 0xe
 3790 0110 3A       		.uleb128 0x3a
 3791 0111 0B       		.uleb128 0xb
 3792 0112 3B       		.uleb128 0x3b
 3793 0113 0B       		.uleb128 0xb
 3794 0114 27       		.uleb128 0x27
 3795 0115 19       		.uleb128 0x19
 3796 0116 49       		.uleb128 0x49
 3797 0117 13       		.uleb128 0x13
 3798 0118 11       		.uleb128 0x11
 3799 0119 01       		.uleb128 0x1
 3800 011a 12       		.uleb128 0x12
 3801 011b 06       		.uleb128 0x6
 3802 011c 40       		.uleb128 0x40
 3803 011d 18       		.uleb128 0x18
 3804 011e 9742     		.uleb128 0x2117
 3805 0120 19       		.uleb128 0x19
 3806 0121 00       		.byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 120


 3807 0122 00       		.byte	0
 3808 0123 18       		.uleb128 0x18
 3809 0124 2E       		.uleb128 0x2e
 3810 0125 01       		.byte	0x1
 3811 0126 3F       		.uleb128 0x3f
 3812 0127 19       		.uleb128 0x19
 3813 0128 03       		.uleb128 0x3
 3814 0129 0E       		.uleb128 0xe
 3815 012a 3A       		.uleb128 0x3a
 3816 012b 0B       		.uleb128 0xb
 3817 012c 3B       		.uleb128 0x3b
 3818 012d 05       		.uleb128 0x5
 3819 012e 27       		.uleb128 0x27
 3820 012f 19       		.uleb128 0x19
 3821 0130 49       		.uleb128 0x49
 3822 0131 13       		.uleb128 0x13
 3823 0132 11       		.uleb128 0x11
 3824 0133 01       		.uleb128 0x1
 3825 0134 12       		.uleb128 0x12
 3826 0135 06       		.uleb128 0x6
 3827 0136 40       		.uleb128 0x40
 3828 0137 18       		.uleb128 0x18
 3829 0138 9742     		.uleb128 0x2117
 3830 013a 19       		.uleb128 0x19
 3831 013b 01       		.uleb128 0x1
 3832 013c 13       		.uleb128 0x13
 3833 013d 00       		.byte	0
 3834 013e 00       		.byte	0
 3835 013f 19       		.uleb128 0x19
 3836 0140 05       		.uleb128 0x5
 3837 0141 00       		.byte	0
 3838 0142 03       		.uleb128 0x3
 3839 0143 0E       		.uleb128 0xe
 3840 0144 3A       		.uleb128 0x3a
 3841 0145 0B       		.uleb128 0xb
 3842 0146 3B       		.uleb128 0x3b
 3843 0147 05       		.uleb128 0x5
 3844 0148 49       		.uleb128 0x49
 3845 0149 13       		.uleb128 0x13
 3846 014a 02       		.uleb128 0x2
 3847 014b 17       		.uleb128 0x17
 3848 014c 00       		.byte	0
 3849 014d 00       		.byte	0
 3850 014e 1A       		.uleb128 0x1a
 3851 014f 898201   		.uleb128 0x4109
 3852 0152 01       		.byte	0x1
 3853 0153 11       		.uleb128 0x11
 3854 0154 01       		.uleb128 0x1
 3855 0155 31       		.uleb128 0x31
 3856 0156 13       		.uleb128 0x13
 3857 0157 01       		.uleb128 0x1
 3858 0158 13       		.uleb128 0x13
 3859 0159 00       		.byte	0
 3860 015a 00       		.byte	0
 3861 015b 1B       		.uleb128 0x1b
 3862 015c 8A8201   		.uleb128 0x410a
 3863 015f 00       		.byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 121


 3864 0160 02       		.uleb128 0x2
 3865 0161 18       		.uleb128 0x18
 3866 0162 9142     		.uleb128 0x2111
 3867 0164 18       		.uleb128 0x18
 3868 0165 00       		.byte	0
 3869 0166 00       		.byte	0
 3870 0167 1C       		.uleb128 0x1c
 3871 0168 2E       		.uleb128 0x2e
 3872 0169 01       		.byte	0x1
 3873 016a 3F       		.uleb128 0x3f
 3874 016b 19       		.uleb128 0x19
 3875 016c 03       		.uleb128 0x3
 3876 016d 0E       		.uleb128 0xe
 3877 016e 3A       		.uleb128 0x3a
 3878 016f 0B       		.uleb128 0xb
 3879 0170 3B       		.uleb128 0x3b
 3880 0171 05       		.uleb128 0x5
 3881 0172 27       		.uleb128 0x27
 3882 0173 19       		.uleb128 0x19
 3883 0174 11       		.uleb128 0x11
 3884 0175 01       		.uleb128 0x1
 3885 0176 12       		.uleb128 0x12
 3886 0177 06       		.uleb128 0x6
 3887 0178 40       		.uleb128 0x40
 3888 0179 18       		.uleb128 0x18
 3889 017a 9742     		.uleb128 0x2117
 3890 017c 19       		.uleb128 0x19
 3891 017d 01       		.uleb128 0x1
 3892 017e 13       		.uleb128 0x13
 3893 017f 00       		.byte	0
 3894 0180 00       		.byte	0
 3895 0181 1D       		.uleb128 0x1d
 3896 0182 34       		.uleb128 0x34
 3897 0183 00       		.byte	0
 3898 0184 03       		.uleb128 0x3
 3899 0185 0E       		.uleb128 0xe
 3900 0186 3A       		.uleb128 0x3a
 3901 0187 0B       		.uleb128 0xb
 3902 0188 3B       		.uleb128 0x3b
 3903 0189 05       		.uleb128 0x5
 3904 018a 49       		.uleb128 0x49
 3905 018b 13       		.uleb128 0x13
 3906 018c 1C       		.uleb128 0x1c
 3907 018d 0B       		.uleb128 0xb
 3908 018e 00       		.byte	0
 3909 018f 00       		.byte	0
 3910 0190 1E       		.uleb128 0x1e
 3911 0191 898201   		.uleb128 0x4109
 3912 0194 01       		.byte	0x1
 3913 0195 11       		.uleb128 0x11
 3914 0196 01       		.uleb128 0x1
 3915 0197 31       		.uleb128 0x31
 3916 0198 13       		.uleb128 0x13
 3917 0199 00       		.byte	0
 3918 019a 00       		.byte	0
 3919 019b 1F       		.uleb128 0x1f
 3920 019c 26       		.uleb128 0x26
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 122


 3921 019d 00       		.byte	0
 3922 019e 49       		.uleb128 0x49
 3923 019f 13       		.uleb128 0x13
 3924 01a0 00       		.byte	0
 3925 01a1 00       		.byte	0
 3926 01a2 20       		.uleb128 0x20
 3927 01a3 34       		.uleb128 0x34
 3928 01a4 00       		.byte	0
 3929 01a5 03       		.uleb128 0x3
 3930 01a6 0E       		.uleb128 0xe
 3931 01a7 3A       		.uleb128 0x3a
 3932 01a8 0B       		.uleb128 0xb
 3933 01a9 3B       		.uleb128 0x3b
 3934 01aa 05       		.uleb128 0x5
 3935 01ab 49       		.uleb128 0x49
 3936 01ac 13       		.uleb128 0x13
 3937 01ad 02       		.uleb128 0x2
 3938 01ae 18       		.uleb128 0x18
 3939 01af 00       		.byte	0
 3940 01b0 00       		.byte	0
 3941 01b1 21       		.uleb128 0x21
 3942 01b2 05       		.uleb128 0x5
 3943 01b3 00       		.byte	0
 3944 01b4 03       		.uleb128 0x3
 3945 01b5 0E       		.uleb128 0xe
 3946 01b6 3A       		.uleb128 0x3a
 3947 01b7 0B       		.uleb128 0xb
 3948 01b8 3B       		.uleb128 0x3b
 3949 01b9 05       		.uleb128 0x5
 3950 01ba 49       		.uleb128 0x49
 3951 01bb 13       		.uleb128 0x13
 3952 01bc 02       		.uleb128 0x2
 3953 01bd 18       		.uleb128 0x18
 3954 01be 00       		.byte	0
 3955 01bf 00       		.byte	0
 3956 01c0 22       		.uleb128 0x22
 3957 01c1 2E       		.uleb128 0x2e
 3958 01c2 01       		.byte	0x1
 3959 01c3 3F       		.uleb128 0x3f
 3960 01c4 19       		.uleb128 0x19
 3961 01c5 03       		.uleb128 0x3
 3962 01c6 0E       		.uleb128 0xe
 3963 01c7 3A       		.uleb128 0x3a
 3964 01c8 0B       		.uleb128 0xb
 3965 01c9 3B       		.uleb128 0x3b
 3966 01ca 05       		.uleb128 0x5
 3967 01cb 27       		.uleb128 0x27
 3968 01cc 19       		.uleb128 0x19
 3969 01cd 49       		.uleb128 0x49
 3970 01ce 13       		.uleb128 0x13
 3971 01cf 11       		.uleb128 0x11
 3972 01d0 01       		.uleb128 0x1
 3973 01d1 12       		.uleb128 0x12
 3974 01d2 06       		.uleb128 0x6
 3975 01d3 40       		.uleb128 0x40
 3976 01d4 18       		.uleb128 0x18
 3977 01d5 9642     		.uleb128 0x2116
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 123


 3978 01d7 19       		.uleb128 0x19
 3979 01d8 01       		.uleb128 0x1
 3980 01d9 13       		.uleb128 0x13
 3981 01da 00       		.byte	0
 3982 01db 00       		.byte	0
 3983 01dc 23       		.uleb128 0x23
 3984 01dd 34       		.uleb128 0x34
 3985 01de 00       		.byte	0
 3986 01df 03       		.uleb128 0x3
 3987 01e0 08       		.uleb128 0x8
 3988 01e1 3A       		.uleb128 0x3a
 3989 01e2 0B       		.uleb128 0xb
 3990 01e3 3B       		.uleb128 0x3b
 3991 01e4 05       		.uleb128 0x5
 3992 01e5 49       		.uleb128 0x49
 3993 01e6 13       		.uleb128 0x13
 3994 01e7 02       		.uleb128 0x2
 3995 01e8 17       		.uleb128 0x17
 3996 01e9 00       		.byte	0
 3997 01ea 00       		.byte	0
 3998 01eb 24       		.uleb128 0x24
 3999 01ec 34       		.uleb128 0x34
 4000 01ed 00       		.byte	0
 4001 01ee 03       		.uleb128 0x3
 4002 01ef 0E       		.uleb128 0xe
 4003 01f0 3A       		.uleb128 0x3a
 4004 01f1 0B       		.uleb128 0xb
 4005 01f2 3B       		.uleb128 0x3b
 4006 01f3 05       		.uleb128 0x5
 4007 01f4 49       		.uleb128 0x49
 4008 01f5 13       		.uleb128 0x13
 4009 01f6 3F       		.uleb128 0x3f
 4010 01f7 19       		.uleb128 0x19
 4011 01f8 3C       		.uleb128 0x3c
 4012 01f9 19       		.uleb128 0x19
 4013 01fa 00       		.byte	0
 4014 01fb 00       		.byte	0
 4015 01fc 25       		.uleb128 0x25
 4016 01fd 34       		.uleb128 0x34
 4017 01fe 00       		.byte	0
 4018 01ff 03       		.uleb128 0x3
 4019 0200 0E       		.uleb128 0xe
 4020 0201 3A       		.uleb128 0x3a
 4021 0202 0B       		.uleb128 0xb
 4022 0203 3B       		.uleb128 0x3b
 4023 0204 0B       		.uleb128 0xb
 4024 0205 49       		.uleb128 0x49
 4025 0206 13       		.uleb128 0x13
 4026 0207 3F       		.uleb128 0x3f
 4027 0208 19       		.uleb128 0x19
 4028 0209 02       		.uleb128 0x2
 4029 020a 18       		.uleb128 0x18
 4030 020b 00       		.byte	0
 4031 020c 00       		.byte	0
 4032 020d 26       		.uleb128 0x26
 4033 020e 2E       		.uleb128 0x2e
 4034 020f 00       		.byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 124


 4035 0210 3F       		.uleb128 0x3f
 4036 0211 19       		.uleb128 0x19
 4037 0212 3C       		.uleb128 0x3c
 4038 0213 19       		.uleb128 0x19
 4039 0214 6E       		.uleb128 0x6e
 4040 0215 0E       		.uleb128 0xe
 4041 0216 03       		.uleb128 0x3
 4042 0217 0E       		.uleb128 0xe
 4043 0218 3A       		.uleb128 0x3a
 4044 0219 0B       		.uleb128 0xb
 4045 021a 3B       		.uleb128 0x3b
 4046 021b 05       		.uleb128 0x5
 4047 021c 00       		.byte	0
 4048 021d 00       		.byte	0
 4049 021e 27       		.uleb128 0x27
 4050 021f 2E       		.uleb128 0x2e
 4051 0220 00       		.byte	0
 4052 0221 3F       		.uleb128 0x3f
 4053 0222 19       		.uleb128 0x19
 4054 0223 3C       		.uleb128 0x3c
 4055 0224 19       		.uleb128 0x19
 4056 0225 6E       		.uleb128 0x6e
 4057 0226 0E       		.uleb128 0xe
 4058 0227 03       		.uleb128 0x3
 4059 0228 0E       		.uleb128 0xe
 4060 0229 3A       		.uleb128 0x3a
 4061 022a 0B       		.uleb128 0xb
 4062 022b 3B       		.uleb128 0x3b
 4063 022c 0B       		.uleb128 0xb
 4064 022d 00       		.byte	0
 4065 022e 00       		.byte	0
 4066 022f 00       		.byte	0
 4067              		.section	.debug_loc,"",%progbits
 4068              	.Ldebug_loc0:
 4069              	.LLST0:
 4070 0000 0C000000 		.4byte	.LVL0
 4071 0004 16000000 		.4byte	.LVL1
 4072 0008 0100     		.2byte	0x1
 4073 000a 51       		.byte	0x51
 4074 000b 16000000 		.4byte	.LVL1
 4075 000f 2C000000 		.4byte	.LFE18
 4076 0013 0100     		.2byte	0x1
 4077 0015 53       		.byte	0x53
 4078 0016 00000000 		.4byte	0
 4079 001a 00000000 		.4byte	0
 4080              	.LLST1:
 4081 001e 06000000 		.4byte	.LVL5
 4082 0022 0A000000 		.4byte	.LVL6
 4083 0026 0100     		.2byte	0x1
 4084 0028 51       		.byte	0x51
 4085 0029 0A000000 		.4byte	.LVL6
 4086 002d 0F000000 		.4byte	.LVL7-1
 4087 0031 0100     		.2byte	0x1
 4088 0033 53       		.byte	0x53
 4089 0034 00000000 		.4byte	0
 4090 0038 00000000 		.4byte	0
 4091              	.LLST2:
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 125


 4092 003c 00000000 		.4byte	.LVL8
 4093 0040 37000000 		.4byte	.LVL10-1
 4094 0044 0100     		.2byte	0x1
 4095 0046 50       		.byte	0x50
 4096 0047 37000000 		.4byte	.LVL10-1
 4097 004b 40000000 		.4byte	.LFE2
 4098 004f 0400     		.2byte	0x4
 4099 0051 F3       		.byte	0xf3
 4100 0052 01       		.uleb128 0x1
 4101 0053 50       		.byte	0x50
 4102 0054 9F       		.byte	0x9f
 4103 0055 00000000 		.4byte	0
 4104 0059 00000000 		.4byte	0
 4105              	.LLST3:
 4106 005d 30000000 		.4byte	.LVL9
 4107 0061 3A000000 		.4byte	.LVL11
 4108 0065 0100     		.2byte	0x1
 4109 0067 54       		.byte	0x54
 4110 0068 3A000000 		.4byte	.LVL11
 4111 006c 40000000 		.4byte	.LFE2
 4112 0070 0100     		.2byte	0x1
 4113 0072 50       		.byte	0x50
 4114 0073 00000000 		.4byte	0
 4115 0077 00000000 		.4byte	0
 4116              	.LLST4:
 4117 007b 02000000 		.4byte	.LVL12
 4118 007f 22000000 		.4byte	.LVL14
 4119 0083 0200     		.2byte	0x2
 4120 0085 30       		.byte	0x30
 4121 0086 9F       		.byte	0x9f
 4122 0087 22000000 		.4byte	.LVL14
 4123 008b 2C000000 		.4byte	.LFE3
 4124 008f 0100     		.2byte	0x1
 4125 0091 50       		.byte	0x50
 4126 0092 00000000 		.4byte	0
 4127 0096 00000000 		.4byte	0
 4128              	.LLST5:
 4129 009a 02000000 		.4byte	.LVL15
 4130 009e 12000000 		.4byte	.LVL16
 4131 00a2 0300     		.2byte	0x3
 4132 00a4 09       		.byte	0x9
 4133 00a5 FF       		.byte	0xff
 4134 00a6 9F       		.byte	0x9f
 4135 00a7 12000000 		.4byte	.LVL16
 4136 00ab 14000000 		.4byte	.LVL17
 4137 00af 0100     		.2byte	0x1
 4138 00b1 50       		.byte	0x50
 4139 00b2 18000000 		.4byte	.LVL18
 4140 00b6 31000000 		.4byte	.LVL19-1
 4141 00ba 0100     		.2byte	0x1
 4142 00bc 50       		.byte	0x50
 4143 00bd 32000000 		.4byte	.LVL19
 4144 00c1 3C000000 		.4byte	.LVL21
 4145 00c5 0100     		.2byte	0x1
 4146 00c7 50       		.byte	0x50
 4147 00c8 3C000000 		.4byte	.LVL21
 4148 00cc 3E000000 		.4byte	.LVL22
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 126


 4149 00d0 0300     		.2byte	0x3
 4150 00d2 09       		.byte	0x9
 4151 00d3 FF       		.byte	0xff
 4152 00d4 9F       		.byte	0x9f
 4153 00d5 3E000000 		.4byte	.LVL22
 4154 00d9 48000000 		.4byte	.LFE4
 4155 00dd 0100     		.2byte	0x1
 4156 00df 50       		.byte	0x50
 4157 00e0 00000000 		.4byte	0
 4158 00e4 00000000 		.4byte	0
 4159              	.LLST6:
 4160 00e8 12000000 		.4byte	.LVL16
 4161 00ec 3C000000 		.4byte	.LVL21
 4162 00f0 0100     		.2byte	0x1
 4163 00f2 54       		.byte	0x54
 4164 00f3 00000000 		.4byte	0
 4165 00f7 00000000 		.4byte	0
 4166              	.LLST7:
 4167 00fb 00000000 		.4byte	.LVL23
 4168 00ff 06000000 		.4byte	.LVL24
 4169 0103 0100     		.2byte	0x1
 4170 0105 50       		.byte	0x50
 4171 0106 06000000 		.4byte	.LVL24
 4172 010a 9C000000 		.4byte	.LFE6
 4173 010e 0400     		.2byte	0x4
 4174 0110 F3       		.byte	0xf3
 4175 0111 01       		.uleb128 0x1
 4176 0112 50       		.byte	0x50
 4177 0113 9F       		.byte	0x9f
 4178 0114 00000000 		.4byte	0
 4179 0118 00000000 		.4byte	0
 4180              	.LLST8:
 4181 011c 00000000 		.4byte	.LVL23
 4182 0120 0E000000 		.4byte	.LVL25
 4183 0124 0100     		.2byte	0x1
 4184 0126 51       		.byte	0x51
 4185 0127 0E000000 		.4byte	.LVL25
 4186 012b 9C000000 		.4byte	.LFE6
 4187 012f 0400     		.2byte	0x4
 4188 0131 F3       		.byte	0xf3
 4189 0132 01       		.uleb128 0x1
 4190 0133 51       		.byte	0x51
 4191 0134 9F       		.byte	0x9f
 4192 0135 00000000 		.4byte	0
 4193 0139 00000000 		.4byte	0
 4194              	.LLST9:
 4195 013d 00000000 		.4byte	.LVL23
 4196 0141 16000000 		.4byte	.LVL27
 4197 0145 0100     		.2byte	0x1
 4198 0147 52       		.byte	0x52
 4199 0148 16000000 		.4byte	.LVL27
 4200 014c 94000000 		.4byte	.LVL39
 4201 0150 0100     		.2byte	0x1
 4202 0152 56       		.byte	0x56
 4203 0153 94000000 		.4byte	.LVL39
 4204 0157 9C000000 		.4byte	.LFE6
 4205 015b 0400     		.2byte	0x4
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 127


 4206 015d F3       		.byte	0xf3
 4207 015e 01       		.uleb128 0x1
 4208 015f 52       		.byte	0x52
 4209 0160 9F       		.byte	0x9f
 4210 0161 00000000 		.4byte	0
 4211 0165 00000000 		.4byte	0
 4212              	.LLST10:
 4213 0169 12000000 		.4byte	.LVL26
 4214 016d 16000000 		.4byte	.LVL27
 4215 0171 0200     		.2byte	0x2
 4216 0173 30       		.byte	0x30
 4217 0174 9F       		.byte	0x9f
 4218 0175 16000000 		.4byte	.LVL27
 4219 0179 94000000 		.4byte	.LVL38
 4220 017d 0100     		.2byte	0x1
 4221 017f 55       		.byte	0x55
 4222 0180 00000000 		.4byte	0
 4223 0184 00000000 		.4byte	0
 4224              	.LLST11:
 4225 0188 1A000000 		.4byte	.LVL28
 4226 018c 39000000 		.4byte	.LVL29-1
 4227 0190 0100     		.2byte	0x1
 4228 0192 50       		.byte	0x50
 4229 0193 4C000000 		.4byte	.LVL30
 4230 0197 6B000000 		.4byte	.LVL31-1
 4231 019b 0100     		.2byte	0x1
 4232 019d 50       		.byte	0x50
 4233 019e 72000000 		.4byte	.LVL32
 4234 01a2 83000000 		.4byte	.LVL33-1
 4235 01a6 0100     		.2byte	0x1
 4236 01a8 50       		.byte	0x50
 4237 01a9 00000000 		.4byte	0
 4238 01ad 00000000 		.4byte	0
 4239              	.LLST12:
 4240 01b1 12000000 		.4byte	.LVL26
 4241 01b5 94000000 		.4byte	.LVL37
 4242 01b9 0100     		.2byte	0x1
 4243 01bb 54       		.byte	0x54
 4244 01bc 00000000 		.4byte	0
 4245 01c0 00000000 		.4byte	0
 4246              	.LLST13:
 4247 01c4 00000000 		.4byte	.LVL40
 4248 01c8 13000000 		.4byte	.LVL41-1
 4249 01cc 0100     		.2byte	0x1
 4250 01ce 50       		.byte	0x50
 4251 01cf 13000000 		.4byte	.LVL41-1
 4252 01d3 3C000000 		.4byte	.LFE8
 4253 01d7 0400     		.2byte	0x4
 4254 01d9 F3       		.byte	0xf3
 4255 01da 01       		.uleb128 0x1
 4256 01db 50       		.byte	0x50
 4257 01dc 9F       		.byte	0x9f
 4258 01dd 00000000 		.4byte	0
 4259 01e1 00000000 		.4byte	0
 4260              	.LLST14:
 4261 01e5 08000000 		.4byte	.LVL44
 4262 01e9 40000000 		.4byte	.LFE9
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 128


 4263 01ed 0100     		.2byte	0x1
 4264 01ef 53       		.byte	0x53
 4265 01f0 00000000 		.4byte	0
 4266 01f4 00000000 		.4byte	0
 4267              	.LLST15:
 4268 01f8 02000000 		.4byte	.LVL43
 4269 01fc 08000000 		.4byte	.LVL44
 4270 0200 0200     		.2byte	0x2
 4271 0202 30       		.byte	0x30
 4272 0203 9F       		.byte	0x9f
 4273 0204 08000000 		.4byte	.LVL44
 4274 0208 40000000 		.4byte	.LFE9
 4275 020c 0100     		.2byte	0x1
 4276 020e 50       		.byte	0x50
 4277 020f 00000000 		.4byte	0
 4278 0213 00000000 		.4byte	0
 4279              	.LLST16:
 4280 0217 0C000000 		.4byte	.LVL45
 4281 021b 1E000000 		.4byte	.LVL48
 4282 021f 0100     		.2byte	0x1
 4283 0221 52       		.byte	0x52
 4284 0222 20000000 		.4byte	.LVL49
 4285 0226 26000000 		.4byte	.LVL50
 4286 022a 0100     		.2byte	0x1
 4287 022c 51       		.byte	0x51
 4288 022d 26000000 		.4byte	.LVL50
 4289 0231 36000000 		.4byte	.LVL54
 4290 0235 0100     		.2byte	0x1
 4291 0237 52       		.byte	0x52
 4292 0238 00000000 		.4byte	0
 4293 023c 00000000 		.4byte	0
 4294              	.LLST17:
 4295 0240 16000000 		.4byte	.LVL56
 4296 0244 29000000 		.4byte	.LVL57-1
 4297 0248 0100     		.2byte	0x1
 4298 024a 50       		.byte	0x50
 4299 024b 29000000 		.4byte	.LVL57-1
 4300 024f 2C000000 		.4byte	.LVL58
 4301 0253 0100     		.2byte	0x1
 4302 0255 54       		.byte	0x54
 4303 0256 2C000000 		.4byte	.LVL58
 4304 025a 54000000 		.4byte	.LVL59
 4305 025e 0100     		.2byte	0x1
 4306 0260 50       		.byte	0x50
 4307 0261 54000000 		.4byte	.LVL59
 4308 0265 58000000 		.4byte	.LVL60
 4309 0269 0200     		.2byte	0x2
 4310 026b 30       		.byte	0x30
 4311 026c 9F       		.byte	0x9f
 4312 026d 58000000 		.4byte	.LVL60
 4313 0271 6A000000 		.4byte	.LVL61
 4314 0275 0100     		.2byte	0x1
 4315 0277 50       		.byte	0x50
 4316 0278 6A000000 		.4byte	.LVL61
 4317 027c 6E000000 		.4byte	.LVL62
 4318 0280 0100     		.2byte	0x1
 4319 0282 54       		.byte	0x54
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 129


 4320 0283 00000000 		.4byte	0
 4321 0287 00000000 		.4byte	0
 4322              	.LLST18:
 4323 028b 00000000 		.4byte	.LVL63
 4324 028f 05000000 		.4byte	.LVL64-1
 4325 0293 0100     		.2byte	0x1
 4326 0295 50       		.byte	0x50
 4327 0296 05000000 		.4byte	.LVL64-1
 4328 029a 08000000 		.4byte	.LFE11
 4329 029e 0400     		.2byte	0x4
 4330 02a0 F3       		.byte	0xf3
 4331 02a1 01       		.uleb128 0x1
 4332 02a2 50       		.byte	0x50
 4333 02a3 9F       		.byte	0x9f
 4334 02a4 00000000 		.4byte	0
 4335 02a8 00000000 		.4byte	0
 4336              	.LLST19:
 4337 02ac 00000000 		.4byte	.LVL65
 4338 02b0 08000000 		.4byte	.LVL66
 4339 02b4 0100     		.2byte	0x1
 4340 02b6 50       		.byte	0x50
 4341 02b7 08000000 		.4byte	.LVL66
 4342 02bb 0A000000 		.4byte	.LVL67
 4343 02bf 0300     		.2byte	0x3
 4344 02c1 70       		.byte	0x70
 4345 02c2 01       		.sleb128 1
 4346 02c3 9F       		.byte	0x9f
 4347 02c4 0A000000 		.4byte	.LVL67
 4348 02c8 30000000 		.4byte	.LFE12
 4349 02cc 0400     		.2byte	0x4
 4350 02ce F3       		.byte	0xf3
 4351 02cf 01       		.uleb128 0x1
 4352 02d0 50       		.byte	0x50
 4353 02d1 9F       		.byte	0x9f
 4354 02d2 00000000 		.4byte	0
 4355 02d6 00000000 		.4byte	0
 4356              	.LLST20:
 4357 02da 00000000 		.4byte	.LVL68
 4358 02de 08000000 		.4byte	.LVL69
 4359 02e2 0100     		.2byte	0x1
 4360 02e4 50       		.byte	0x50
 4361 02e5 08000000 		.4byte	.LVL69
 4362 02e9 0A000000 		.4byte	.LVL70
 4363 02ed 0300     		.2byte	0x3
 4364 02ef 70       		.byte	0x70
 4365 02f0 01       		.sleb128 1
 4366 02f1 9F       		.byte	0x9f
 4367 02f2 0A000000 		.4byte	.LVL70
 4368 02f6 30000000 		.4byte	.LFE13
 4369 02fa 0400     		.2byte	0x4
 4370 02fc F3       		.byte	0xf3
 4371 02fd 01       		.uleb128 0x1
 4372 02fe 50       		.byte	0x50
 4373 02ff 9F       		.byte	0x9f
 4374 0300 00000000 		.4byte	0
 4375 0304 00000000 		.4byte	0
 4376              	.LLST21:
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 130


 4377 0308 00000000 		.4byte	.LVL71
 4378 030c 06000000 		.4byte	.LVL72
 4379 0310 0100     		.2byte	0x1
 4380 0312 50       		.byte	0x50
 4381 0313 06000000 		.4byte	.LVL72
 4382 0317 10000000 		.4byte	.LVL75
 4383 031b 0100     		.2byte	0x1
 4384 031d 54       		.byte	0x54
 4385 031e 10000000 		.4byte	.LVL75
 4386 0322 12000000 		.4byte	.LFE14
 4387 0326 0400     		.2byte	0x4
 4388 0328 F3       		.byte	0xf3
 4389 0329 01       		.uleb128 0x1
 4390 032a 50       		.byte	0x50
 4391 032b 9F       		.byte	0x9f
 4392 032c 00000000 		.4byte	0
 4393 0330 00000000 		.4byte	0
 4394              	.LLST22:
 4395 0334 00000000 		.4byte	.LVL71
 4396 0338 09000000 		.4byte	.LVL73-1
 4397 033c 0100     		.2byte	0x1
 4398 033e 51       		.byte	0x51
 4399 033f 09000000 		.4byte	.LVL73-1
 4400 0343 12000000 		.4byte	.LFE14
 4401 0347 0400     		.2byte	0x4
 4402 0349 F3       		.byte	0xf3
 4403 034a 01       		.uleb128 0x1
 4404 034b 51       		.byte	0x51
 4405 034c 9F       		.byte	0x9f
 4406 034d 00000000 		.4byte	0
 4407 0351 00000000 		.4byte	0
 4408              	.LLST23:
 4409 0355 00000000 		.4byte	.LVL76
 4410 0359 0A000000 		.4byte	.LVL78
 4411 035d 0100     		.2byte	0x1
 4412 035f 50       		.byte	0x50
 4413 0360 0A000000 		.4byte	.LVL78
 4414 0364 0C000000 		.4byte	.LVL79
 4415 0368 0100     		.2byte	0x1
 4416 036a 53       		.byte	0x53
 4417 036b 0C000000 		.4byte	.LVL79
 4418 036f 0E000000 		.4byte	.LVL80
 4419 0373 0100     		.2byte	0x1
 4420 0375 50       		.byte	0x50
 4421 0376 0E000000 		.4byte	.LVL80
 4422 037a 19000000 		.4byte	.LVL82-1
 4423 037e 0100     		.2byte	0x1
 4424 0380 53       		.byte	0x53
 4425 0381 19000000 		.4byte	.LVL82-1
 4426 0385 1C000000 		.4byte	.LFE15
 4427 0389 0400     		.2byte	0x4
 4428 038b F3       		.byte	0xf3
 4429 038c 01       		.uleb128 0x1
 4430 038d 50       		.byte	0x50
 4431 038e 9F       		.byte	0x9f
 4432 038f 00000000 		.4byte	0
 4433 0393 00000000 		.4byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 131


 4434              	.LLST24:
 4435 0397 04000000 		.4byte	.LVL77
 4436 039b 0E000000 		.4byte	.LVL80
 4437 039f 0200     		.2byte	0x2
 4438 03a1 30       		.byte	0x30
 4439 03a2 9F       		.byte	0x9f
 4440 03a3 0E000000 		.4byte	.LVL80
 4441 03a7 16000000 		.4byte	.LVL81
 4442 03ab 0100     		.2byte	0x1
 4443 03ad 50       		.byte	0x50
 4444 03ae 1A000000 		.4byte	.LVL82
 4445 03b2 1C000000 		.4byte	.LFE15
 4446 03b6 0100     		.2byte	0x1
 4447 03b8 50       		.byte	0x50
 4448 03b9 00000000 		.4byte	0
 4449 03bd 00000000 		.4byte	0
 4450              	.LLST25:
 4451 03c1 02000000 		.4byte	.LVL83
 4452 03c5 08000000 		.4byte	.LVL84
 4453 03c9 0200     		.2byte	0x2
 4454 03cb 30       		.byte	0x30
 4455 03cc 9F       		.byte	0x9f
 4456 03cd 08000000 		.4byte	.LVL84
 4457 03d1 18000000 		.4byte	.LVL89
 4458 03d5 0100     		.2byte	0x1
 4459 03d7 55       		.byte	0x55
 4460 03d8 18000000 		.4byte	.LVL89
 4461 03dc 1A000000 		.4byte	.LFE16
 4462 03e0 0100     		.2byte	0x1
 4463 03e2 50       		.byte	0x50
 4464 03e3 00000000 		.4byte	0
 4465 03e7 00000000 		.4byte	0
 4466              	.LLST26:
 4467 03eb 02000000 		.4byte	.LVL83
 4468 03ef 08000000 		.4byte	.LVL84
 4469 03f3 0200     		.2byte	0x2
 4470 03f5 30       		.byte	0x30
 4471 03f6 9F       		.byte	0x9f
 4472 03f7 08000000 		.4byte	.LVL84
 4473 03fb 18000000 		.4byte	.LVL88
 4474 03ff 0100     		.2byte	0x1
 4475 0401 54       		.byte	0x54
 4476 0402 00000000 		.4byte	0
 4477 0406 00000000 		.4byte	0
 4478              	.LLST27:
 4479 040a 02000000 		.4byte	.LVL90
 4480 040e 06000000 		.4byte	.LVL91
 4481 0412 0200     		.2byte	0x2
 4482 0414 30       		.byte	0x30
 4483 0415 9F       		.byte	0x9f
 4484 0416 06000000 		.4byte	.LVL91
 4485 041a 30000000 		.4byte	.LVL97
 4486 041e 0100     		.2byte	0x1
 4487 0420 55       		.byte	0x55
 4488 0421 00000000 		.4byte	0
 4489 0425 00000000 		.4byte	0
 4490              	.LLST28:
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 132


 4491 0429 0C000000 		.4byte	.LVL92
 4492 042d 10000000 		.4byte	.LVL93
 4493 0431 0200     		.2byte	0x2
 4494 0433 30       		.byte	0x30
 4495 0434 9F       		.byte	0x9f
 4496 0435 10000000 		.4byte	.LVL93
 4497 0439 2C000000 		.4byte	.LVL96
 4498 043d 0100     		.2byte	0x1
 4499 043f 54       		.byte	0x54
 4500 0440 00000000 		.4byte	0
 4501 0444 00000000 		.4byte	0
 4502              	.LLST29:
 4503 0448 0C000000 		.4byte	.LVL92
 4504 044c 2C000000 		.4byte	.LVL96
 4505 0450 0100     		.2byte	0x1
 4506 0452 56       		.byte	0x56
 4507 0453 00000000 		.4byte	0
 4508 0457 00000000 		.4byte	0
 4509              	.LLST30:
 4510 045b 00000000 		.4byte	.LVL98
 4511 045f 02000000 		.4byte	.LVL99
 4512 0463 0100     		.2byte	0x1
 4513 0465 50       		.byte	0x50
 4514 0466 02000000 		.4byte	.LVL99
 4515 046a 10000000 		.4byte	.LFE23
 4516 046e 0400     		.2byte	0x4
 4517 0470 F3       		.byte	0xf3
 4518 0471 01       		.uleb128 0x1
 4519 0472 50       		.byte	0x50
 4520 0473 9F       		.byte	0x9f
 4521 0474 00000000 		.4byte	0
 4522 0478 00000000 		.4byte	0
 4523              	.LLST31:
 4524 047c 00000000 		.4byte	.LVL102
 4525 0480 1C000000 		.4byte	.LVL105
 4526 0484 0100     		.2byte	0x1
 4527 0486 50       		.byte	0x50
 4528 0487 1C000000 		.4byte	.LVL105
 4529 048b 24000000 		.4byte	.LVL106
 4530 048f 0400     		.2byte	0x4
 4531 0491 F3       		.byte	0xf3
 4532 0492 01       		.uleb128 0x1
 4533 0493 50       		.byte	0x50
 4534 0494 9F       		.byte	0x9f
 4535 0495 24000000 		.4byte	.LVL106
 4536 0499 26000000 		.4byte	.LVL107
 4537 049d 0100     		.2byte	0x1
 4538 049f 50       		.byte	0x50
 4539 04a0 26000000 		.4byte	.LVL107
 4540 04a4 34000000 		.4byte	.LFE24
 4541 04a8 0400     		.2byte	0x4
 4542 04aa F3       		.byte	0xf3
 4543 04ab 01       		.uleb128 0x1
 4544 04ac 50       		.byte	0x50
 4545 04ad 9F       		.byte	0x9f
 4546 04ae 00000000 		.4byte	0
 4547 04b2 00000000 		.4byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 133


 4548              	.LLST32:
 4549 04b6 2A000000 		.4byte	.LVL108
 4550 04ba 2C000000 		.4byte	.LVL109
 4551 04be 0100     		.2byte	0x1
 4552 04c0 50       		.byte	0x50
 4553 04c1 00000000 		.4byte	0
 4554 04c5 00000000 		.4byte	0
 4555              	.LLST33:
 4556 04c9 02000000 		.4byte	.LVL103
 4557 04cd 08000000 		.4byte	.LVL104
 4558 04d1 0200     		.2byte	0x2
 4559 04d3 31       		.byte	0x31
 4560 04d4 9F       		.byte	0x9f
 4561 04d5 08000000 		.4byte	.LVL104
 4562 04d9 2C000000 		.4byte	.LVL110
 4563 04dd 0100     		.2byte	0x1
 4564 04df 54       		.byte	0x54
 4565 04e0 00000000 		.4byte	0
 4566 04e4 00000000 		.4byte	0
 4567              	.LLST34:
 4568 04e8 00000000 		.4byte	.LVL111
 4569 04ec 07000000 		.4byte	.LVL112-1
 4570 04f0 0100     		.2byte	0x1
 4571 04f2 50       		.byte	0x50
 4572 04f3 07000000 		.4byte	.LVL112-1
 4573 04f7 14000000 		.4byte	.LFE21
 4574 04fb 0400     		.2byte	0x4
 4575 04fd F3       		.byte	0xf3
 4576 04fe 01       		.uleb128 0x1
 4577 04ff 50       		.byte	0x50
 4578 0500 9F       		.byte	0x9f
 4579 0501 00000000 		.4byte	0
 4580 0505 00000000 		.4byte	0
 4581              	.LLST35:
 4582 0509 00000000 		.4byte	.LVL111
 4583 050d 07000000 		.4byte	.LVL112-1
 4584 0511 0100     		.2byte	0x1
 4585 0513 51       		.byte	0x51
 4586 0514 07000000 		.4byte	.LVL112-1
 4587 0518 12000000 		.4byte	.LVL115
 4588 051c 0100     		.2byte	0x1
 4589 051e 54       		.byte	0x54
 4590 051f 12000000 		.4byte	.LVL115
 4591 0523 14000000 		.4byte	.LFE21
 4592 0527 0400     		.2byte	0x4
 4593 0529 F3       		.byte	0xf3
 4594 052a 01       		.uleb128 0x1
 4595 052b 51       		.byte	0x51
 4596 052c 9F       		.byte	0x9f
 4597 052d 00000000 		.4byte	0
 4598 0531 00000000 		.4byte	0
 4599              	.LLST36:
 4600 0535 08000000 		.4byte	.LVL112
 4601 0539 0A000000 		.4byte	.LVL113
 4602 053d 0100     		.2byte	0x1
 4603 053f 50       		.byte	0x50
 4604 0540 00000000 		.4byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 134


 4605 0544 00000000 		.4byte	0
 4606              	.LLST37:
 4607 0548 04000000 		.4byte	.LVL116
 4608 054c 1C000000 		.4byte	.LVL118
 4609 0550 0200     		.2byte	0x2
 4610 0552 30       		.byte	0x30
 4611 0553 9F       		.byte	0x9f
 4612 0554 1C000000 		.4byte	.LVL118
 4613 0558 70000000 		.4byte	.LVL124
 4614 055c 0100     		.2byte	0x1
 4615 055e 56       		.byte	0x56
 4616 055f 72000000 		.4byte	.LVL125
 4617 0563 10010000 		.4byte	.LVL142
 4618 0567 0100     		.2byte	0x1
 4619 0569 56       		.byte	0x56
 4620 056a 10010000 		.4byte	.LVL142
 4621 056e 38010000 		.4byte	.LFE17
 4622 0572 0100     		.2byte	0x1
 4623 0574 50       		.byte	0x50
 4624 0575 00000000 		.4byte	0
 4625 0579 00000000 		.4byte	0
 4626              	.LLST38:
 4627 057d 16000000 		.4byte	.LVL117
 4628 0581 1C000000 		.4byte	.LVL118
 4629 0585 0200     		.2byte	0x2
 4630 0587 30       		.byte	0x30
 4631 0588 9F       		.byte	0x9f
 4632 0589 1C000000 		.4byte	.LVL118
 4633 058d A8000000 		.4byte	.LVL128
 4634 0591 0100     		.2byte	0x1
 4635 0593 55       		.byte	0x55
 4636 0594 A8000000 		.4byte	.LVL128
 4637 0598 EC000000 		.4byte	.LVL134
 4638 059c 0100     		.2byte	0x1
 4639 059e 54       		.byte	0x54
 4640 059f EE000000 		.4byte	.LVL135
 4641 05a3 10010000 		.4byte	.LVL141
 4642 05a7 0100     		.2byte	0x1
 4643 05a9 54       		.byte	0x54
 4644 05aa 00000000 		.4byte	0
 4645 05ae 00000000 		.4byte	0
 4646              	.LLST39:
 4647 05b2 04000000 		.4byte	.LVL116
 4648 05b6 1C000000 		.4byte	.LVL118
 4649 05ba 0200     		.2byte	0x2
 4650 05bc 30       		.byte	0x30
 4651 05bd 9F       		.byte	0x9f
 4652 05be 68000000 		.4byte	.LVL123
 4653 05c2 A0000000 		.4byte	.LVL127
 4654 05c6 0100     		.2byte	0x1
 4655 05c8 50       		.byte	0x50
 4656 05c9 00000000 		.4byte	0
 4657 05cd 00000000 		.4byte	0
 4658              	.LLST40:
 4659 05d1 24000000 		.4byte	.LVL119
 4660 05d5 A0000000 		.4byte	.LVL127
 4661 05d9 0100     		.2byte	0x1
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 135


 4662 05db 54       		.byte	0x54
 4663 05dc B0000000 		.4byte	.LVL129
 4664 05e0 E6000000 		.4byte	.LVL133
 4665 05e4 0100     		.2byte	0x1
 4666 05e6 55       		.byte	0x55
 4667 05e7 F6000000 		.4byte	.LVL136
 4668 05eb FB000000 		.4byte	.LVL137-1
 4669 05ef 0100     		.2byte	0x1
 4670 05f1 51       		.byte	0x51
 4671 05f2 00000000 		.4byte	0
 4672 05f6 00000000 		.4byte	0
 4673              	.LLST41:
 4674 05fa 02000000 		.4byte	.LVL143
 4675 05fe 06000000 		.4byte	.LVL144
 4676 0602 0200     		.2byte	0x2
 4677 0604 30       		.byte	0x30
 4678 0605 9F       		.byte	0x9f
 4679 0606 06000000 		.4byte	.LVL144
 4680 060a 1A000000 		.4byte	.LVL148
 4681 060e 0100     		.2byte	0x1
 4682 0610 54       		.byte	0x54
 4683 0611 00000000 		.4byte	0
 4684 0615 00000000 		.4byte	0
 4685              	.LLST42:
 4686 0619 0E000000 		.4byte	.LVL145
 4687 061d 13000000 		.4byte	.LVL146-1
 4688 0621 0100     		.2byte	0x1
 4689 0623 51       		.byte	0x51
 4690 0624 00000000 		.4byte	0
 4691 0628 00000000 		.4byte	0
 4692              		.section	.debug_aranges,"",%progbits
 4693 0000 D4000000 		.4byte	0xd4
 4694 0004 0200     		.2byte	0x2
 4695 0006 00000000 		.4byte	.Ldebug_info0
 4696 000a 04       		.byte	0x4
 4697 000b 00       		.byte	0
 4698 000c 0000     		.2byte	0
 4699 000e 0000     		.2byte	0
 4700 0010 00000000 		.4byte	.LFB18
 4701 0014 2C000000 		.4byte	.LFE18-.LFB18
 4702 0018 00000000 		.4byte	.LFB19
 4703 001c 08000000 		.4byte	.LFE19-.LFB19
 4704 0020 00000000 		.4byte	.LFB7
 4705 0024 1C000000 		.4byte	.LFE7-.LFB7
 4706 0028 00000000 		.4byte	.LFB1
 4707 002c 10000000 		.4byte	.LFE1-.LFB1
 4708 0030 00000000 		.4byte	.LFB2
 4709 0034 40000000 		.4byte	.LFE2-.LFB2
 4710 0038 00000000 		.4byte	.LFB3
 4711 003c 2C000000 		.4byte	.LFE3-.LFB3
 4712 0040 00000000 		.4byte	.LFB4
 4713 0044 48000000 		.4byte	.LFE4-.LFB4
 4714 0048 00000000 		.4byte	.LFB6
 4715 004c 9C000000 		.4byte	.LFE6-.LFB6
 4716 0050 00000000 		.4byte	.LFB8
 4717 0054 3C000000 		.4byte	.LFE8-.LFB8
 4718 0058 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 136


 4719 005c 40000000 		.4byte	.LFE9-.LFB9
 4720 0060 00000000 		.4byte	.LFB10
 4721 0064 78000000 		.4byte	.LFE10-.LFB10
 4722 0068 00000000 		.4byte	.LFB11
 4723 006c 08000000 		.4byte	.LFE11-.LFB11
 4724 0070 00000000 		.4byte	.LFB12
 4725 0074 30000000 		.4byte	.LFE12-.LFB12
 4726 0078 00000000 		.4byte	.LFB13
 4727 007c 30000000 		.4byte	.LFE13-.LFB13
 4728 0080 00000000 		.4byte	.LFB14
 4729 0084 12000000 		.4byte	.LFE14-.LFB14
 4730 0088 00000000 		.4byte	.LFB15
 4731 008c 1C000000 		.4byte	.LFE15-.LFB15
 4732 0090 00000000 		.4byte	.LFB16
 4733 0094 1A000000 		.4byte	.LFE16-.LFB16
 4734 0098 00000000 		.4byte	.LFB22
 4735 009c 38000000 		.4byte	.LFE22-.LFB22
 4736 00a0 00000000 		.4byte	.LFB23
 4737 00a4 10000000 		.4byte	.LFE23-.LFB23
 4738 00a8 00000000 		.4byte	.LFB24
 4739 00ac 34000000 		.4byte	.LFE24-.LFB24
 4740 00b0 00000000 		.4byte	.LFB21
 4741 00b4 14000000 		.4byte	.LFE21-.LFB21
 4742 00b8 00000000 		.4byte	.LFB17
 4743 00bc 38010000 		.4byte	.LFE17-.LFB17
 4744 00c0 00000000 		.4byte	.LFB20
 4745 00c4 20000000 		.4byte	.LFE20-.LFB20
 4746 00c8 00000000 		.4byte	.LFB5
 4747 00cc 1C000000 		.4byte	.LFE5-.LFB5
 4748 00d0 00000000 		.4byte	0
 4749 00d4 00000000 		.4byte	0
 4750              		.section	.debug_ranges,"",%progbits
 4751              	.Ldebug_ranges0:
 4752 0000 00000000 		.4byte	.LFB18
 4753 0004 2C000000 		.4byte	.LFE18
 4754 0008 00000000 		.4byte	.LFB19
 4755 000c 08000000 		.4byte	.LFE19
 4756 0010 00000000 		.4byte	.LFB7
 4757 0014 1C000000 		.4byte	.LFE7
 4758 0018 00000000 		.4byte	.LFB1
 4759 001c 10000000 		.4byte	.LFE1
 4760 0020 00000000 		.4byte	.LFB2
 4761 0024 40000000 		.4byte	.LFE2
 4762 0028 00000000 		.4byte	.LFB3
 4763 002c 2C000000 		.4byte	.LFE3
 4764 0030 00000000 		.4byte	.LFB4
 4765 0034 48000000 		.4byte	.LFE4
 4766 0038 00000000 		.4byte	.LFB6
 4767 003c 9C000000 		.4byte	.LFE6
 4768 0040 00000000 		.4byte	.LFB8
 4769 0044 3C000000 		.4byte	.LFE8
 4770 0048 00000000 		.4byte	.LFB9
 4771 004c 40000000 		.4byte	.LFE9
 4772 0050 00000000 		.4byte	.LFB10
 4773 0054 78000000 		.4byte	.LFE10
 4774 0058 00000000 		.4byte	.LFB11
 4775 005c 08000000 		.4byte	.LFE11
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 137


 4776 0060 00000000 		.4byte	.LFB12
 4777 0064 30000000 		.4byte	.LFE12
 4778 0068 00000000 		.4byte	.LFB13
 4779 006c 30000000 		.4byte	.LFE13
 4780 0070 00000000 		.4byte	.LFB14
 4781 0074 12000000 		.4byte	.LFE14
 4782 0078 00000000 		.4byte	.LFB15
 4783 007c 1C000000 		.4byte	.LFE15
 4784 0080 00000000 		.4byte	.LFB16
 4785 0084 1A000000 		.4byte	.LFE16
 4786 0088 00000000 		.4byte	.LFB22
 4787 008c 38000000 		.4byte	.LFE22
 4788 0090 00000000 		.4byte	.LFB23
 4789 0094 10000000 		.4byte	.LFE23
 4790 0098 00000000 		.4byte	.LFB24
 4791 009c 34000000 		.4byte	.LFE24
 4792 00a0 00000000 		.4byte	.LFB21
 4793 00a4 14000000 		.4byte	.LFE21
 4794 00a8 00000000 		.4byte	.LFB17
 4795 00ac 38010000 		.4byte	.LFE17
 4796 00b0 00000000 		.4byte	.LFB20
 4797 00b4 20000000 		.4byte	.LFE20
 4798 00b8 00000000 		.4byte	.LFB5
 4799 00bc 1C000000 		.4byte	.LFE5
 4800 00c0 00000000 		.4byte	0
 4801 00c4 00000000 		.4byte	0
 4802              		.section	.debug_line,"",%progbits
 4803              	.Ldebug_line0:
 4804 0000 57040000 		.section	.debug_str,"MS",%progbits,1
 4804      0200D600 
 4804      00000201 
 4804      FB0E0D00 
 4804      01010101 
 4805              	.LASF151:
 4806 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 4806      656E7365 
 4806      5F537343 
 4806      53444765 
 4806      74436F6C 
 4807              	.LASF125:
 4808 0022 73656E73 		.ascii	"sensorElement\000"
 4808      6F72456C 
 4808      656D656E 
 4808      7400
 4809              	.LASF121:
 4810 0030 7363616E 		.ascii	"scanStatus\000"
 4810      53746174 
 4810      757300
 4811              	.LASF115:
 4812 003b 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 4812      656E7365 
 4812      5F537343 
 4812      53444469 
 4812      7361626C 
 4813              	.LASF134:
 4814 0055 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 4814      656E7365 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 138


 4814      5F537353 
 4814      6574494F 
 4814      73496E44 
 4815              	.LASF171:
 4816 0075 43617053 		.ascii	"CapSense_widgetIndex\000"
 4816      656E7365 
 4816      5F776964 
 4816      67657449 
 4816      6E646578 
 4817              	.LASF84:
 4818 008a 736E7254 		.ascii	"snrTestWidgetId\000"
 4818      65737457 
 4818      69646765 
 4818      74496400 
 4819              	.LASF40:
 4820 009a 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 4820      656E7365 
 4820      5F554E44 
 4820      4546494E 
 4820      45445F45 
 4821              	.LASF8:
 4822 00af 756E7369 		.ascii	"unsigned int\000"
 4822      676E6564 
 4822      20696E74 
 4822      00
 4823              	.LASF75:
 4824 00bc 7363616E 		.ascii	"scanCounter\000"
 4824      436F756E 
 4824      74657200 
 4825              	.LASF73:
 4826 00c8 6877436C 		.ascii	"hwClock\000"
 4826      6F636B00 
 4827              	.LASF94:
 4828 00d0 6D61736B 		.ascii	"mask\000"
 4828      00
 4829              	.LASF167:
 4830 00d5 696E6974 		.ascii	"initStatus\000"
 4830      53746174 
 4830      757300
 4831              	.LASF136:
 4832 00e0 72656756 		.ascii	"regValue\000"
 4832      616C7565 
 4832      00
 4833              	.LASF129:
 4834 00e9 696E7465 		.ascii	"interruptState\000"
 4834      72727570 
 4834      74537461 
 4834      746500
 4835              	.LASF16:
 4836 00f8 72656738 		.ascii	"reg8\000"
 4836      00
 4837              	.LASF160:
 4838 00fd 6C667372 		.ascii	"lfsrScale\000"
 4838      5363616C 
 4838      6500
 4839              	.LASF23:
 4840 0107 69446163 		.ascii	"iDacGain\000"
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 139


 4840      4761696E 
 4840      00
 4841              	.LASF191:
 4842 0110 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 4842      7453656E 
 4842      73655F54 
 4842      756E6553 
 4842      656E7369 
 4843              	.LASF26:
 4844 012b 736E7343 		.ascii	"snsClkInputClock\000"
 4844      6C6B496E 
 4844      70757443 
 4844      6C6F636B 
 4844      00
 4845              	.LASF133:
 4846 013c 6D6F6465 		.ascii	"mode\000"
 4846      00
 4847              	.LASF195:
 4848 0141 43617053 		.ascii	"CapSense_IsBusy\000"
 4848      656E7365 
 4848      5F497342 
 4848      75737900 
 4849              	.LASF141:
 4850 0151 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 4850      656E7365 
 4850      5F537353 
 4850      65744D6F 
 4850      64436C6B 
 4851              	.LASF63:
 4852 0172 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 4852      656E7365 
 4852      5F52414D 
 4852      5F57445F 
 4852      4C495354 
 4853              	.LASF163:
 4854 018e 63705769 		.ascii	"cpWidget\000"
 4854      64676574 
 4854      00
 4855              	.LASF127:
 4856 0197 656C7464 		.ascii	"eltdNum\000"
 4856      4E756D00 
 4857              	.LASF153:
 4858 019f 70747257 		.ascii	"ptrWdgt\000"
 4858      64677400 
 4859              	.LASF158:
 4860 01a7 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 4860      656E7365 
 4860      5F537353 
 4860      65745769 
 4860      64676574 
 4861              	.LASF61:
 4862 01c7 646F776E 		.ascii	"down\000"
 4862      00
 4863              	.LASF135:
 4864 01cc 6C6F6F70 		.ascii	"loopIndex\000"
 4864      496E6465 
 4864      7800
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 140


 4865              	.LASF12:
 4866 01d6 666C6F61 		.ascii	"float\000"
 4866      7400
 4867              	.LASF97:
 4868 01dc 73686966 		.ascii	"shift\000"
 4868      7400
 4869              	.LASF148:
 4870 01e2 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 4870      656E7365 
 4870      5F537343 
 4870      6C656172 
 4870      43534453 
 4871              	.LASF181:
 4872 01fd 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 4872      656E7365 
 4872      5F435344 
 4872      53657475 
 4872      70576964 
 4873              	.LASF83:
 4874 0215 736E734C 		.ascii	"snsList\000"
 4874      69737400 
 4875              	.LASF7:
 4876 021d 6C6F6E67 		.ascii	"long long unsigned int\000"
 4876      206C6F6E 
 4876      6720756E 
 4876      7369676E 
 4876      65642069 
 4877              	.LASF172:
 4878 0234 43617053 		.ascii	"CapSense_sensorIndex\000"
 4878      656E7365 
 4878      5F73656E 
 4878      736F7249 
 4878      6E646578 
 4879              	.LASF98:
 4880 0249 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 4880      656E7365 
 4880      5F464C41 
 4880      53485F49 
 4880      4F5F5354 
 4881              	.LASF85:
 4882 0262 736E7254 		.ascii	"snrTestSensorId\000"
 4882      65737453 
 4882      656E736F 
 4882      72496400 
 4883              	.LASF108:
 4884 0272 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 4884      4E6F6973 
 4884      65456E76 
 4884      6C7000
 4885              	.LASF106:
 4886 0281 77646774 		.ascii	"wdgtType\000"
 4886      54797065 
 4886      00
 4887              	.LASF159:
 4888 028a 6C667372 		.ascii	"lfsrSize\000"
 4888      53697A65 
 4888      00
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 141


 4889              	.LASF192:
 4890 0293 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4890      43313120 
 4890      352E342E 
 4890      31203230 
 4890      31363036 
 4891 02c6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4891      20726576 
 4891      6973696F 
 4891      6E203233 
 4891      37373135 
 4892 02f9 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4892      66756E63 
 4892      74696F6E 
 4892      2D736563 
 4892      74696F6E 
 4893              	.LASF162:
 4894 0321 6175746F 		.ascii	"autoTuneStatus\000"
 4894      54756E65 
 4894      53746174 
 4894      757300
 4895              	.LASF81:
 4896 0330 6D6F6443 		.ascii	"modCsdClk\000"
 4896      7364436C 
 4896      6B00
 4897              	.LASF69:
 4898 033a 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 4898      656E7365 
 4898      5F52414D 
 4898      5F534E53 
 4898      5F535452 
 4899              	.LASF154:
 4900 0352 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 4900      656E7365 
 4900      5F537343 
 4900      53444361 
 4900      6C635072 
 4901              	.LASF27:
 4902 036c 63616C54 		.ascii	"calTarget\000"
 4902      61726765 
 4902      7400
 4903              	.LASF91:
 4904 0376 64725074 		.ascii	"drPtr\000"
 4904      7200
 4905              	.LASF142:
 4906 037c 6D6F6443 		.ascii	"modClk\000"
 4906      6C6B00
 4907              	.LASF29:
 4908 0383 73696750 		.ascii	"sigPFC\000"
 4908      464300
 4909              	.LASF50:
 4910 038a 68797374 		.ascii	"hysteresis\000"
 4910      65726573 
 4910      697300
 4911              	.LASF109:
 4912 0395 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 4912      656E7365 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 142


 4912      5F464C41 
 4912      53485F57 
 4912      445F5354 
 4913              	.LASF52:
 4914 03ae 6C6F7742 		.ascii	"lowBslnRst\000"
 4914      736C6E52 
 4914      737400
 4915              	.LASF105:
 4916 03b9 746F7461 		.ascii	"totalNumSns\000"
 4916      6C4E756D 
 4916      536E7300 
 4917              	.LASF39:
 4918 03c5 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 4918      5453454E 
 4918      53455F43 
 4918      53445F4E 
 4918      4F495345 
 4919              	.LASF164:
 4920 03ea 6175746F 		.ascii	"autoTuneConfig\000"
 4920      54756E65 
 4920      436F6E66 
 4920      696700
 4921              	.LASF48:
 4922 03f9 6E6F6973 		.ascii	"noiseTh\000"
 4922      65546800 
 4923              	.LASF14:
 4924 0401 63686172 		.ascii	"char\000"
 4924      00
 4925              	.LASF184:
 4926 0406 43794578 		.ascii	"CyExitCriticalSection\000"
 4926      69744372 
 4926      69746963 
 4926      616C5365 
 4926      6374696F 
 4927              	.LASF95:
 4928 041c 6873696F 		.ascii	"hsiomShift\000"
 4928      6D536869 
 4928      667400
 4929              	.LASF10:
 4930 0427 75696E74 		.ascii	"uint16\000"
 4930      313600
 4931              	.LASF62:
 4932 042e 63656E74 		.ascii	"center\000"
 4932      657200
 4933              	.LASF113:
 4934 0435 43617053 		.ascii	"CapSense_SsTrimIdacsSourcing\000"
 4934      656E7365 
 4934      5F537354 
 4934      72696D49 
 4934      64616373 
 4935              	.LASF46:
 4936 0452 7265736F 		.ascii	"resolution\000"
 4936      6C757469 
 4936      6F6E00
 4937              	.LASF76:
 4938 045d 73746174 		.ascii	"status\000"
 4938      757300
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 143


 4939              	.LASF145:
 4940 0464 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 4940      656E7365 
 4940      5F43616C 
 4940      69627261 
 4940      74655769 
 4941              	.LASF20:
 4942 047d 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 4942      656E7365 
 4942      5F4C4F57 
 4942      5F42534C 
 4942      4E5F5253 
 4943              	.LASF143:
 4944 0498 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 4944      656E7365 
 4944      5F537353 
 4944      6574536E 
 4944      73436C6F 
 4945              	.LASF45:
 4946 04b6 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 4946      656E7365 
 4946      5F53454E 
 4946      53455F4D 
 4946      4554484F 
 4947              	.LASF68:
 4948 04d1 69646163 		.ascii	"idacComp\000"
 4948      436F6D70 
 4948      00
 4949              	.LASF60:
 4950 04da 72696768 		.ascii	"right\000"
 4950      7400
 4951              	.LASF90:
 4952 04e0 70635074 		.ascii	"pcPtr\000"
 4952      7200
 4953              	.LASF6:
 4954 04e6 6C6F6E67 		.ascii	"long long int\000"
 4954      206C6F6E 
 4954      6720696E 
 4954      7400
 4955              	.LASF107:
 4956 04f4 6E756D43 		.ascii	"numCols\000"
 4956      6F6C7300 
 4957              	.LASF186:
 4958 04fc 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 4958      656E7365 
 4958      5F537343 
 4958      5344496E 
 4958      69746961 
 4959              	.LASF51:
 4960 0515 6F6E4465 		.ascii	"onDebounce\000"
 4960      626F756E 
 4960      636500
 4961              	.LASF140:
 4962 0520 61646472 		.ascii	"address\000"
 4962      65737300 
 4963              	.LASF146:
 4964 0528 63616C69 		.ascii	"calibrateStatus\000"
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 144


 4964      62726174 
 4964      65537461 
 4964      74757300 
 4965              	.LASF82:
 4966 0538 77646774 		.ascii	"wdgtList\000"
 4966      4C697374 
 4966      00
 4967              	.LASF147:
 4968 0541 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 4968      656E7365 
 4968      5F43616C 
 4968      69627261 
 4968      7465416C 
 4969              	.LASF111:
 4970 055e 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 4970      656E7365 
 4970      5F464C41 
 4970      53485F53 
 4970      54525543 
 4971              	.LASF120:
 4972 0574 43617053 		.ascii	"CapSense_Scan\000"
 4972      656E7365 
 4972      5F536361 
 4972      6E00
 4973              	.LASF168:
 4974 0582 43617053 		.ascii	"CapSense_dsRam\000"
 4974      656E7365 
 4974      5F647352 
 4974      616D00
 4975              	.LASF87:
 4976 0591 736E7254 		.ascii	"snrTestRawCount\000"
 4976      65737452 
 4976      6177436F 
 4976      756E7400 
 4977              	.LASF161:
 4978 05a1 43617053 		.ascii	"CapSense_SsAutoTune\000"
 4978      656E7365 
 4978      5F537341 
 4978      75746F54 
 4978      756E6500 
 4979              	.LASF49:
 4980 05b5 6E4E6F69 		.ascii	"nNoiseTh\000"
 4980      73655468 
 4980      00
 4981              	.LASF80:
 4982 05be 63736430 		.ascii	"csd0Config\000"
 4982      436F6E66 
 4982      696700
 4983              	.LASF18:
 4984 05c9 63796973 		.ascii	"cyisraddress\000"
 4984      72616464 
 4984      72657373 
 4984      00
 4985              	.LASF57:
 4986 05d6 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 4986      656E7365 
 4986      5F52414D 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 145


 4986      5F57445F 
 4986      42415345 
 4987              	.LASF89:
 4988 05f2 6873696F 		.ascii	"hsiomPtr\000"
 4988      6D507472 
 4988      00
 4989              	.LASF11:
 4990 05fb 75696E74 		.ascii	"uint32\000"
 4990      333200
 4991              	.LASF102:
 4992 0602 70747232 		.ascii	"ptr2FltrHistory\000"
 4992      466C7472 
 4992      48697374 
 4992      6F727900 
 4993              	.LASF177:
 4994 0612 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 4994      656E7365 
 4994      5F637572 
 4994      536E7349 
 4994      4F507472 
 4995              	.LASF30:
 4996 0627 69446163 		.ascii	"iDac\000"
 4996      00
 4997              	.LASF144:
 4998 062c 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 4998      656E7365 
 4998      5F537353 
 4998      6574436C 
 4998      6F636B44 
 4999              	.LASF28:
 5000 0648 70747253 		.ascii	"ptrSenseClk\000"
 5000      656E7365 
 5000      436C6B00 
 5001              	.LASF123:
 5002 0654 77646774 		.ascii	"wdgtIndex\000"
 5002      496E6465 
 5002      7800
 5003              	.LASF149:
 5004 065e 736E7349 		.ascii	"snsIndex\000"
 5004      6E646578 
 5004      00
 5005              	.LASF44:
 5006 0667 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 5006      656E7365 
 5006      5F53454E 
 5006      53455F4D 
 5006      4554484F 
 5007              	.LASF112:
 5008 0683 6C6F6E67 		.ascii	"long double\000"
 5008      20646F75 
 5008      626C6500 
 5009              	.LASF21:
 5010 068f 736E7343 		.ascii	"snsClkConstantR\000"
 5010      6C6B436F 
 5010      6E737461 
 5010      6E745200 
 5011              	.LASF17:
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 146


 5012 069f 72656733 		.ascii	"reg32\000"
 5012      3200
 5013              	.LASF86:
 5014 06a5 736E7254 		.ascii	"snrTestScanCounter\000"
 5014      65737453 
 5014      63616E43 
 5014      6F756E74 
 5014      657200
 5015              	.LASF71:
 5016 06b8 636F6E66 		.ascii	"configId\000"
 5016      69674964 
 5016      00
 5017              	.LASF101:
 5018 06c1 70747232 		.ascii	"ptr2SnsRam\000"
 5018      536E7352 
 5018      616D00
 5019              	.LASF166:
 5020 06cc 43617053 		.ascii	"CapSense_SsInitialize\000"
 5020      656E7365 
 5020      5F537349 
 5020      6E697469 
 5020      616C697A 
 5021              	.LASF178:
 5022 06e2 43617053 		.ascii	"CapSense_calibratedIdac\000"
 5022      656E7365 
 5022      5F63616C 
 5022      69627261 
 5022      74656449 
 5023              	.LASF79:
 5024 06fa 736E7353 		.ascii	"snsStatus\000"
 5024      74617475 
 5024      7300
 5025              	.LASF138:
 5026 0704 706F7374 		.ascii	"postScanStatus\000"
 5026      5363616E 
 5026      53746174 
 5026      757300
 5027              	.LASF55:
 5028 0713 736E7343 		.ascii	"snsClkSource\000"
 5028      6C6B536F 
 5028      75726365 
 5028      00
 5029              	.LASF180:
 5030 0720 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 5030      656E7365 
 5030      5F537343 
 5030      5344456C 
 5030      65637472 
 5031              	.LASF139:
 5032 073d 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 5032      656E7365 
 5032      5F537349 
 5032      7372496E 
 5032      69746961 
 5033              	.LASF2:
 5034 0756 73686F72 		.ascii	"short int\000"
 5034      7420696E 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 147


 5034      7400
 5035              	.LASF88:
 5036 0760 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 5036      656E7365 
 5036      5F52414D 
 5036      5F535452 
 5036      55435400 
 5037              	.LASF189:
 5038 0774 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 5038      656E7365 
 5038      5F435344 
 5038      44697363 
 5038      6F6E6E65 
 5039              	.LASF4:
 5040 078e 6C6F6E67 		.ascii	"long int\000"
 5040      20696E74 
 5040      00
 5041              	.LASF77:
 5042 0797 77646774 		.ascii	"wdgtEnable\000"
 5042      456E6162 
 5042      6C6500
 5043              	.LASF66:
 5044 07a2 64696666 		.ascii	"diff\000"
 5044      00
 5045              	.LASF74:
 5046 07a7 74756E65 		.ascii	"tunerCmd\000"
 5046      72436D64 
 5046      00
 5047              	.LASF42:
 5048 07b0 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 5048      656E7365 
 5048      5F53454E 
 5048      53455F4D 
 5048      4554484F 
 5049              	.LASF92:
 5050 07cc 70735074 		.ascii	"psPtr\000"
 5050      7200
 5051              	.LASF119:
 5052 07d2 43617053 		.ascii	"CapSense_SetupWidget\000"
 5052      656E7365 
 5052      5F536574 
 5052      75705769 
 5052      64676574 
 5053              	.LASF188:
 5054 07e7 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 5054      656E7365 
 5054      5F435344 
 5054      43616C69 
 5054      62726174 
 5055              	.LASF59:
 5056 0803 6C656674 		.ascii	"left\000"
 5056      00
 5057              	.LASF179:
 5058 0808 43617053 		.ascii	"CapSense_calibratedRawcount\000"
 5058      656E7365 
 5058      5F63616C 
 5058      69627261 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 148


 5058      74656452 
 5059              	.LASF169:
 5060 0824 43617053 		.ascii	"CapSense_dsFlash\000"
 5060      656E7365 
 5060      5F647346 
 5060      6C617368 
 5060      00
 5061              	.LASF24:
 5062 0835 66696E67 		.ascii	"fingerCap\000"
 5062      65724361 
 5062      7000
 5063              	.LASF78:
 5064 083f 77646774 		.ascii	"wdgtStatus\000"
 5064      53746174 
 5064      757300
 5065              	.LASF190:
 5066 084a 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 5066      7453656E 
 5066      73655F54 
 5066      756E6550 
 5066      72657363 
 5067              	.LASF193:
 5068 0864 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 5068      72617465 
 5068      645F536F 
 5068      75726365 
 5068      5C50536F 
 5069              	.LASF185:
 5070 088e 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 5070      656E7365 
 5070      5F435344 
 5070      436F6E6E 
 5070      65637453 
 5071              	.LASF41:
 5072 08a5 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 5072      656E7365 
 5072      5F53454E 
 5072      53455F4D 
 5072      4554484F 
 5073              	.LASF175:
 5074 08c1 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 5074      656E7365 
 5074      5F637572 
 5074      72656E74 
 5074      53656E73 
 5075              	.LASF156:
 5076 08dd 70727353 		.ascii	"prsSize\000"
 5076      697A6500 
 5077              	.LASF56:
 5078 08e5 73697A65 		.ascii	"sizetype\000"
 5078      74797065 
 5078      00
 5079              	.LASF96:
 5080 08ee 64725368 		.ascii	"drShift\000"
 5080      69667400 
 5081              	.LASF5:
 5082 08f6 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 149


 5082      20756E73 
 5082      69676E65 
 5082      6420696E 
 5082      7400
 5083              	.LASF152:
 5084 0908 72657456 		.ascii	"retVal\000"
 5084      616C00
 5085              	.LASF22:
 5086 090f 76526566 		.ascii	"vRef\000"
 5086      00
 5087              	.LASF53:
 5088 0914 69646163 		.ascii	"idacMod\000"
 5088      4D6F6400 
 5089              	.LASF187:
 5090 091c 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 5090      656E7365 
 5090      5F495352 
 5090      5F537461 
 5090      72744578 
 5091              	.LASF103:
 5092 0931 70747232 		.ascii	"ptr2DebounceArr\000"
 5092      4465626F 
 5092      756E6365 
 5092      41727200 
 5093              	.LASF114:
 5094 0941 43617053 		.ascii	"CapSense_SsTrimIdacs\000"
 5094      656E7365 
 5094      5F537354 
 5094      72696D49 
 5094      64616373 
 5095              	.LASF47:
 5096 0956 66696E67 		.ascii	"fingerTh\000"
 5096      65725468 
 5096      00
 5097              	.LASF65:
 5098 095f 62736C6E 		.ascii	"bslnExt\000"
 5098      45787400 
 5099              	.LASF58:
 5100 0967 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 5100      656E7365 
 5100      5F52414D 
 5100      5F57445F 
 5100      42555454 
 5101              	.LASF15:
 5102 0985 63797374 		.ascii	"cystatus\000"
 5102      61747573 
 5102      00
 5103              	.LASF1:
 5104 098e 756E7369 		.ascii	"unsigned char\000"
 5104      676E6564 
 5104      20636861 
 5104      7200
 5105              	.LASF116:
 5106 099c 7472696D 		.ascii	"trimValue\000"
 5106      56616C75 
 5106      6500
 5107              	.LASF131:
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 150


 5108 09a6 43617053 		.ascii	"CapSense_SetPinState\000"
 5108      656E7365 
 5108      5F536574 
 5108      50696E53 
 5108      74617465 
 5109              	.LASF104:
 5110 09bb 73746174 		.ascii	"staticConfig\000"
 5110      6963436F 
 5110      6E666967 
 5110      00
 5111              	.LASF25:
 5112 09c8 73656E73 		.ascii	"sensorCap\000"
 5112      6F724361 
 5112      7000
 5113              	.LASF130:
 5114 09d2 696F5074 		.ascii	"ioPtr\000"
 5114      7200
 5115              	.LASF100:
 5116 09d8 70747232 		.ascii	"ptr2WdgtRam\000"
 5116      57646774 
 5116      52616D00 
 5117              	.LASF19:
 5118 09e4 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 5118      656E7365 
 5118      5F544852 
 5118      4553484F 
 5118      4C445F54 
 5119              	.LASF182:
 5120 09fc 43617053 		.ascii	"CapSense_CSDScan\000"
 5120      656E7365 
 5120      5F435344 
 5120      5363616E 
 5120      00
 5121              	.LASF43:
 5122 0a0d 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 5122      656E7365 
 5122      5F53454E 
 5122      53455F4D 
 5122      4554484F 
 5123              	.LASF126:
 5124 0a2a 73746174 		.ascii	"state\000"
 5124      6500
 5125              	.LASF194:
 5126 0a30 443A5C6A 		.ascii	"D:\\job\\MCU\\Others\\PSoC_train\\Workspace02\\Cap_"
 5126      6F625C4D 
 5126      43555C4F 
 5126      74686572 
 5126      735C5053 
 5127 0a5d 53656E73 		.ascii	"Sense.cydsn\000"
 5127      652E6379 
 5127      64736E00 
 5128              	.LASF128:
 5129 0a69 656C7464 		.ascii	"eltdIndex\000"
 5129      496E6465 
 5129      7800
 5130              	.LASF122:
 5131 0a73 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 151


 5131      656E7365 
 5131      5F536361 
 5131      6E416C6C 
 5131      57696467 
 5132              	.LASF93:
 5133 0a8b 6873696F 		.ascii	"hsiomMask\000"
 5133      6D4D6173 
 5133      6B00
 5134              	.LASF150:
 5135 0a95 63757253 		.ascii	"curSnsIOPtr\000"
 5135      6E73494F 
 5135      50747200 
 5136              	.LASF54:
 5137 0aa1 736E7343 		.ascii	"snsClk\000"
 5137      6C6B00
 5138              	.LASF132:
 5139 0aa8 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 5139      656E7365 
 5139      5F537353 
 5139      77697463 
 5139      6853656E 
 5140              	.LASF183:
 5141 0ac5 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5141      74657243 
 5141      72697469 
 5141      63616C53 
 5141      65637469 
 5142              	.LASF174:
 5143 0adc 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 5143      656E7365 
 5143      5F637572 
 5143      52616D53 
 5143      6E735074 
 5144              	.LASF0:
 5145 0af2 7369676E 		.ascii	"signed char\000"
 5145      65642063 
 5145      68617200 
 5146              	.LASF176:
 5147 0afe 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 5147      656E7365 
 5147      5F736361 
 5147      6E467265 
 5147      71496E64 
 5148              	.LASF64:
 5149 0b15 62736C6E 		.ascii	"bsln\000"
 5149      00
 5150              	.LASF3:
 5151 0b1a 73686F72 		.ascii	"short unsigned int\000"
 5151      7420756E 
 5151      7369676E 
 5151      65642069 
 5151      6E7400
 5152              	.LASF31:
 5153 0b2d 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 5153      5F54554E 
 5153      455F434F 
 5153      4E464947 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 152


 5153      5F545950 
 5154              	.LASF170:
 5155 0b43 43617053 		.ascii	"CapSense_ioList\000"
 5155      656E7365 
 5155      5F696F4C 
 5155      69737400 
 5156              	.LASF137:
 5157 0b53 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 5157      656E7365 
 5157      5F537350 
 5157      6F737441 
 5157      6C6C5769 
 5158              	.LASF99:
 5159 0b71 70747232 		.ascii	"ptr2SnsFlash\000"
 5159      536E7346 
 5159      6C617368 
 5159      00
 5160              	.LASF117:
 5161 0b7e 6E657752 		.ascii	"newRegValue\000"
 5161      65675661 
 5161      6C756500 
 5162              	.LASF9:
 5163 0b8a 75696E74 		.ascii	"uint8\000"
 5163      3800
 5164              	.LASF13:
 5165 0b90 646F7562 		.ascii	"double\000"
 5165      6C6500
 5166              	.LASF67:
 5167 0b97 6E656742 		.ascii	"negBslnRstCnt\000"
 5167      736C6E52 
 5167      7374436E 
 5167      7400
 5168              	.LASF32:
 5169 0ba5 70617261 		.ascii	"param0\000"
 5169      6D3000
 5170              	.LASF33:
 5171 0bac 70617261 		.ascii	"param1\000"
 5171      6D3100
 5172              	.LASF34:
 5173 0bb3 70617261 		.ascii	"param2\000"
 5173      6D3200
 5174              	.LASF35:
 5175 0bba 70617261 		.ascii	"param3\000"
 5175      6D3300
 5176              	.LASF36:
 5177 0bc1 70617261 		.ascii	"param4\000"
 5177      6D3400
 5178              	.LASF37:
 5179 0bc8 70617261 		.ascii	"param5\000"
 5179      6D3500
 5180              	.LASF38:
 5181 0bcf 70617261 		.ascii	"param6\000"
 5181      6D3600
 5182              	.LASF155:
 5183 0bd6 736E7343 		.ascii	"snsClkDivider\000"
 5183      6C6B4469 
 5183      76696465 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccKlwJsa.s 			page 153


 5183      7200
 5184              	.LASF157:
 5185 0be4 6D6F6443 		.ascii	"modClkDivider\000"
 5185      6C6B4469 
 5185      76696465 
 5185      7200
 5186              	.LASF72:
 5187 0bf2 64657669 		.ascii	"deviceId\000"
 5187      63654964 
 5187      00
 5188              	.LASF118:
 5189 0bfb 77696467 		.ascii	"widgetStatus\000"
 5189      65745374 
 5189      61747573 
 5189      00
 5190              	.LASF124:
 5191 0c08 77696467 		.ascii	"widgetId\000"
 5191      65744964 
 5191      00
 5192              	.LASF173:
 5193 0c11 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5193      656E7365 
 5193      5F726571 
 5193      75657374 
 5193      5363616E 
 5194              	.LASF165:
 5195 0c2f 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 5195      656E7365 
 5195      5F537349 
 5195      6E697469 
 5195      616C697A 
 5196              	.LASF70:
 5197 0c53 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5197      656E7365 
 5197      5F52414D 
 5197      5F534E53 
 5197      5F4C4953 
 5198              	.LASF110:
 5199 0c70 77646774 		.ascii	"wdgtArray\000"
 5199      41727261 
 5199      7900
 5200              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
