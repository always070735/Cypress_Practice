ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	UART_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_Init, %function
  25              	UART_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\UART.c"
   1:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC4/UART.c **** * Version 2.50
   4:Generated_Source\PSoC4/UART.c **** *
   5:Generated_Source\PSoC4/UART.c **** * Description:
   6:Generated_Source\PSoC4/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC4/UART.c **** *
   8:Generated_Source\PSoC4/UART.c **** * Note:
   9:Generated_Source\PSoC4/UART.c **** *
  10:Generated_Source\PSoC4/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC4/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC4/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC4/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC4/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC4/UART.c **** 
  17:Generated_Source\PSoC4/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC4/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC4/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC4/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC4/UART.c **** 
  22:Generated_Source\PSoC4/UART.c **** 
  23:Generated_Source\PSoC4/UART.c **** /***************************************
  24:Generated_Source\PSoC4/UART.c **** * Global data allocation
  25:Generated_Source\PSoC4/UART.c **** ***************************************/
  26:Generated_Source\PSoC4/UART.c **** 
  27:Generated_Source\PSoC4/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC4/UART.c **** 
  29:Generated_Source\PSoC4/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 2


  31:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC4/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC4/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC4/UART.c **** 
  35:Generated_Source\PSoC4/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC4/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC4/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC4/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC4/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC4/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC4/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC4/UART.c **** 
  48:Generated_Source\PSoC4/UART.c **** 
  49:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC4/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC4/UART.c **** *
  53:Generated_Source\PSoC4/UART.c **** * Summary:
  54:Generated_Source\PSoC4/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC4/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC4/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC4/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC4/UART.c **** *
  59:Generated_Source\PSoC4/UART.c **** * Parameters:
  60:Generated_Source\PSoC4/UART.c **** *  None.
  61:Generated_Source\PSoC4/UART.c **** *
  62:Generated_Source\PSoC4/UART.c **** * Return:
  63:Generated_Source\PSoC4/UART.c **** *  None.
  64:Generated_Source\PSoC4/UART.c **** *
  65:Generated_Source\PSoC4/UART.c **** * Global variables:
  66:Generated_Source\PSoC4/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC4/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC4/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC4/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC4/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC4/UART.c **** *
  72:Generated_Source\PSoC4/UART.c **** * Reentrant:
  73:Generated_Source\PSoC4/UART.c **** *  No.
  74:Generated_Source\PSoC4/UART.c **** *
  75:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC4/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC4/UART.c **** {
  78:Generated_Source\PSoC4/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC4/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC4/UART.c ****     {
  81:Generated_Source\PSoC4/UART.c ****         UART_Init();
  82:Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC4/UART.c ****     }
  84:Generated_Source\PSoC4/UART.c **** 
  85:Generated_Source\PSoC4/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC4/UART.c **** }
  87:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 3


  88:Generated_Source\PSoC4/UART.c **** 
  89:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC4/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC4/UART.c **** *
  93:Generated_Source\PSoC4/UART.c **** * Summary:
  94:Generated_Source\PSoC4/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC4/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC4/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC4/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC4/UART.c **** *
  99:Generated_Source\PSoC4/UART.c **** * Parameters:
 100:Generated_Source\PSoC4/UART.c **** *  None.
 101:Generated_Source\PSoC4/UART.c **** *
 102:Generated_Source\PSoC4/UART.c **** * Return:
 103:Generated_Source\PSoC4/UART.c **** *  None.
 104:Generated_Source\PSoC4/UART.c **** *
 105:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC4/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC4/UART.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC4/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC4/UART.c **** 
 110:Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC4/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC4/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC4/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC4/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC4/UART.c **** 
 117:Generated_Source\PSoC4/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC4/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC4/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC4/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC4/UART.c **** 
 123:Generated_Source\PSoC4/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
 125:Generated_Source\PSoC4/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
 127:Generated_Source\PSoC4/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC4/UART.c **** 
 129:Generated_Source\PSoC4/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC4/UART.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC4/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:Generated_Source\PSoC4/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC4/UART.c **** 
 136:Generated_Source\PSoC4/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC4/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC4/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  33              		.loc 1 138 0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 4


  34 0000 0622     		movs	r2, #6
  35 0002 044B     		ldr	r3, .L2
  36 0004 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC4/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  37              		.loc 1 139 0
  38 0006 4132     		adds	r2, r2, #65
  39 0008 034B     		ldr	r3, .L2+4
  40 000a 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC4/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC4/UART.c ****         #else
 142:Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC4/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC4/UART.c **** 
 146:Generated_Source\PSoC4/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC4/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC4/UART.c ****         #else
 150:Generated_Source\PSoC4/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
  41              		.loc 1 150 0
  42 000c 0022     		movs	r2, #0
  43 000e 034B     		ldr	r3, .L2+8
  44 0010 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC4/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC4/UART.c **** 
 153:Generated_Source\PSoC4/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC4/UART.c **** 
 155:Generated_Source\PSoC4/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC4/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC4/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC4/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC4/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC4/UART.c **** }
  45              		.loc 1 160 0
  46              		@ sp needed
  47 0012 7047     		bx	lr
  48              	.L3:
  49              		.align	2
  50              	.L2:
  51 0014 26000F40 		.word	1074724902
  52 0018 36000F40 		.word	1074724918
  53 001c 87000F40 		.word	1074724999
  54              		.cfi_endproc
  55              	.LFE2:
  56              		.size	UART_Init, .-UART_Init
  57              		.section	.text.UART_Enable,"ax",%progbits
  58              		.align	2
  59              		.global	UART_Enable
  60              		.code	16
  61              		.thumb_func
  62              		.type	UART_Enable, %function
  63              	UART_Enable:
  64              	.LFB3:
 161:Generated_Source\PSoC4/UART.c **** 
 162:Generated_Source\PSoC4/UART.c **** 
 163:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Enable
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 5


 165:Generated_Source\PSoC4/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC4/UART.c **** *
 167:Generated_Source\PSoC4/UART.c **** * Summary:
 168:Generated_Source\PSoC4/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC4/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC4/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC4/UART.c **** *  operation.
 172:Generated_Source\PSoC4/UART.c **** 
 173:Generated_Source\PSoC4/UART.c **** * Parameters:
 174:Generated_Source\PSoC4/UART.c **** *  None.
 175:Generated_Source\PSoC4/UART.c **** *
 176:Generated_Source\PSoC4/UART.c **** * Return:
 177:Generated_Source\PSoC4/UART.c **** *  None.
 178:Generated_Source\PSoC4/UART.c **** *
 179:Generated_Source\PSoC4/UART.c **** * Global Variables:
 180:Generated_Source\PSoC4/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC4/UART.c **** *
 182:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC4/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC4/UART.c **** {
  65              		.loc 1 184 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 10B5     		push	{r4, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
 185:Generated_Source\PSoC4/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC4/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  73              		.loc 1 186 0
  74 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  75              	.LVL0:
  76 0006 0400     		movs	r4, r0
  77              	.LVL1:
 187:Generated_Source\PSoC4/UART.c **** 
 188:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC4/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 191:Generated_Source\PSoC4/UART.c **** 
 192:Generated_Source\PSoC4/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 194:Generated_Source\PSoC4/UART.c **** 
 195:Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC4/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC4/UART.c **** 
 198:Generated_Source\PSoC4/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC4/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC4/UART.c **** 
 204:Generated_Source\PSoC4/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC4/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC4/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 6


 209:Generated_Source\PSoC4/UART.c **** 
 210:Generated_Source\PSoC4/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
  78              		.loc 1 211 0
  79 0008 064A     		ldr	r2, .L5
  80 000a 1178     		ldrb	r1, [r2]
  81 000c 1023     		movs	r3, #16
  82 000e 0B43     		orrs	r3, r1
  83 0010 DBB2     		uxtb	r3, r3
  84 0012 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC4/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
 215:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC4/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC4/UART.c **** 
 218:Generated_Source\PSoC4/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC4/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
  85              		.loc 1 219 0
  86 0014 FF20     		movs	r0, #255
  87 0016 FFF7FEFF 		bl	UART_IntClock_StartEx
  88              	.LVL2:
 220:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC4/UART.c **** 
 222:Generated_Source\PSoC4/UART.c ****     CyExitCriticalSection(enableInterrupts);
  89              		.loc 1 222 0
  90 001a 2000     		movs	r0, r4
  91 001c FFF7FEFF 		bl	CyExitCriticalSection
  92              	.LVL3:
 223:Generated_Source\PSoC4/UART.c **** }
  93              		.loc 1 223 0
  94              		@ sp needed
  95              	.LVL4:
  96 0020 10BD     		pop	{r4, pc}
  97              	.L6:
  98 0022 C046     		.align	2
  99              	.L5:
 100 0024 97000F40 		.word	1074725015
 101              		.cfi_endproc
 102              	.LFE3:
 103              		.size	UART_Enable, .-UART_Enable
 104              		.section	.text.UART_Start,"ax",%progbits
 105              		.align	2
 106              		.global	UART_Start
 107              		.code	16
 108              		.thumb_func
 109              		.type	UART_Start, %function
 110              	UART_Start:
 111              	.LFB1:
  77:Generated_Source\PSoC4/UART.c ****     /* If not initialized then initialize all required hardware and software */
 112              		.loc 1 77 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 7


 119              		.cfi_offset 14, -4
  79:Generated_Source\PSoC4/UART.c ****     {
 120              		.loc 1 79 0
 121 0002 064B     		ldr	r3, .L9
 122 0004 1B78     		ldrb	r3, [r3]
 123 0006 002B     		cmp	r3, #0
 124 0008 04D1     		bne	.L8
  81:Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u;
 125              		.loc 1 81 0
 126 000a FFF7FEFF 		bl	UART_Init
 127              	.LVL5:
  82:Generated_Source\PSoC4/UART.c ****     }
 128              		.loc 1 82 0
 129 000e 0122     		movs	r2, #1
 130 0010 024B     		ldr	r3, .L9
 131 0012 1A70     		strb	r2, [r3]
 132              	.L8:
  85:Generated_Source\PSoC4/UART.c **** }
 133              		.loc 1 85 0
 134 0014 FFF7FEFF 		bl	UART_Enable
 135              	.LVL6:
  86:Generated_Source\PSoC4/UART.c **** 
 136              		.loc 1 86 0
 137              		@ sp needed
 138 0018 10BD     		pop	{r4, pc}
 139              	.L10:
 140 001a C046     		.align	2
 141              	.L9:
 142 001c 00000000 		.word	.LANCHOR0
 143              		.cfi_endproc
 144              	.LFE1:
 145              		.size	UART_Start, .-UART_Start
 146              		.section	.text.UART_Stop,"ax",%progbits
 147              		.align	2
 148              		.global	UART_Stop
 149              		.code	16
 150              		.thumb_func
 151              		.type	UART_Stop, %function
 152              	UART_Stop:
 153              	.LFB4:
 224:Generated_Source\PSoC4/UART.c **** 
 225:Generated_Source\PSoC4/UART.c **** 
 226:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC4/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC4/UART.c **** *
 230:Generated_Source\PSoC4/UART.c **** * Summary:
 231:Generated_Source\PSoC4/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC4/UART.c **** *
 233:Generated_Source\PSoC4/UART.c **** * Parameters:
 234:Generated_Source\PSoC4/UART.c **** *  None.
 235:Generated_Source\PSoC4/UART.c **** *
 236:Generated_Source\PSoC4/UART.c **** * Return:
 237:Generated_Source\PSoC4/UART.c **** *  None.
 238:Generated_Source\PSoC4/UART.c **** *
 239:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC4/UART.c **** void UART_Stop(void) 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 8


 241:Generated_Source\PSoC4/UART.c **** {
 154              		.loc 1 241 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158 0000 10B5     		push	{r4, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 242:Generated_Source\PSoC4/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC4/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 162              		.loc 1 243 0
 163 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 164              	.LVL7:
 165 0006 0400     		movs	r4, r0
 166              	.LVL8:
 244:Generated_Source\PSoC4/UART.c **** 
 245:Generated_Source\PSoC4/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC4/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 248:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC4/UART.c **** 
 250:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC4/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC4/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC4/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC4/UART.c **** 
 256:Generated_Source\PSoC4/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC4/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 167              		.loc 1 257 0
 168 0008 FFF7FEFF 		bl	UART_IntClock_Stop
 169              	.LVL9:
 258:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC4/UART.c **** 
 260:Generated_Source\PSoC4/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 263:Generated_Source\PSoC4/UART.c **** 
 264:Generated_Source\PSoC4/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC4/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC4/UART.c **** 
 269:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 170              		.loc 1 270 0
 171 000c 044A     		ldr	r2, .L12
 172 000e 1378     		ldrb	r3, [r2]
 173 0010 1021     		movs	r1, #16
 174 0012 8B43     		bics	r3, r1
 175 0014 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC4/UART.c **** 
 272:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_ENABLED) */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 9


 276:Generated_Source\PSoC4/UART.c **** 
 277:Generated_Source\PSoC4/UART.c ****     CyExitCriticalSection(enableInterrupts);
 176              		.loc 1 277 0
 177 0016 2000     		movs	r0, r4
 178 0018 FFF7FEFF 		bl	CyExitCriticalSection
 179              	.LVL10:
 278:Generated_Source\PSoC4/UART.c **** }
 180              		.loc 1 278 0
 181              		@ sp needed
 182              	.LVL11:
 183 001c 10BD     		pop	{r4, pc}
 184              	.L13:
 185 001e C046     		.align	2
 186              	.L12:
 187 0020 97000F40 		.word	1074725015
 188              		.cfi_endproc
 189              	.LFE4:
 190              		.size	UART_Stop, .-UART_Stop
 191              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 192              		.align	2
 193              		.global	UART_ReadControlRegister
 194              		.code	16
 195              		.thumb_func
 196              		.type	UART_ReadControlRegister, %function
 197              	UART_ReadControlRegister:
 198              	.LFB5:
 279:Generated_Source\PSoC4/UART.c **** 
 280:Generated_Source\PSoC4/UART.c **** 
 281:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC4/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC4/UART.c **** *
 285:Generated_Source\PSoC4/UART.c **** * Summary:
 286:Generated_Source\PSoC4/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC4/UART.c **** *
 288:Generated_Source\PSoC4/UART.c **** * Parameters:
 289:Generated_Source\PSoC4/UART.c **** *  None.
 290:Generated_Source\PSoC4/UART.c **** *
 291:Generated_Source\PSoC4/UART.c **** * Return:
 292:Generated_Source\PSoC4/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC4/UART.c **** *
 294:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC4/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC4/UART.c **** {
 199              		.loc 1 296 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 297:Generated_Source\PSoC4/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC4/UART.c ****         return(0u);
 299:Generated_Source\PSoC4/UART.c ****     #else
 300:Generated_Source\PSoC4/UART.c ****         return(UART_CONTROL_REG);
 301:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC4/UART.c **** }
 204              		.loc 1 302 0
 205 0000 0020     		movs	r0, #0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 10


 206              		@ sp needed
 207 0002 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE5:
 210              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 211              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 212              		.align	2
 213              		.global	UART_WriteControlRegister
 214              		.code	16
 215              		.thumb_func
 216              		.type	UART_WriteControlRegister, %function
 217              	UART_WriteControlRegister:
 218              	.LFB6:
 303:Generated_Source\PSoC4/UART.c **** 
 304:Generated_Source\PSoC4/UART.c **** 
 305:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC4/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC4/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC4/UART.c **** *
 309:Generated_Source\PSoC4/UART.c **** * Summary:
 310:Generated_Source\PSoC4/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC4/UART.c **** *
 312:Generated_Source\PSoC4/UART.c **** * Parameters:
 313:Generated_Source\PSoC4/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC4/UART.c **** *
 315:Generated_Source\PSoC4/UART.c **** * Return:
 316:Generated_Source\PSoC4/UART.c **** *  None.
 317:Generated_Source\PSoC4/UART.c **** *
 318:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC4/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC4/UART.c **** {
 219              		.loc 1 320 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224              	.LVL12:
 321:Generated_Source\PSoC4/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC4/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC4/UART.c ****         {
 324:Generated_Source\PSoC4/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC4/UART.c ****         }
 326:Generated_Source\PSoC4/UART.c ****     #else
 327:Generated_Source\PSoC4/UART.c ****        UART_CONTROL_REG = control;
 328:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC4/UART.c **** }
 225              		.loc 1 329 0
 226              		@ sp needed
 227 0000 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE6:
 230              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 231 0002 C046     		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 232              		.align	2
 233              		.global	UART_SetTxInterruptMode
 234              		.code	16
 235              		.thumb_func
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 11


 236              		.type	UART_SetTxInterruptMode, %function
 237              	UART_SetTxInterruptMode:
 238              	.LFB7:
 330:Generated_Source\PSoC4/UART.c **** 
 331:Generated_Source\PSoC4/UART.c **** 
 332:Generated_Source\PSoC4/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC4/UART.c ****     *
 337:Generated_Source\PSoC4/UART.c ****     * Summary:
 338:Generated_Source\PSoC4/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC4/UART.c ****     *
 340:Generated_Source\PSoC4/UART.c ****     * Parameters:
 341:Generated_Source\PSoC4/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC4/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC4/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC4/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC4/UART.c ****     *
 352:Generated_Source\PSoC4/UART.c ****     * Return:
 353:Generated_Source\PSoC4/UART.c ****     *  None.
 354:Generated_Source\PSoC4/UART.c ****     *
 355:Generated_Source\PSoC4/UART.c ****     * Theory:
 356:Generated_Source\PSoC4/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC4/UART.c ****     *
 358:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC4/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC4/UART.c ****     {
 361:Generated_Source\PSoC4/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 362:Generated_Source\PSoC4/UART.c ****     }
 363:Generated_Source\PSoC4/UART.c **** 
 364:Generated_Source\PSoC4/UART.c **** 
 365:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC4/UART.c ****     *
 369:Generated_Source\PSoC4/UART.c ****     * Summary:
 370:Generated_Source\PSoC4/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC4/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC4/UART.c ****     *
 373:Generated_Source\PSoC4/UART.c ****     * Parameters:
 374:Generated_Source\PSoC4/UART.c ****     *  None.
 375:Generated_Source\PSoC4/UART.c ****     *
 376:Generated_Source\PSoC4/UART.c ****     * Return:
 377:Generated_Source\PSoC4/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC4/UART.c ****     *
 379:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC4/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC4/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 12


 384:Generated_Source\PSoC4/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC4/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC4/UART.c ****     *
 388:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC4/UART.c ****     *  No.
 390:Generated_Source\PSoC4/UART.c ****     *
 391:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC4/UART.c ****     {
 394:Generated_Source\PSoC4/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC4/UART.c **** 
 396:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC4/UART.c **** 
 398:Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC4/UART.c **** 
 401:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC4/UART.c **** 
 404:Generated_Source\PSoC4/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC4/UART.c **** 
 407:Generated_Source\PSoC4/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC4/UART.c ****         {
 409:Generated_Source\PSoC4/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC4/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC4/UART.c **** 
 412:Generated_Source\PSoC4/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC4/UART.c ****             {
 414:Generated_Source\PSoC4/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC4/UART.c ****             }
 416:Generated_Source\PSoC4/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC4/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC4/UART.c **** 
 419:Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC4/UART.c ****             {
 421:Generated_Source\PSoC4/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC4/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC4/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC4/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC4/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC4/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC4/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC4/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC4/UART.c ****                             */
 430:Generated_Source\PSoC4/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC4/UART.c ****                         }
 432:Generated_Source\PSoC4/UART.c ****                     #else
 433:Generated_Source\PSoC4/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC4/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC4/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC4/UART.c ****             }
 437:Generated_Source\PSoC4/UART.c ****         }
 438:Generated_Source\PSoC4/UART.c ****         else
 439:Generated_Source\PSoC4/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC4/UART.c ****             rxData = UART_RXDATA_REG;
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 13


 441:Generated_Source\PSoC4/UART.c ****         }
 442:Generated_Source\PSoC4/UART.c **** 
 443:Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC4/UART.c **** 
 445:Generated_Source\PSoC4/UART.c ****     #else
 446:Generated_Source\PSoC4/UART.c **** 
 447:Generated_Source\PSoC4/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC4/UART.c ****         rxData = UART_RXDATA_REG;
 449:Generated_Source\PSoC4/UART.c **** 
 450:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC4/UART.c **** 
 452:Generated_Source\PSoC4/UART.c ****         return(rxData);
 453:Generated_Source\PSoC4/UART.c ****     }
 454:Generated_Source\PSoC4/UART.c **** 
 455:Generated_Source\PSoC4/UART.c **** 
 456:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC4/UART.c ****     *
 460:Generated_Source\PSoC4/UART.c ****     * Summary:
 461:Generated_Source\PSoC4/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC4/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC4/UART.c ****     *
 464:Generated_Source\PSoC4/UART.c ****     * Parameters:
 465:Generated_Source\PSoC4/UART.c ****     *  None.
 466:Generated_Source\PSoC4/UART.c ****     *
 467:Generated_Source\PSoC4/UART.c ****     * Return:
 468:Generated_Source\PSoC4/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC4/UART.c ****     *
 470:Generated_Source\PSoC4/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC4/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC4/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC4/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC4/UART.c ****     *  register read.
 475:Generated_Source\PSoC4/UART.c ****     *
 476:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC4/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC4/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC4/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC4/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC4/UART.c ****     *   bits.
 483:Generated_Source\PSoC4/UART.c ****     *
 484:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC4/UART.c ****     {
 487:Generated_Source\PSoC4/UART.c ****         uint8 status;
 488:Generated_Source\PSoC4/UART.c **** 
 489:Generated_Source\PSoC4/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 490:Generated_Source\PSoC4/UART.c **** 
 491:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC4/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC4/UART.c ****         {
 494:Generated_Source\PSoC4/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC4/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC4/UART.c ****         }
 497:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 14


 498:Generated_Source\PSoC4/UART.c **** 
 499:Generated_Source\PSoC4/UART.c ****         return(status);
 500:Generated_Source\PSoC4/UART.c ****     }
 501:Generated_Source\PSoC4/UART.c **** 
 502:Generated_Source\PSoC4/UART.c **** 
 503:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC4/UART.c ****     *
 507:Generated_Source\PSoC4/UART.c ****     * Summary:
 508:Generated_Source\PSoC4/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC4/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC4/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC4/UART.c ****     *
 512:Generated_Source\PSoC4/UART.c ****     * Parameters:
 513:Generated_Source\PSoC4/UART.c ****     *  None.
 514:Generated_Source\PSoC4/UART.c ****     *
 515:Generated_Source\PSoC4/UART.c ****     * Return:
 516:Generated_Source\PSoC4/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC4/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC4/UART.c ****     *
 519:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC4/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC4/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC4/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC4/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC4/UART.c ****     *
 528:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC4/UART.c ****     *  No.
 530:Generated_Source\PSoC4/UART.c ****     *
 531:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC4/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC4/UART.c ****     {
 534:Generated_Source\PSoC4/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC4/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC4/UART.c **** 
 537:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC4/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC4/UART.c **** 
 541:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 543:Generated_Source\PSoC4/UART.c **** 
 544:Generated_Source\PSoC4/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC4/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC4/UART.c **** 
 547:Generated_Source\PSoC4/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC4/UART.c ****         {
 549:Generated_Source\PSoC4/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC4/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC4/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC4/UART.c ****             {
 553:Generated_Source\PSoC4/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC4/UART.c ****             }
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 15


 555:Generated_Source\PSoC4/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC4/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC4/UART.c **** 
 558:Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC4/UART.c ****             {
 560:Generated_Source\PSoC4/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC4/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC4/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC4/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC4/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC4/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC4/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC4/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC4/UART.c ****                             */
 569:Generated_Source\PSoC4/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC4/UART.c ****                         }
 571:Generated_Source\PSoC4/UART.c ****                     #else
 572:Generated_Source\PSoC4/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC4/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC4/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC4/UART.c ****             }
 576:Generated_Source\PSoC4/UART.c **** 
 577:Generated_Source\PSoC4/UART.c ****         }
 578:Generated_Source\PSoC4/UART.c ****         else
 579:Generated_Source\PSoC4/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC4/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC4/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC4/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC4/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC4/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC4/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC4/UART.c ****                 {
 587:Generated_Source\PSoC4/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC4/UART.c ****                 }
 589:Generated_Source\PSoC4/UART.c ****             }
 590:Generated_Source\PSoC4/UART.c ****         }
 591:Generated_Source\PSoC4/UART.c **** 
 592:Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC4/UART.c **** 
 594:Generated_Source\PSoC4/UART.c ****     #else
 595:Generated_Source\PSoC4/UART.c **** 
 596:Generated_Source\PSoC4/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 597:Generated_Source\PSoC4/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC4/UART.c ****         {
 599:Generated_Source\PSoC4/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC4/UART.c ****             rxData = UART_RXDATA_REG;
 601:Generated_Source\PSoC4/UART.c **** 
 602:Generated_Source\PSoC4/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC4/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC4/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC4/UART.c ****             {
 606:Generated_Source\PSoC4/UART.c ****                 rxData = 0u;
 607:Generated_Source\PSoC4/UART.c ****             }
 608:Generated_Source\PSoC4/UART.c ****         }
 609:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC4/UART.c **** 
 611:Generated_Source\PSoC4/UART.c ****         return(rxData);
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 16


 612:Generated_Source\PSoC4/UART.c ****     }
 613:Generated_Source\PSoC4/UART.c **** 
 614:Generated_Source\PSoC4/UART.c **** 
 615:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC4/UART.c ****     *
 619:Generated_Source\PSoC4/UART.c ****     * Summary:
 620:Generated_Source\PSoC4/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC4/UART.c ****     *  condition.
 622:Generated_Source\PSoC4/UART.c ****     *
 623:Generated_Source\PSoC4/UART.c ****     * Parameters:
 624:Generated_Source\PSoC4/UART.c ****     *  None.
 625:Generated_Source\PSoC4/UART.c ****     *
 626:Generated_Source\PSoC4/UART.c ****     * Return:
 627:Generated_Source\PSoC4/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC4/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC4/UART.c ****     *
 630:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC4/UART.c ****     *  No.
 632:Generated_Source\PSoC4/UART.c ****     *
 633:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC4/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC4/UART.c ****     {
 636:Generated_Source\PSoC4/UART.c ****         
 637:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC4/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC4/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC4/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC4/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC4/UART.c ****     #else
 646:Generated_Source\PSoC4/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 647:Generated_Source\PSoC4/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC4/UART.c ****         
 649:Generated_Source\PSoC4/UART.c ****     }
 650:Generated_Source\PSoC4/UART.c **** 
 651:Generated_Source\PSoC4/UART.c **** 
 652:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC4/UART.c ****     *
 656:Generated_Source\PSoC4/UART.c ****     * Summary:
 657:Generated_Source\PSoC4/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC4/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC4/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC4/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC4/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC4/UART.c ****     *    account.
 663:Generated_Source\PSoC4/UART.c ****     *
 664:Generated_Source\PSoC4/UART.c ****     * Parameters:
 665:Generated_Source\PSoC4/UART.c ****     *  None.
 666:Generated_Source\PSoC4/UART.c ****     *
 667:Generated_Source\PSoC4/UART.c ****     * Return:
 668:Generated_Source\PSoC4/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 17


 669:Generated_Source\PSoC4/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC4/UART.c ****     *
 671:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC4/UART.c ****     *
 676:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC4/UART.c ****     *  No.
 678:Generated_Source\PSoC4/UART.c ****     *
 679:Generated_Source\PSoC4/UART.c ****     * Theory:
 680:Generated_Source\PSoC4/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC4/UART.c ****     *
 682:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC4/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC4/UART.c ****                                                             
 685:Generated_Source\PSoC4/UART.c ****     {
 686:Generated_Source\PSoC4/UART.c ****         uint8 size;
 687:Generated_Source\PSoC4/UART.c **** 
 688:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC4/UART.c **** 
 690:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC4/UART.c **** 
 693:Generated_Source\PSoC4/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC4/UART.c ****         {
 695:Generated_Source\PSoC4/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC4/UART.c ****             {
 697:Generated_Source\PSoC4/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC4/UART.c ****             }
 699:Generated_Source\PSoC4/UART.c ****             else
 700:Generated_Source\PSoC4/UART.c ****             {
 701:Generated_Source\PSoC4/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC4/UART.c ****             }
 703:Generated_Source\PSoC4/UART.c ****         }
 704:Generated_Source\PSoC4/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC4/UART.c ****         {
 706:Generated_Source\PSoC4/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC4/UART.c ****         }
 708:Generated_Source\PSoC4/UART.c ****         else
 709:Generated_Source\PSoC4/UART.c ****         {
 710:Generated_Source\PSoC4/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC4/UART.c ****         }
 712:Generated_Source\PSoC4/UART.c **** 
 713:Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC4/UART.c **** 
 715:Generated_Source\PSoC4/UART.c ****     #else
 716:Generated_Source\PSoC4/UART.c **** 
 717:Generated_Source\PSoC4/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC4/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC4/UART.c **** 
 720:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC4/UART.c **** 
 722:Generated_Source\PSoC4/UART.c ****         return(size);
 723:Generated_Source\PSoC4/UART.c ****     }
 724:Generated_Source\PSoC4/UART.c **** 
 725:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 18


 726:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC4/UART.c ****     *
 730:Generated_Source\PSoC4/UART.c ****     * Summary:
 731:Generated_Source\PSoC4/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC4/UART.c ****     *
 733:Generated_Source\PSoC4/UART.c ****     * Parameters:
 734:Generated_Source\PSoC4/UART.c ****     *  None.
 735:Generated_Source\PSoC4/UART.c ****     *
 736:Generated_Source\PSoC4/UART.c ****     * Return:
 737:Generated_Source\PSoC4/UART.c ****     *  None.
 738:Generated_Source\PSoC4/UART.c ****     *
 739:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC4/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC4/UART.c ****     *
 745:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC4/UART.c ****     *  No.
 747:Generated_Source\PSoC4/UART.c ****     *
 748:Generated_Source\PSoC4/UART.c ****     * Theory:
 749:Generated_Source\PSoC4/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC4/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC4/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC4/UART.c ****     *
 753:Generated_Source\PSoC4/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC4/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC4/UART.c ****     *
 756:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC4/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC4/UART.c ****     {
 759:Generated_Source\PSoC4/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC4/UART.c **** 
 761:Generated_Source\PSoC4/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC4/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 763:Generated_Source\PSoC4/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 764:Generated_Source\PSoC4/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 765:Generated_Source\PSoC4/UART.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC4/UART.c **** 
 767:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC4/UART.c **** 
 769:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC4/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC4/UART.c **** 
 772:Generated_Source\PSoC4/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC4/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC4/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC4/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC4/UART.c **** 
 777:Generated_Source\PSoC4/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC4/UART.c **** 
 779:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC4/UART.c **** 
 781:Generated_Source\PSoC4/UART.c ****     }
 782:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 19


 783:Generated_Source\PSoC4/UART.c **** 
 784:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC4/UART.c ****     *
 788:Generated_Source\PSoC4/UART.c ****     * Summary:
 789:Generated_Source\PSoC4/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC4/UART.c ****     *  UART.
 791:Generated_Source\PSoC4/UART.c ****     *
 792:Generated_Source\PSoC4/UART.c ****     * Parameters:
 793:Generated_Source\PSoC4/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC4/UART.c ****     *                                               detection
 796:Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC4/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC4/UART.c ****     *                                               detection
 800:Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC4/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC4/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC4/UART.c ****     *
 804:Generated_Source\PSoC4/UART.c ****     * Return:
 805:Generated_Source\PSoC4/UART.c ****     *  None.
 806:Generated_Source\PSoC4/UART.c ****     *
 807:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC4/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC4/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC4/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC4/UART.c ****     *
 812:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC4/UART.c ****                                                         
 815:Generated_Source\PSoC4/UART.c ****     {
 816:Generated_Source\PSoC4/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC4/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC4/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC4/UART.c ****                 {
 820:Generated_Source\PSoC4/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC4/UART.c ****                 }
 822:Generated_Source\PSoC4/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC4/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC4/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC4/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC4/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC4/UART.c **** 
 828:Generated_Source\PSoC4/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC4/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC4/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC4/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC4/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC4/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC4/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC4/UART.c ****             {
 837:Generated_Source\PSoC4/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC4/UART.c ****             }
 839:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 20


 840:Generated_Source\PSoC4/UART.c ****     }
 841:Generated_Source\PSoC4/UART.c **** 
 842:Generated_Source\PSoC4/UART.c **** 
 843:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC4/UART.c ****     *
 847:Generated_Source\PSoC4/UART.c ****     * Summary:
 848:Generated_Source\PSoC4/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC4/UART.c ****     *
 850:Generated_Source\PSoC4/UART.c ****     * Parameters:
 851:Generated_Source\PSoC4/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC4/UART.c ****     *
 853:Generated_Source\PSoC4/UART.c ****     * Return:
 854:Generated_Source\PSoC4/UART.c ****     *  None.
 855:Generated_Source\PSoC4/UART.c ****     *
 856:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC4/UART.c ****     {
 859:Generated_Source\PSoC4/UART.c ****         UART_RXADDRESS1_REG = address;
 860:Generated_Source\PSoC4/UART.c ****     }
 861:Generated_Source\PSoC4/UART.c **** 
 862:Generated_Source\PSoC4/UART.c **** 
 863:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 866:Generated_Source\PSoC4/UART.c ****     *
 867:Generated_Source\PSoC4/UART.c ****     * Summary:
 868:Generated_Source\PSoC4/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC4/UART.c ****     *
 870:Generated_Source\PSoC4/UART.c ****     * Parameters:
 871:Generated_Source\PSoC4/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC4/UART.c ****     *
 873:Generated_Source\PSoC4/UART.c ****     * Return:
 874:Generated_Source\PSoC4/UART.c ****     *  None.
 875:Generated_Source\PSoC4/UART.c ****     *
 876:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC4/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC4/UART.c ****     {
 879:Generated_Source\PSoC4/UART.c ****         UART_RXADDRESS2_REG = address;
 880:Generated_Source\PSoC4/UART.c ****     }
 881:Generated_Source\PSoC4/UART.c **** 
 882:Generated_Source\PSoC4/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC4/UART.c **** 
 884:Generated_Source\PSoC4/UART.c **** 
 885:Generated_Source\PSoC4/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC4/UART.c ****     *
 890:Generated_Source\PSoC4/UART.c ****     * Summary:
 891:Generated_Source\PSoC4/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC4/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC4/UART.c ****     *
 894:Generated_Source\PSoC4/UART.c ****     * Parameters:
 895:Generated_Source\PSoC4/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 21


 897:Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC4/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC4/UART.c ****     *
 901:Generated_Source\PSoC4/UART.c ****     * Return:
 902:Generated_Source\PSoC4/UART.c ****     *  None.
 903:Generated_Source\PSoC4/UART.c ****     *
 904:Generated_Source\PSoC4/UART.c ****     * Theory:
 905:Generated_Source\PSoC4/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC4/UART.c ****     *
 907:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC4/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC4/UART.c ****     {
 239              		.loc 1 909 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 244              	.LVL13:
 910:Generated_Source\PSoC4/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 245              		.loc 1 910 0
 246 0000 014B     		ldr	r3, .L17
 247 0002 1870     		strb	r0, [r3]
 911:Generated_Source\PSoC4/UART.c ****     }
 248              		.loc 1 911 0
 249              		@ sp needed
 250 0004 7047     		bx	lr
 251              	.L18:
 252 0006 C046     		.align	2
 253              	.L17:
 254 0008 87000F40 		.word	1074724999
 255              		.cfi_endproc
 256              	.LFE7:
 257              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 258              		.section	.text.UART_WriteTxData,"ax",%progbits
 259              		.align	2
 260              		.global	UART_WriteTxData
 261              		.code	16
 262              		.thumb_func
 263              		.type	UART_WriteTxData, %function
 264              	UART_WriteTxData:
 265              	.LFB8:
 912:Generated_Source\PSoC4/UART.c **** 
 913:Generated_Source\PSoC4/UART.c **** 
 914:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC4/UART.c ****     *
 918:Generated_Source\PSoC4/UART.c ****     * Summary:
 919:Generated_Source\PSoC4/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC4/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC4/UART.c ****     *  separately.
 922:Generated_Source\PSoC4/UART.c ****     *
 923:Generated_Source\PSoC4/UART.c ****     * Parameters:
 924:Generated_Source\PSoC4/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC4/UART.c ****     *
 926:Generated_Source\PSoC4/UART.c ****     * Return:
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 22


 927:Generated_Source\PSoC4/UART.c ****     * None.
 928:Generated_Source\PSoC4/UART.c ****     *
 929:Generated_Source\PSoC4/UART.c ****     * Global Variables:
 930:Generated_Source\PSoC4/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC4/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC4/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC4/UART.c ****     *    initialized.
 937:Generated_Source\PSoC4/UART.c ****     *
 938:Generated_Source\PSoC4/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC4/UART.c ****     *  No.
 940:Generated_Source\PSoC4/UART.c ****     *
 941:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC4/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC4/UART.c ****     {
 266              		.loc 1 943 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 0
 269              		@ frame_needed = 0, uses_anonymous_args = 0
 270              		@ link register save eliminated.
 271              	.LVL14:
 944:Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 272              		.loc 1 945 0
 273 0000 034B     		ldr	r3, .L21
 274 0002 1B78     		ldrb	r3, [r3]
 275 0004 002B     		cmp	r3, #0
 276 0006 01D0     		beq	.L19
 946:Generated_Source\PSoC4/UART.c ****         {
 947:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC4/UART.c **** 
 949:Generated_Source\PSoC4/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
 951:Generated_Source\PSoC4/UART.c **** 
 952:Generated_Source\PSoC4/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:Generated_Source\PSoC4/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC4/UART.c ****             {
 955:Generated_Source\PSoC4/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC4/UART.c ****             }
 958:Generated_Source\PSoC4/UART.c ****             else
 959:Generated_Source\PSoC4/UART.c ****             {
 960:Generated_Source\PSoC4/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC4/UART.c ****                 {
 962:Generated_Source\PSoC4/UART.c ****                     UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC4/UART.c ****                 }
 964:Generated_Source\PSoC4/UART.c **** 
 965:Generated_Source\PSoC4/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC4/UART.c **** 
 967:Generated_Source\PSoC4/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC4/UART.c ****                 UART_txBufferWrite++;
 969:Generated_Source\PSoC4/UART.c ****             }
 970:Generated_Source\PSoC4/UART.c **** 
 971:Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
 972:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 23


 973:Generated_Source\PSoC4/UART.c ****         #else
 974:Generated_Source\PSoC4/UART.c **** 
 975:Generated_Source\PSoC4/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC4/UART.c ****             UART_TXDATA_REG = txDataByte;
 277              		.loc 1 976 0
 278 0008 024B     		ldr	r3, .L21+4
 279 000a 1870     		strb	r0, [r3]
 280              	.L19:
 977:Generated_Source\PSoC4/UART.c **** 
 978:Generated_Source\PSoC4/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC4/UART.c ****         }
 980:Generated_Source\PSoC4/UART.c ****     }
 281              		.loc 1 980 0
 282              		@ sp needed
 283 000c 7047     		bx	lr
 284              	.L22:
 285 000e C046     		.align	2
 286              	.L21:
 287 0010 00000000 		.word	.LANCHOR0
 288 0014 47000F40 		.word	1074724935
 289              		.cfi_endproc
 290              	.LFE8:
 291              		.size	UART_WriteTxData, .-UART_WriteTxData
 292              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 293              		.align	2
 294              		.global	UART_ReadTxStatus
 295              		.code	16
 296              		.thumb_func
 297              		.type	UART_ReadTxStatus, %function
 298              	UART_ReadTxStatus:
 299              	.LFB9:
 981:Generated_Source\PSoC4/UART.c **** 
 982:Generated_Source\PSoC4/UART.c **** 
 983:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC4/UART.c ****     *
 987:Generated_Source\PSoC4/UART.c ****     * Summary:
 988:Generated_Source\PSoC4/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC4/UART.c ****     *
 990:Generated_Source\PSoC4/UART.c ****     * Parameters:
 991:Generated_Source\PSoC4/UART.c ****     *  None.
 992:Generated_Source\PSoC4/UART.c ****     *
 993:Generated_Source\PSoC4/UART.c ****     * Return:
 994:Generated_Source\PSoC4/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC4/UART.c ****     *
 996:Generated_Source\PSoC4/UART.c ****     * Theory:
 997:Generated_Source\PSoC4/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC4/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC4/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC4/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC4/UART.c ****     *
1002:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC4/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC4/UART.c ****     {
 300              		.loc 1 1004 0
 301              		.cfi_startproc
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 24


 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		@ link register save eliminated.
1005:Generated_Source\PSoC4/UART.c ****         return(UART_TXSTATUS_REG);
 305              		.loc 1 1005 0
 306 0000 014B     		ldr	r3, .L24
 307 0002 1878     		ldrb	r0, [r3]
 308 0004 C0B2     		uxtb	r0, r0
1006:Generated_Source\PSoC4/UART.c ****     }
 309              		.loc 1 1006 0
 310              		@ sp needed
 311 0006 7047     		bx	lr
 312              	.L25:
 313              		.align	2
 314              	.L24:
 315 0008 67000F40 		.word	1074724967
 316              		.cfi_endproc
 317              	.LFE9:
 318              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 319              		.section	.text.UART_PutChar,"ax",%progbits
 320              		.align	2
 321              		.global	UART_PutChar
 322              		.code	16
 323              		.thumb_func
 324              		.type	UART_PutChar, %function
 325              	UART_PutChar:
 326              	.LFB10:
1007:Generated_Source\PSoC4/UART.c **** 
1008:Generated_Source\PSoC4/UART.c **** 
1009:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC4/UART.c ****     *
1013:Generated_Source\PSoC4/UART.c ****     * Summary:
1014:Generated_Source\PSoC4/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC4/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC4/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC4/UART.c ****     *
1018:Generated_Source\PSoC4/UART.c ****     * Parameters:
1019:Generated_Source\PSoC4/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC4/UART.c ****     *
1021:Generated_Source\PSoC4/UART.c ****     * Return:
1022:Generated_Source\PSoC4/UART.c ****     *  None.
1023:Generated_Source\PSoC4/UART.c ****     *
1024:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC4/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC4/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC4/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC4/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC4/UART.c ****     *     initialized.
1033:Generated_Source\PSoC4/UART.c ****     *
1034:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC4/UART.c ****     *  No.
1036:Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 25


1037:Generated_Source\PSoC4/UART.c ****     * Theory:
1038:Generated_Source\PSoC4/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC4/UART.c ****     *
1040:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC4/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC4/UART.c ****     {
 327              		.loc 1 1042 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331              		@ link register save eliminated.
 332              	.LVL15:
 333              	.L27:
1043:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC4/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC4/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC4/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC4/UART.c ****         */
1048:Generated_Source\PSoC4/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC4/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC4/UART.c **** 
1051:Generated_Source\PSoC4/UART.c ****         do
1052:Generated_Source\PSoC4/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC4/UART.c **** 
1054:Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC4/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC4/UART.c **** 
1059:Generated_Source\PSoC4/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:Generated_Source\PSoC4/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:Generated_Source\PSoC4/UART.c **** 
1062:Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC4/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC4/UART.c ****         }
1067:Generated_Source\PSoC4/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC4/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC4/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC4/UART.c **** 
1071:Generated_Source\PSoC4/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC4/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC4/UART.c ****         {
1074:Generated_Source\PSoC4/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC4/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC4/UART.c ****         }
1077:Generated_Source\PSoC4/UART.c ****         else
1078:Generated_Source\PSoC4/UART.c ****         {
1079:Generated_Source\PSoC4/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC4/UART.c ****             {
1081:Generated_Source\PSoC4/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC4/UART.c ****             }
1083:Generated_Source\PSoC4/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC4/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC4/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 26


1087:Generated_Source\PSoC4/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC4/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC4/UART.c **** 
1092:Generated_Source\PSoC4/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC4/UART.c **** 
1094:Generated_Source\PSoC4/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC4/UART.c ****             UART_EnableTxInt();
1096:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC4/UART.c **** 
1098:Generated_Source\PSoC4/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC4/UART.c ****             {
1100:Generated_Source\PSoC4/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC4/UART.c ****                 UART_SetPendingTxInt();
1102:Generated_Source\PSoC4/UART.c ****             }
1103:Generated_Source\PSoC4/UART.c ****         }
1104:Generated_Source\PSoC4/UART.c **** 
1105:Generated_Source\PSoC4/UART.c ****     #else
1106:Generated_Source\PSoC4/UART.c **** 
1107:Generated_Source\PSoC4/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 334              		.loc 1 1107 0 discriminator 1
 335 0000 034B     		ldr	r3, .L28
 336 0002 1B78     		ldrb	r3, [r3]
 337 0004 5B07     		lsls	r3, r3, #29
 338 0006 FBD4     		bmi	.L27
1108:Generated_Source\PSoC4/UART.c ****         {
1109:Generated_Source\PSoC4/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC4/UART.c ****         }
1111:Generated_Source\PSoC4/UART.c **** 
1112:Generated_Source\PSoC4/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC4/UART.c ****         UART_TXDATA_REG = txDataByte;
 339              		.loc 1 1113 0
 340 0008 024B     		ldr	r3, .L28+4
 341 000a 1870     		strb	r0, [r3]
1114:Generated_Source\PSoC4/UART.c **** 
1115:Generated_Source\PSoC4/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC4/UART.c ****     }
 342              		.loc 1 1116 0
 343              		@ sp needed
 344 000c 7047     		bx	lr
 345              	.L29:
 346 000e C046     		.align	2
 347              	.L28:
 348 0010 67000F40 		.word	1074724967
 349 0014 47000F40 		.word	1074724935
 350              		.cfi_endproc
 351              	.LFE10:
 352              		.size	UART_PutChar, .-UART_PutChar
 353              		.section	.text.UART_PutString,"ax",%progbits
 354              		.align	2
 355              		.global	UART_PutString
 356              		.code	16
 357              		.thumb_func
 358              		.type	UART_PutString, %function
 359              	UART_PutString:
 360              	.LFB11:
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 27


1117:Generated_Source\PSoC4/UART.c **** 
1118:Generated_Source\PSoC4/UART.c **** 
1119:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC4/UART.c ****     *
1123:Generated_Source\PSoC4/UART.c ****     * Summary:
1124:Generated_Source\PSoC4/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC4/UART.c ****     *
1126:Generated_Source\PSoC4/UART.c ****     * Parameters:
1127:Generated_Source\PSoC4/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC4/UART.c ****     *
1129:Generated_Source\PSoC4/UART.c ****     * Return:
1130:Generated_Source\PSoC4/UART.c ****     *  None.
1131:Generated_Source\PSoC4/UART.c ****     *
1132:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC4/UART.c ****     *     initialized.
1135:Generated_Source\PSoC4/UART.c ****     *
1136:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC4/UART.c ****     *  No.
1138:Generated_Source\PSoC4/UART.c ****     *
1139:Generated_Source\PSoC4/UART.c ****     * Theory:
1140:Generated_Source\PSoC4/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC4/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC4/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC4/UART.c ****     *
1144:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC4/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC4/UART.c ****     {
 361              		.loc 1 1146 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              	.LVL16:
 366 0000 70B5     		push	{r4, r5, r6, lr}
 367              		.cfi_def_cfa_offset 16
 368              		.cfi_offset 4, -16
 369              		.cfi_offset 5, -12
 370              		.cfi_offset 6, -8
 371              		.cfi_offset 14, -4
 372 0002 0500     		movs	r5, r0
 373              	.LVL17:
1147:Generated_Source\PSoC4/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC4/UART.c **** 
1149:Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 374              		.loc 1 1150 0
 375 0004 074B     		ldr	r3, .L35
 376 0006 1B78     		ldrb	r3, [r3]
 377 0008 002B     		cmp	r3, #0
 378 000a 05D1     		bne	.L34
 379 000c 08E0     		b	.L30
 380              	.LVL18:
 381              	.L33:
1151:Generated_Source\PSoC4/UART.c ****         {
1152:Generated_Source\PSoC4/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 28


1153:Generated_Source\PSoC4/UART.c ****             while(string[bufIndex] != (char8) 0)
1154:Generated_Source\PSoC4/UART.c ****             {
1155:Generated_Source\PSoC4/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 382              		.loc 1 1155 0
 383 000e FFF7FEFF 		bl	UART_PutChar
 384              	.LVL19:
1156:Generated_Source\PSoC4/UART.c ****                 bufIndex++;
 385              		.loc 1 1156 0
 386 0012 0134     		adds	r4, r4, #1
 387              	.LVL20:
 388 0014 A4B2     		uxth	r4, r4
 389              	.LVL21:
 390 0016 00E0     		b	.L31
 391              	.LVL22:
 392              	.L34:
 393 0018 0024     		movs	r4, #0
 394              	.LVL23:
 395              	.L31:
1153:Generated_Source\PSoC4/UART.c ****             {
 396              		.loc 1 1153 0
 397 001a 285D     		ldrb	r0, [r5, r4]
 398 001c 0028     		cmp	r0, #0
 399 001e F6D1     		bne	.L33
 400              	.LVL24:
 401              	.L30:
1157:Generated_Source\PSoC4/UART.c ****             }
1158:Generated_Source\PSoC4/UART.c ****         }
1159:Generated_Source\PSoC4/UART.c ****     }
 402              		.loc 1 1159 0
 403              		@ sp needed
 404              	.LVL25:
 405 0020 70BD     		pop	{r4, r5, r6, pc}
 406              	.L36:
 407 0022 C046     		.align	2
 408              	.L35:
 409 0024 00000000 		.word	.LANCHOR0
 410              		.cfi_endproc
 411              	.LFE11:
 412              		.size	UART_PutString, .-UART_PutString
 413              		.section	.text.UART_PutArray,"ax",%progbits
 414              		.align	2
 415              		.global	UART_PutArray
 416              		.code	16
 417              		.thumb_func
 418              		.type	UART_PutArray, %function
 419              	UART_PutArray:
 420              	.LFB12:
1160:Generated_Source\PSoC4/UART.c **** 
1161:Generated_Source\PSoC4/UART.c **** 
1162:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC4/UART.c ****     *
1166:Generated_Source\PSoC4/UART.c ****     * Summary:
1167:Generated_Source\PSoC4/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC4/UART.c ****     *  transmission.
1169:Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 29


1170:Generated_Source\PSoC4/UART.c ****     * Parameters:
1171:Generated_Source\PSoC4/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC4/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC4/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC4/UART.c ****     *
1175:Generated_Source\PSoC4/UART.c ****     * Return:
1176:Generated_Source\PSoC4/UART.c ****     *  None.
1177:Generated_Source\PSoC4/UART.c ****     *
1178:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC4/UART.c ****     *     initialized.
1181:Generated_Source\PSoC4/UART.c ****     *
1182:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC4/UART.c ****     *  No.
1184:Generated_Source\PSoC4/UART.c ****     *
1185:Generated_Source\PSoC4/UART.c ****     * Theory:
1186:Generated_Source\PSoC4/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC4/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC4/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC4/UART.c ****     *
1190:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1191:Generated_Source\PSoC4/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC4/UART.c ****                                                                     
1193:Generated_Source\PSoC4/UART.c ****     {
 421              		.loc 1 1193 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              	.LVL26:
 426 0000 70B5     		push	{r4, r5, r6, lr}
 427              		.cfi_def_cfa_offset 16
 428              		.cfi_offset 4, -16
 429              		.cfi_offset 5, -12
 430              		.cfi_offset 6, -8
 431              		.cfi_offset 14, -4
 432 0002 0600     		movs	r6, r0
 433 0004 0D00     		movs	r5, r1
 434              	.LVL27:
1194:Generated_Source\PSoC4/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC4/UART.c **** 
1196:Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 435              		.loc 1 1197 0
 436 0006 074B     		ldr	r3, .L42
 437 0008 1B78     		ldrb	r3, [r3]
 438 000a 002B     		cmp	r3, #0
 439 000c 06D1     		bne	.L41
 440 000e 08E0     		b	.L37
 441              	.LVL28:
 442              	.L40:
1198:Generated_Source\PSoC4/UART.c ****         {
1199:Generated_Source\PSoC4/UART.c ****             while(bufIndex < byteCount)
1200:Generated_Source\PSoC4/UART.c ****             {
1201:Generated_Source\PSoC4/UART.c ****                 UART_PutChar(string[bufIndex]);
 443              		.loc 1 1201 0
 444 0010 305D     		ldrb	r0, [r6, r4]
 445 0012 FFF7FEFF 		bl	UART_PutChar
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 30


 446              	.LVL29:
1202:Generated_Source\PSoC4/UART.c ****                 bufIndex++;
 447              		.loc 1 1202 0
 448 0016 0134     		adds	r4, r4, #1
 449              	.LVL30:
 450 0018 E4B2     		uxtb	r4, r4
 451              	.LVL31:
 452 001a 00E0     		b	.L38
 453              	.LVL32:
 454              	.L41:
 455 001c 0024     		movs	r4, #0
 456              	.LVL33:
 457              	.L38:
1199:Generated_Source\PSoC4/UART.c ****             {
 458              		.loc 1 1199 0
 459 001e AC42     		cmp	r4, r5
 460 0020 F6D3     		bcc	.L40
 461              	.LVL34:
 462              	.L37:
1203:Generated_Source\PSoC4/UART.c ****             }
1204:Generated_Source\PSoC4/UART.c ****         }
1205:Generated_Source\PSoC4/UART.c ****     }
 463              		.loc 1 1205 0
 464              		@ sp needed
 465              	.LVL35:
 466 0022 70BD     		pop	{r4, r5, r6, pc}
 467              	.L43:
 468              		.align	2
 469              	.L42:
 470 0024 00000000 		.word	.LANCHOR0
 471              		.cfi_endproc
 472              	.LFE12:
 473              		.size	UART_PutArray, .-UART_PutArray
 474              		.section	.text.UART_PutCRLF,"ax",%progbits
 475              		.align	2
 476              		.global	UART_PutCRLF
 477              		.code	16
 478              		.thumb_func
 479              		.type	UART_PutCRLF, %function
 480              	UART_PutCRLF:
 481              	.LFB13:
1206:Generated_Source\PSoC4/UART.c **** 
1207:Generated_Source\PSoC4/UART.c **** 
1208:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC4/UART.c ****     *
1212:Generated_Source\PSoC4/UART.c ****     * Summary:
1213:Generated_Source\PSoC4/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC4/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC4/UART.c ****     *
1216:Generated_Source\PSoC4/UART.c ****     * Parameters:
1217:Generated_Source\PSoC4/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC4/UART.c ****     *
1219:Generated_Source\PSoC4/UART.c ****     * Return:
1220:Generated_Source\PSoC4/UART.c ****     *  None.
1221:Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 31


1222:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC4/UART.c ****     *     initialized.
1225:Generated_Source\PSoC4/UART.c ****     *
1226:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC4/UART.c ****     *  No.
1228:Generated_Source\PSoC4/UART.c ****     *
1229:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC4/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC4/UART.c ****     {
 482              		.loc 1 1231 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              	.LVL36:
 487 0000 10B5     		push	{r4, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 4, -8
 490              		.cfi_offset 14, -4
1232:Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 491              		.loc 1 1233 0
 492 0002 064B     		ldr	r3, .L46
 493 0004 1B78     		ldrb	r3, [r3]
 494 0006 002B     		cmp	r3, #0
 495 0008 07D0     		beq	.L44
1234:Generated_Source\PSoC4/UART.c ****         {
1235:Generated_Source\PSoC4/UART.c ****             UART_PutChar(txDataByte);
 496              		.loc 1 1235 0
 497 000a FFF7FEFF 		bl	UART_PutChar
 498              	.LVL37:
1236:Generated_Source\PSoC4/UART.c ****             UART_PutChar(0x0Du);
 499              		.loc 1 1236 0
 500 000e 0D20     		movs	r0, #13
 501 0010 FFF7FEFF 		bl	UART_PutChar
 502              	.LVL38:
1237:Generated_Source\PSoC4/UART.c ****             UART_PutChar(0x0Au);
 503              		.loc 1 1237 0
 504 0014 0A20     		movs	r0, #10
 505 0016 FFF7FEFF 		bl	UART_PutChar
 506              	.LVL39:
 507              	.L44:
1238:Generated_Source\PSoC4/UART.c ****         }
1239:Generated_Source\PSoC4/UART.c ****     }
 508              		.loc 1 1239 0
 509              		@ sp needed
 510 001a 10BD     		pop	{r4, pc}
 511              	.L47:
 512              		.align	2
 513              	.L46:
 514 001c 00000000 		.word	.LANCHOR0
 515              		.cfi_endproc
 516              	.LFE13:
 517              		.size	UART_PutCRLF, .-UART_PutCRLF
 518              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 519              		.align	2
 520              		.global	UART_GetTxBufferSize
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 32


 521              		.code	16
 522              		.thumb_func
 523              		.type	UART_GetTxBufferSize, %function
 524              	UART_GetTxBufferSize:
 525              	.LFB14:
1240:Generated_Source\PSoC4/UART.c **** 
1241:Generated_Source\PSoC4/UART.c **** 
1242:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC4/UART.c ****     *
1246:Generated_Source\PSoC4/UART.c ****     * Summary:
1247:Generated_Source\PSoC4/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC4/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC4/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC4/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC4/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC4/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC4/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC4/UART.c ****     *
1255:Generated_Source\PSoC4/UART.c ****     * Parameters:
1256:Generated_Source\PSoC4/UART.c ****     *  None.
1257:Generated_Source\PSoC4/UART.c ****     *
1258:Generated_Source\PSoC4/UART.c ****     * Return:
1259:Generated_Source\PSoC4/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC4/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC4/UART.c ****     *
1262:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC4/UART.c ****     *
1266:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1267:Generated_Source\PSoC4/UART.c ****     *  No.
1268:Generated_Source\PSoC4/UART.c ****     *
1269:Generated_Source\PSoC4/UART.c ****     * Theory:
1270:Generated_Source\PSoC4/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC4/UART.c ****     *
1272:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC4/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC4/UART.c ****                                                             
1275:Generated_Source\PSoC4/UART.c ****     {
 526              		.loc 1 1275 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
1276:Generated_Source\PSoC4/UART.c ****         uint8 size;
1277:Generated_Source\PSoC4/UART.c **** 
1278:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC4/UART.c **** 
1280:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC4/UART.c ****         UART_DisableTxInt();
1282:Generated_Source\PSoC4/UART.c **** 
1283:Generated_Source\PSoC4/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:Generated_Source\PSoC4/UART.c ****         {
1285:Generated_Source\PSoC4/UART.c ****             size = 0u;
1286:Generated_Source\PSoC4/UART.c ****         }
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 33


1287:Generated_Source\PSoC4/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:Generated_Source\PSoC4/UART.c ****         {
1289:Generated_Source\PSoC4/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:Generated_Source\PSoC4/UART.c ****         }
1291:Generated_Source\PSoC4/UART.c ****         else
1292:Generated_Source\PSoC4/UART.c ****         {
1293:Generated_Source\PSoC4/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:Generated_Source\PSoC4/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC4/UART.c ****         }
1296:Generated_Source\PSoC4/UART.c **** 
1297:Generated_Source\PSoC4/UART.c ****         UART_EnableTxInt();
1298:Generated_Source\PSoC4/UART.c **** 
1299:Generated_Source\PSoC4/UART.c ****     #else
1300:Generated_Source\PSoC4/UART.c **** 
1301:Generated_Source\PSoC4/UART.c ****         size = UART_TXSTATUS_REG;
 531              		.loc 1 1301 0
 532 0000 064B     		ldr	r3, .L52
 533 0002 1B78     		ldrb	r3, [r3]
 534 0004 DBB2     		uxtb	r3, r3
 535              	.LVL40:
1302:Generated_Source\PSoC4/UART.c **** 
1303:Generated_Source\PSoC4/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC4/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 536              		.loc 1 1304 0
 537 0006 5A07     		lsls	r2, r3, #29
 538 0008 03D4     		bmi	.L50
1305:Generated_Source\PSoC4/UART.c ****         {
1306:Generated_Source\PSoC4/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC4/UART.c ****         }
1308:Generated_Source\PSoC4/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 539              		.loc 1 1308 0
 540 000a 9B07     		lsls	r3, r3, #30
 541 000c 03D5     		bpl	.L51
 542              	.LVL41:
1309:Generated_Source\PSoC4/UART.c ****         {
1310:Generated_Source\PSoC4/UART.c ****             size = 0u;
 543              		.loc 1 1310 0
 544 000e 0020     		movs	r0, #0
 545 0010 02E0     		b	.L49
 546              	.LVL42:
 547              	.L50:
1306:Generated_Source\PSoC4/UART.c ****         }
 548              		.loc 1 1306 0
 549 0012 0420     		movs	r0, #4
 550 0014 00E0     		b	.L49
 551              	.LVL43:
 552              	.L51:
1311:Generated_Source\PSoC4/UART.c ****         }
1312:Generated_Source\PSoC4/UART.c ****         else
1313:Generated_Source\PSoC4/UART.c ****         {
1314:Generated_Source\PSoC4/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC4/UART.c ****             size = 1u;
 553              		.loc 1 1315 0
 554 0016 0120     		movs	r0, #1
 555              	.L49:
 556              	.LVL44:
1316:Generated_Source\PSoC4/UART.c ****         }
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 34


1317:Generated_Source\PSoC4/UART.c **** 
1318:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC4/UART.c **** 
1320:Generated_Source\PSoC4/UART.c ****     return(size);
1321:Generated_Source\PSoC4/UART.c ****     }
 557              		.loc 1 1321 0
 558              		@ sp needed
 559 0018 7047     		bx	lr
 560              	.L53:
 561 001a C046     		.align	2
 562              	.L52:
 563 001c 67000F40 		.word	1074724967
 564              		.cfi_endproc
 565              	.LFE14:
 566              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 567              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 568              		.align	2
 569              		.global	UART_ClearTxBuffer
 570              		.code	16
 571              		.thumb_func
 572              		.type	UART_ClearTxBuffer, %function
 573              	UART_ClearTxBuffer:
 574              	.LFB15:
1322:Generated_Source\PSoC4/UART.c **** 
1323:Generated_Source\PSoC4/UART.c **** 
1324:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC4/UART.c ****     *
1328:Generated_Source\PSoC4/UART.c ****     * Summary:
1329:Generated_Source\PSoC4/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC4/UART.c ****     *
1331:Generated_Source\PSoC4/UART.c ****     * Parameters:
1332:Generated_Source\PSoC4/UART.c ****     *  None.
1333:Generated_Source\PSoC4/UART.c ****     *
1334:Generated_Source\PSoC4/UART.c ****     * Return:
1335:Generated_Source\PSoC4/UART.c ****     *  None.
1336:Generated_Source\PSoC4/UART.c ****     *
1337:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC4/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC4/UART.c ****     *
1341:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC4/UART.c ****     *  No.
1343:Generated_Source\PSoC4/UART.c ****     *
1344:Generated_Source\PSoC4/UART.c ****     * Theory:
1345:Generated_Source\PSoC4/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC4/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC4/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC4/UART.c ****     *
1349:Generated_Source\PSoC4/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC4/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC4/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC4/UART.c ****     *
1353:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC4/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC4/UART.c ****     {
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 35


 575              		.loc 1 1355 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 10B5     		push	{r4, lr}
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 4, -8
 582              		.cfi_offset 14, -4
1356:Generated_Source\PSoC4/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC4/UART.c **** 
1358:Generated_Source\PSoC4/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 583              		.loc 1 1358 0
 584 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 585              	.LVL45:
1359:Generated_Source\PSoC4/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC4/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 586              		.loc 1 1360 0
 587 0006 064A     		ldr	r2, .L55
 588 0008 1178     		ldrb	r1, [r2]
 589 000a 0123     		movs	r3, #1
 590 000c 0B43     		orrs	r3, r1
 591 000e DBB2     		uxtb	r3, r3
 592 0010 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC4/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 593              		.loc 1 1361 0
 594 0012 1378     		ldrb	r3, [r2]
 595 0014 0121     		movs	r1, #1
 596 0016 8B43     		bics	r3, r1
 597 0018 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC4/UART.c ****         CyExitCriticalSection(enableInterrupts);
 598              		.loc 1 1362 0
 599 001a FFF7FEFF 		bl	CyExitCriticalSection
 600              	.LVL46:
1363:Generated_Source\PSoC4/UART.c **** 
1364:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC4/UART.c **** 
1366:Generated_Source\PSoC4/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC4/UART.c ****         UART_DisableTxInt();
1368:Generated_Source\PSoC4/UART.c **** 
1369:Generated_Source\PSoC4/UART.c ****         UART_txBufferRead = 0u;
1370:Generated_Source\PSoC4/UART.c ****         UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC4/UART.c **** 
1372:Generated_Source\PSoC4/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC4/UART.c ****         UART_EnableTxInt();
1374:Generated_Source\PSoC4/UART.c **** 
1375:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC4/UART.c ****     }
 601              		.loc 1 1376 0
 602              		@ sp needed
 603 001e 10BD     		pop	{r4, pc}
 604              	.L56:
 605              		.align	2
 606              	.L55:
 607 0020 97000F40 		.word	1074725015
 608              		.cfi_endproc
 609              	.LFE15:
 610              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 36


 611              		.section	.text.UART_SendBreak,"ax",%progbits
 612              		.align	2
 613              		.global	UART_SendBreak
 614              		.code	16
 615              		.thumb_func
 616              		.type	UART_SendBreak, %function
 617              	UART_SendBreak:
 618              	.LFB16:
1377:Generated_Source\PSoC4/UART.c **** 
1378:Generated_Source\PSoC4/UART.c **** 
1379:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC4/UART.c ****     *
1383:Generated_Source\PSoC4/UART.c ****     * Summary:
1384:Generated_Source\PSoC4/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC4/UART.c ****     *
1386:Generated_Source\PSoC4/UART.c ****     * Parameters:
1387:Generated_Source\PSoC4/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC4/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC4/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC4/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC4/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC4/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC4/UART.c ****     *       then return.
1394:Generated_Source\PSoC4/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC4/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC4/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC4/UART.c ****     *
1398:Generated_Source\PSoC4/UART.c ****     * Return:
1399:Generated_Source\PSoC4/UART.c ****     *  None.
1400:Generated_Source\PSoC4/UART.c ****     *
1401:Generated_Source\PSoC4/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC4/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC4/UART.c ****     *     initialized.
1404:Generated_Source\PSoC4/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC4/UART.c ****     *
1406:Generated_Source\PSoC4/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC4/UART.c ****     *  No.
1408:Generated_Source\PSoC4/UART.c ****     *
1409:Generated_Source\PSoC4/UART.c ****     * Theory:
1410:Generated_Source\PSoC4/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC4/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC4/UART.c ****     *  operation.
1413:Generated_Source\PSoC4/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC4/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC4/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC4/UART.c ****     *     complete.
1417:Generated_Source\PSoC4/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC4/UART.c ****     *     operation
1419:Generated_Source\PSoC4/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC4/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC4/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC4/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC4/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC4/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC4/UART.c ****     *     Example for this case:
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 37


1426:Generated_Source\PSoC4/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC4/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC4/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC4/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC4/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC4/UART.c ****     *
1432:Generated_Source\PSoC4/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC4/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC4/UART.c ****     *  break signal.
1435:Generated_Source\PSoC4/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC4/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC4/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC4/UART.c ****     *
1439:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC4/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC4/UART.c ****     {
 619              		.loc 1 1441 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624              	.LVL47:
1442:Generated_Source\PSoC4/UART.c **** 
1443:Generated_Source\PSoC4/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC4/UART.c ****         if(UART_initVar != 0u)
 625              		.loc 1 1444 0
 626 0000 134B     		ldr	r3, .L64
 627 0002 1B78     		ldrb	r3, [r3]
 628 0004 002B     		cmp	r3, #0
 629 0006 21D0     		beq	.L57
 630              	.LBB2:
1445:Generated_Source\PSoC4/UART.c ****         {
1446:Generated_Source\PSoC4/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC4/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC4/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC4/UART.c **** 
1450:Generated_Source\PSoC4/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC4/UART.c **** 
1452:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC4/UART.c ****             {
1455:Generated_Source\PSoC4/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC4/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC4/UART.c ****                 /* Send zeros */
1459:Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC4/UART.c **** 
1461:Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC4/UART.c ****                 {
1463:Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC4/UART.c ****                 }
1465:Generated_Source\PSoC4/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC4/UART.c ****             }
1467:Generated_Source\PSoC4/UART.c **** 
1468:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC4/UART.c ****             {
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 38


1471:Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC4/UART.c ****                 {
1473:Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC4/UART.c ****                 }
1475:Generated_Source\PSoC4/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC4/UART.c ****             }
1477:Generated_Source\PSoC4/UART.c **** 
1478:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC4/UART.c ****             {
1482:Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC4/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC4/UART.c ****             }
1485:Generated_Source\PSoC4/UART.c **** 
1486:Generated_Source\PSoC4/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC4/UART.c **** 
1488:Generated_Source\PSoC4/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC4/UART.c **** 
1490:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 631              		.loc 1 1490 0
 632 0008 0028     		cmp	r0, #0
 633 000a 01D0     		beq	.L59
 634              		.loc 1 1490 0 is_stmt 0 discriminator 1
 635 000c 0328     		cmp	r0, #3
 636 000e 0CD1     		bne	.L60
 637              	.L59:
1491:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC4/UART.c ****             {
1493:Generated_Source\PSoC4/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC4/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC4/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC4/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
1497:Generated_Source\PSoC4/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC4/UART.c **** 
1500:Generated_Source\PSoC4/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC4/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 638              		.loc 1 1501 0 is_stmt 1
 639 0010 104B     		ldr	r3, .L64+4
 640 0012 1978     		ldrb	r1, [r3]
 641 0014 0E4A     		ldr	r2, .L64
 642 0016 5170     		strb	r1, [r2, #1]
1502:Generated_Source\PSoC4/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 643              		.loc 1 1502 0
 644 0018 6722     		movs	r2, #103
 645 001a 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC4/UART.c ****                 #else
1504:Generated_Source\PSoC4/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC4/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC4/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC4/UART.c **** 
1508:Generated_Source\PSoC4/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC4/UART.c ****                 UART_TXDATA_REG = 0u;
 646              		.loc 1 1509 0
 647 001c 0022     		movs	r2, #0
 648 001e 0E4B     		ldr	r3, .L64+8
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 39


 649 0020 1A70     		strb	r2, [r3]
 650              	.L61:
1510:Generated_Source\PSoC4/UART.c **** 
1511:Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC4/UART.c ****                 {
1513:Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 651              		.loc 1 1513 0 discriminator 1
 652 0022 0E4B     		ldr	r3, .L64+12
 653 0024 1B78     		ldrb	r3, [r3]
 654              	.LVL48:
1514:Generated_Source\PSoC4/UART.c ****                 }
1515:Generated_Source\PSoC4/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 655              		.loc 1 1515 0 discriminator 1
 656 0026 9B07     		lsls	r3, r3, #30
 657 0028 FBD4     		bmi	.L61
 658              	.LVL49:
 659              	.L60:
1516:Generated_Source\PSoC4/UART.c ****             }
1517:Generated_Source\PSoC4/UART.c **** 
1518:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 660              		.loc 1 1518 0
 661 002a 0128     		cmp	r0, #1
 662 002c 01D0     		beq	.L62
 663              		.loc 1 1518 0 is_stmt 0 discriminator 1
 664 002e 0328     		cmp	r0, #3
 665 0030 04D1     		bne	.L63
 666              	.L62:
1519:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC4/UART.c ****             {
1521:Generated_Source\PSoC4/UART.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC4/UART.c ****                 {
1523:Generated_Source\PSoC4/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 667              		.loc 1 1523 0 is_stmt 1 discriminator 1
 668 0032 0A4B     		ldr	r3, .L64+12
 669 0034 1A78     		ldrb	r2, [r3]
 670              	.LVL50:
1524:Generated_Source\PSoC4/UART.c ****                 }
1525:Generated_Source\PSoC4/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
 671              		.loc 1 1525 0 discriminator 1
 672 0036 0123     		movs	r3, #1
 673 0038 9343     		bics	r3, r2
 674 003a FAD1     		bne	.L62
 675              	.LVL51:
 676              	.L63:
1526:Generated_Source\PSoC4/UART.c ****             }
1527:Generated_Source\PSoC4/UART.c **** 
1528:Generated_Source\PSoC4/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1529:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
 677              		.loc 1 1529 0
 678 003c 0138     		subs	r0, r0, #1
 679              	.LVL52:
 680 003e C0B2     		uxtb	r0, r0
1528:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_REINIT) ||
 681              		.loc 1 1528 0
 682 0040 0228     		cmp	r0, #2
 683 0042 03D8     		bhi	.L57
1530:Generated_Source\PSoC4/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 40


1531:Generated_Source\PSoC4/UART.c ****             {
1532:Generated_Source\PSoC4/UART.c **** 
1533:Generated_Source\PSoC4/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC4/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 684              		.loc 1 1534 0
 685 0044 024B     		ldr	r3, .L64
 686 0046 5A78     		ldrb	r2, [r3, #1]
 687 0048 024B     		ldr	r3, .L64+4
 688 004a 1A70     		strb	r2, [r3]
 689              	.L57:
 690              	.LBE2:
1535:Generated_Source\PSoC4/UART.c ****             #else
1536:Generated_Source\PSoC4/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC4/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC4/UART.c **** 
1539:Generated_Source\PSoC4/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC4/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC4/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1542:Generated_Source\PSoC4/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC4/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC4/UART.c ****             }
1545:Generated_Source\PSoC4/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC4/UART.c ****         }
1547:Generated_Source\PSoC4/UART.c ****     }
 691              		.loc 1 1547 0
 692              		@ sp needed
 693 004c 7047     		bx	lr
 694              	.L65:
 695 004e C046     		.align	2
 696              	.L64:
 697 0050 00000000 		.word	.LANCHOR0
 698 0054 36000F40 		.word	1074724918
 699 0058 47000F40 		.word	1074724935
 700 005c 67000F40 		.word	1074724967
 701              		.cfi_endproc
 702              	.LFE16:
 703              		.size	UART_SendBreak, .-UART_SendBreak
 704              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 705              		.align	2
 706              		.global	UART_SetTxAddressMode
 707              		.code	16
 708              		.thumb_func
 709              		.type	UART_SetTxAddressMode, %function
 710              	UART_SetTxAddressMode:
 711              	.LFB17:
1548:Generated_Source\PSoC4/UART.c **** 
1549:Generated_Source\PSoC4/UART.c **** 
1550:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC4/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC4/UART.c ****     *
1554:Generated_Source\PSoC4/UART.c ****     * Summary:
1555:Generated_Source\PSoC4/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC4/UART.c ****     *
1557:Generated_Source\PSoC4/UART.c ****     * Parameters:
1558:Generated_Source\PSoC4/UART.c ****     *  addressMode: 
1559:Generated_Source\PSoC4/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 41


1560:Generated_Source\PSoC4/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC4/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC4/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC4/UART.c ****     *
1564:Generated_Source\PSoC4/UART.c ****     * Return:
1565:Generated_Source\PSoC4/UART.c ****     *  None.
1566:Generated_Source\PSoC4/UART.c ****     *
1567:Generated_Source\PSoC4/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC4/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC4/UART.c ****     *  register.
1570:Generated_Source\PSoC4/UART.c ****     *
1571:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC4/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC4/UART.c ****     {
 712              		.loc 1 1573 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 0
 715              		@ frame_needed = 0, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717              	.LVL53:
1574:Generated_Source\PSoC4/UART.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC4/UART.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC4/UART.c ****         {
1577:Generated_Source\PSoC4/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC4/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
1579:Generated_Source\PSoC4/UART.c ****                                                   UART_CTRL_MARK);
1580:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC4/UART.c ****         }
1582:Generated_Source\PSoC4/UART.c ****         else
1583:Generated_Source\PSoC4/UART.c ****         {
1584:Generated_Source\PSoC4/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC4/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
1586:Generated_Source\PSoC4/UART.c ****                                                   (uint8) ~UART_CTRL_MARK);
1587:Generated_Source\PSoC4/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC4/UART.c ****         }
1589:Generated_Source\PSoC4/UART.c ****     }
 718              		.loc 1 1589 0
 719              		@ sp needed
 720 0000 7047     		bx	lr
 721              		.cfi_endproc
 722              	.LFE17:
 723              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 724              		.global	UART_initVar
 725 0002 C046     		.bss
 726              		.set	.LANCHOR0,. + 0
 727              		.type	UART_initVar, %object
 728              		.size	UART_initVar, 1
 729              	UART_initVar:
 730 0000 00       		.space	1
 731              		.type	txPeriod.5028, %object
 732              		.size	txPeriod.5028, 1
 733              	txPeriod.5028:
 734 0001 00       		.space	1
 735              		.text
 736              	.Letext0:
 737              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 738              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 42


 739              		.file 4 "Generated_Source\\PSoC4\\UART_IntClock.h"
 740              		.section	.debug_info,"",%progbits
 741              	.Ldebug_info0:
 742 0000 63040000 		.4byte	0x463
 743 0004 0400     		.2byte	0x4
 744 0006 00000000 		.4byte	.Ldebug_abbrev0
 745 000a 04       		.byte	0x4
 746 000b 01       		.uleb128 0x1
 747 000c 41020000 		.4byte	.LASF49
 748 0010 0C       		.byte	0xc
 749 0011 B9000000 		.4byte	.LASF50
 750 0015 79000000 		.4byte	.LASF51
 751 0019 00000000 		.4byte	.Ldebug_ranges0+0
 752 001d 00000000 		.4byte	0
 753 0021 00000000 		.4byte	.Ldebug_line0
 754 0025 02       		.uleb128 0x2
 755 0026 01       		.byte	0x1
 756 0027 06       		.byte	0x6
 757 0028 71030000 		.4byte	.LASF0
 758 002c 02       		.uleb128 0x2
 759 002d 01       		.byte	0x1
 760 002e 08       		.byte	0x8
 761 002f 62010000 		.4byte	.LASF1
 762 0033 02       		.uleb128 0x2
 763 0034 02       		.byte	0x2
 764 0035 05       		.byte	0x5
 765 0036 21030000 		.4byte	.LASF2
 766 003a 02       		.uleb128 0x2
 767 003b 02       		.byte	0x2
 768 003c 07       		.byte	0x7
 769 003d 66000000 		.4byte	.LASF3
 770 0041 02       		.uleb128 0x2
 771 0042 04       		.byte	0x4
 772 0043 05       		.byte	0x5
 773 0044 50030000 		.4byte	.LASF4
 774 0048 02       		.uleb128 0x2
 775 0049 04       		.byte	0x4
 776 004a 07       		.byte	0x7
 777 004b 16010000 		.4byte	.LASF5
 778 004f 02       		.uleb128 0x2
 779 0050 08       		.byte	0x8
 780 0051 05       		.byte	0x5
 781 0052 00000000 		.4byte	.LASF6
 782 0056 02       		.uleb128 0x2
 783 0057 08       		.byte	0x8
 784 0058 07       		.byte	0x7
 785 0059 E4000000 		.4byte	.LASF7
 786 005d 03       		.uleb128 0x3
 787 005e 04       		.byte	0x4
 788 005f 05       		.byte	0x5
 789 0060 696E7400 		.ascii	"int\000"
 790 0064 02       		.uleb128 0x2
 791 0065 04       		.byte	0x4
 792 0066 07       		.byte	0x7
 793 0067 AB010000 		.4byte	.LASF8
 794 006b 04       		.uleb128 0x4
 795 006c 28010000 		.4byte	.LASF9
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 43


 796 0070 02       		.byte	0x2
 797 0071 E401     		.2byte	0x1e4
 798 0073 2C000000 		.4byte	0x2c
 799 0077 04       		.uleb128 0x4
 800 0078 7E010000 		.4byte	.LASF10
 801 007c 02       		.byte	0x2
 802 007d E501     		.2byte	0x1e5
 803 007f 3A000000 		.4byte	0x3a
 804 0083 02       		.uleb128 0x2
 805 0084 04       		.byte	0x4
 806 0085 04       		.byte	0x4
 807 0086 DE000000 		.4byte	.LASF11
 808 008a 02       		.uleb128 0x2
 809 008b 08       		.byte	0x8
 810 008c 04       		.byte	0x4
 811 008d 70010000 		.4byte	.LASF12
 812 0091 04       		.uleb128 0x4
 813 0092 17000000 		.4byte	.LASF13
 814 0096 02       		.byte	0x2
 815 0097 F501     		.2byte	0x1f5
 816 0099 9D000000 		.4byte	0x9d
 817 009d 02       		.uleb128 0x2
 818 009e 01       		.byte	0x1
 819 009f 08       		.byte	0x8
 820 00a0 03030000 		.4byte	.LASF14
 821 00a4 04       		.uleb128 0x4
 822 00a5 11010000 		.4byte	.LASF15
 823 00a9 02       		.byte	0x2
 824 00aa 8E02     		.2byte	0x28e
 825 00ac B0000000 		.4byte	0xb0
 826 00b0 05       		.uleb128 0x5
 827 00b1 6B000000 		.4byte	0x6b
 828 00b5 02       		.uleb128 0x2
 829 00b6 08       		.byte	0x8
 830 00b7 04       		.byte	0x4
 831 00b8 59030000 		.4byte	.LASF16
 832 00bc 02       		.uleb128 0x2
 833 00bd 04       		.byte	0x4
 834 00be 07       		.byte	0x7
 835 00bf EF020000 		.4byte	.LASF17
 836 00c3 06       		.uleb128 0x6
 837 00c4 07010000 		.4byte	.LASF52
 838 00c8 01       		.byte	0x1
 839 00c9 6A       		.byte	0x6a
 840 00ca 00000000 		.4byte	.LFB2
 841 00ce 20000000 		.4byte	.LFE2-.LFB2
 842 00d2 01       		.uleb128 0x1
 843 00d3 9C       		.byte	0x9c
 844 00d4 07       		.uleb128 0x7
 845 00d5 65030000 		.4byte	.LASF18
 846 00d9 01       		.byte	0x1
 847 00da B7       		.byte	0xb7
 848 00db 00000000 		.4byte	.LFB3
 849 00df 28000000 		.4byte	.LFE3-.LFB3
 850 00e3 01       		.uleb128 0x1
 851 00e4 9C       		.byte	0x9c
 852 00e5 26010000 		.4byte	0x126
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 44


 853 00e9 08       		.uleb128 0x8
 854 00ea 51010000 		.4byte	.LASF21
 855 00ee 01       		.byte	0x1
 856 00ef B9       		.byte	0xb9
 857 00f0 6B000000 		.4byte	0x6b
 858 00f4 00000000 		.4byte	.LLST0
 859 00f8 09       		.uleb128 0x9
 860 00f9 06000000 		.4byte	.LVL0
 861 00fd 3A040000 		.4byte	0x43a
 862 0101 0A       		.uleb128 0xa
 863 0102 1A000000 		.4byte	.LVL2
 864 0106 45040000 		.4byte	0x445
 865 010a 15010000 		.4byte	0x115
 866 010e 0B       		.uleb128 0xb
 867 010f 01       		.uleb128 0x1
 868 0110 50       		.byte	0x50
 869 0111 02       		.uleb128 0x2
 870 0112 08       		.byte	0x8
 871 0113 FF       		.byte	0xff
 872 0114 00       		.byte	0
 873 0115 0C       		.uleb128 0xc
 874 0116 20000000 		.4byte	.LVL3
 875 011a 50040000 		.4byte	0x450
 876 011e 0B       		.uleb128 0xb
 877 011f 01       		.uleb128 0x1
 878 0120 50       		.byte	0x50
 879 0121 02       		.uleb128 0x2
 880 0122 74       		.byte	0x74
 881 0123 00       		.sleb128 0
 882 0124 00       		.byte	0
 883 0125 00       		.byte	0
 884 0126 07       		.uleb128 0x7
 885 0127 2E010000 		.4byte	.LASF19
 886 012b 01       		.byte	0x1
 887 012c 4C       		.byte	0x4c
 888 012d 00000000 		.4byte	.LFB1
 889 0131 20000000 		.4byte	.LFE1-.LFB1
 890 0135 01       		.uleb128 0x1
 891 0136 9C       		.byte	0x9c
 892 0137 4E010000 		.4byte	0x14e
 893 013b 09       		.uleb128 0x9
 894 013c 0E000000 		.4byte	.LVL5
 895 0140 C3000000 		.4byte	0xc3
 896 0144 09       		.uleb128 0x9
 897 0145 18000000 		.4byte	.LVL6
 898 0149 D4000000 		.4byte	0xd4
 899 014d 00       		.byte	0
 900 014e 07       		.uleb128 0x7
 901 014f 3E030000 		.4byte	.LASF20
 902 0153 01       		.byte	0x1
 903 0154 F0       		.byte	0xf0
 904 0155 00000000 		.4byte	.LFB4
 905 0159 24000000 		.4byte	.LFE4-.LFB4
 906 015d 01       		.uleb128 0x1
 907 015e 9C       		.byte	0x9c
 908 015f 95010000 		.4byte	0x195
 909 0163 08       		.uleb128 0x8
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 45


 910 0164 51010000 		.4byte	.LASF21
 911 0168 01       		.byte	0x1
 912 0169 F2       		.byte	0xf2
 913 016a 6B000000 		.4byte	0x6b
 914 016e 13000000 		.4byte	.LLST1
 915 0172 09       		.uleb128 0x9
 916 0173 06000000 		.4byte	.LVL7
 917 0177 3A040000 		.4byte	0x43a
 918 017b 09       		.uleb128 0x9
 919 017c 0C000000 		.4byte	.LVL9
 920 0180 5B040000 		.4byte	0x45b
 921 0184 0C       		.uleb128 0xc
 922 0185 1C000000 		.4byte	.LVL10
 923 0189 50040000 		.4byte	0x450
 924 018d 0B       		.uleb128 0xb
 925 018e 01       		.uleb128 0x1
 926 018f 50       		.byte	0x50
 927 0190 02       		.uleb128 0x2
 928 0191 74       		.byte	0x74
 929 0192 00       		.sleb128 0
 930 0193 00       		.byte	0
 931 0194 00       		.byte	0
 932 0195 0D       		.uleb128 0xd
 933 0196 FA010000 		.4byte	.LASF28
 934 019a 01       		.byte	0x1
 935 019b 2701     		.2byte	0x127
 936 019d 6B000000 		.4byte	0x6b
 937 01a1 00000000 		.4byte	.LFB5
 938 01a5 04000000 		.4byte	.LFE5-.LFB5
 939 01a9 01       		.uleb128 0x1
 940 01aa 9C       		.byte	0x9c
 941 01ab 0E       		.uleb128 0xe
 942 01ac B8010000 		.4byte	.LASF22
 943 01b0 01       		.byte	0x1
 944 01b1 3F01     		.2byte	0x13f
 945 01b3 00000000 		.4byte	.LFB6
 946 01b7 02000000 		.4byte	.LFE6-.LFB6
 947 01bb 01       		.uleb128 0x1
 948 01bc 9C       		.byte	0x9c
 949 01bd D0010000 		.4byte	0x1d0
 950 01c1 0F       		.uleb128 0xf
 951 01c2 48030000 		.4byte	.LASF24
 952 01c6 01       		.byte	0x1
 953 01c7 3F01     		.2byte	0x13f
 954 01c9 6B000000 		.4byte	0x6b
 955 01cd 01       		.uleb128 0x1
 956 01ce 50       		.byte	0x50
 957 01cf 00       		.byte	0
 958 01d0 0E       		.uleb128 0xe
 959 01d1 29020000 		.4byte	.LASF23
 960 01d5 01       		.byte	0x1
 961 01d6 8C03     		.2byte	0x38c
 962 01d8 00000000 		.4byte	.LFB7
 963 01dc 0C000000 		.4byte	.LFE7-.LFB7
 964 01e0 01       		.uleb128 0x1
 965 01e1 9C       		.byte	0x9c
 966 01e2 F5010000 		.4byte	0x1f5
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 46


 967 01e6 0F       		.uleb128 0xf
 968 01e7 77010000 		.4byte	.LASF25
 969 01eb 01       		.byte	0x1
 970 01ec 8C03     		.2byte	0x38c
 971 01ee 6B000000 		.4byte	0x6b
 972 01f2 01       		.uleb128 0x1
 973 01f3 50       		.byte	0x50
 974 01f4 00       		.byte	0
 975 01f5 0E       		.uleb128 0xe
 976 01f6 08030000 		.4byte	.LASF26
 977 01fa 01       		.byte	0x1
 978 01fb AE03     		.2byte	0x3ae
 979 01fd 00000000 		.4byte	.LFB8
 980 0201 18000000 		.4byte	.LFE8-.LFB8
 981 0205 01       		.uleb128 0x1
 982 0206 9C       		.byte	0x9c
 983 0207 1A020000 		.4byte	0x21a
 984 020b 0F       		.uleb128 0xf
 985 020c F8020000 		.4byte	.LASF27
 986 0210 01       		.byte	0x1
 987 0211 AE03     		.2byte	0x3ae
 988 0213 6B000000 		.4byte	0x6b
 989 0217 01       		.uleb128 0x1
 990 0218 50       		.byte	0x50
 991 0219 00       		.byte	0
 992 021a 0D       		.uleb128 0xd
 993 021b D2010000 		.4byte	.LASF29
 994 021f 01       		.byte	0x1
 995 0220 EB03     		.2byte	0x3eb
 996 0222 6B000000 		.4byte	0x6b
 997 0226 00000000 		.4byte	.LFB9
 998 022a 0C000000 		.4byte	.LFE9-.LFB9
 999 022e 01       		.uleb128 0x1
 1000 022f 9C       		.byte	0x9c
 1001 0230 0E       		.uleb128 0xe
 1002 0231 CF020000 		.4byte	.LASF30
 1003 0235 01       		.byte	0x1
 1004 0236 1104     		.2byte	0x411
 1005 0238 00000000 		.4byte	.LFB10
 1006 023c 18000000 		.4byte	.LFE10-.LFB10
 1007 0240 01       		.uleb128 0x1
 1008 0241 9C       		.byte	0x9c
 1009 0242 55020000 		.4byte	0x255
 1010 0246 0F       		.uleb128 0xf
 1011 0247 F8020000 		.4byte	.LASF27
 1012 024b 01       		.byte	0x1
 1013 024c 1104     		.2byte	0x411
 1014 024e 6B000000 		.4byte	0x6b
 1015 0252 01       		.uleb128 0x1
 1016 0253 50       		.byte	0x50
 1017 0254 00       		.byte	0
 1018 0255 0E       		.uleb128 0xe
 1019 0256 7D030000 		.4byte	.LASF31
 1020 025a 01       		.byte	0x1
 1021 025b 7904     		.2byte	0x479
 1022 025d 00000000 		.4byte	.LFB11
 1023 0261 28000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 47


 1024 0265 01       		.uleb128 0x1
 1025 0266 9C       		.byte	0x9c
 1026 0267 95020000 		.4byte	0x295
 1027 026b 10       		.uleb128 0x10
 1028 026c D7000000 		.4byte	.LASF32
 1029 0270 01       		.byte	0x1
 1030 0271 7904     		.2byte	0x479
 1031 0273 95020000 		.4byte	0x295
 1032 0277 26000000 		.4byte	.LLST2
 1033 027b 11       		.uleb128 0x11
 1034 027c 20020000 		.4byte	.LASF33
 1035 0280 01       		.byte	0x1
 1036 0281 7B04     		.2byte	0x47b
 1037 0283 77000000 		.4byte	0x77
 1038 0287 68000000 		.4byte	.LLST3
 1039 028b 09       		.uleb128 0x9
 1040 028c 12000000 		.4byte	.LVL19
 1041 0290 30020000 		.4byte	0x230
 1042 0294 00       		.byte	0
 1043 0295 12       		.uleb128 0x12
 1044 0296 04       		.byte	0x4
 1045 0297 9B020000 		.4byte	0x29b
 1046 029b 13       		.uleb128 0x13
 1047 029c 91000000 		.4byte	0x91
 1048 02a0 0E       		.uleb128 0xe
 1049 02a1 39010000 		.4byte	.LASF34
 1050 02a5 01       		.byte	0x1
 1051 02a6 A704     		.2byte	0x4a7
 1052 02a8 00000000 		.4byte	.LFB12
 1053 02ac 28000000 		.4byte	.LFE12-.LFB12
 1054 02b0 01       		.uleb128 0x1
 1055 02b1 9C       		.byte	0x9c
 1056 02b2 F0020000 		.4byte	0x2f0
 1057 02b6 10       		.uleb128 0x10
 1058 02b7 D7000000 		.4byte	.LASF32
 1059 02bb 01       		.byte	0x1
 1060 02bc A704     		.2byte	0x4a7
 1061 02be F0020000 		.4byte	0x2f0
 1062 02c2 A9000000 		.4byte	.LLST4
 1063 02c6 10       		.uleb128 0x10
 1064 02c7 47010000 		.4byte	.LASF35
 1065 02cb 01       		.byte	0x1
 1066 02cc A704     		.2byte	0x4a7
 1067 02ce 6B000000 		.4byte	0x6b
 1068 02d2 EB000000 		.4byte	.LLST5
 1069 02d6 11       		.uleb128 0x11
 1070 02d7 20020000 		.4byte	.LASF33
 1071 02db 01       		.byte	0x1
 1072 02dc AA04     		.2byte	0x4aa
 1073 02de 6B000000 		.4byte	0x6b
 1074 02e2 25010000 		.4byte	.LLST6
 1075 02e6 09       		.uleb128 0x9
 1076 02e7 16000000 		.4byte	.LVL29
 1077 02eb 30020000 		.4byte	0x230
 1078 02ef 00       		.byte	0
 1079 02f0 12       		.uleb128 0x12
 1080 02f1 04       		.byte	0x4
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 48


 1081 02f2 F6020000 		.4byte	0x2f6
 1082 02f6 13       		.uleb128 0x13
 1083 02f7 6B000000 		.4byte	0x6b
 1084 02fb 0E       		.uleb128 0xe
 1085 02fc 13020000 		.4byte	.LASF36
 1086 0300 01       		.byte	0x1
 1087 0301 CE04     		.2byte	0x4ce
 1088 0303 00000000 		.4byte	.LFB13
 1089 0307 20000000 		.4byte	.LFE13-.LFB13
 1090 030b 01       		.uleb128 0x1
 1091 030c 9C       		.byte	0x9c
 1092 030d 4D030000 		.4byte	0x34d
 1093 0311 10       		.uleb128 0x10
 1094 0312 F8020000 		.4byte	.LASF27
 1095 0316 01       		.byte	0x1
 1096 0317 CE04     		.2byte	0x4ce
 1097 0319 6B000000 		.4byte	0x6b
 1098 031d 66010000 		.4byte	.LLST7
 1099 0321 09       		.uleb128 0x9
 1100 0322 0E000000 		.4byte	.LVL37
 1101 0326 30020000 		.4byte	0x230
 1102 032a 0A       		.uleb128 0xa
 1103 032b 14000000 		.4byte	.LVL38
 1104 032f 30020000 		.4byte	0x230
 1105 0333 3D030000 		.4byte	0x33d
 1106 0337 0B       		.uleb128 0xb
 1107 0338 01       		.uleb128 0x1
 1108 0339 50       		.byte	0x50
 1109 033a 01       		.uleb128 0x1
 1110 033b 3D       		.byte	0x3d
 1111 033c 00       		.byte	0
 1112 033d 0C       		.uleb128 0xc
 1113 033e 1A000000 		.4byte	.LVL39
 1114 0342 30020000 		.4byte	0x230
 1115 0346 0B       		.uleb128 0xb
 1116 0347 01       		.uleb128 0x1
 1117 0348 50       		.byte	0x50
 1118 0349 01       		.uleb128 0x1
 1119 034a 3A       		.byte	0x3a
 1120 034b 00       		.byte	0
 1121 034c 00       		.byte	0
 1122 034d 14       		.uleb128 0x14
 1123 034e 1D000000 		.4byte	.LASF53
 1124 0352 01       		.byte	0x1
 1125 0353 F904     		.2byte	0x4f9
 1126 0355 6B000000 		.4byte	0x6b
 1127 0359 00000000 		.4byte	.LFB14
 1128 035d 20000000 		.4byte	.LFE14-.LFB14
 1129 0361 01       		.uleb128 0x1
 1130 0362 9C       		.byte	0x9c
 1131 0363 78030000 		.4byte	0x378
 1132 0367 11       		.uleb128 0x11
 1133 0368 8C030000 		.4byte	.LASF37
 1134 036c 01       		.byte	0x1
 1135 036d FC04     		.2byte	0x4fc
 1136 036f 6B000000 		.4byte	0x6b
 1137 0373 87010000 		.4byte	.LLST8
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 49


 1138 0377 00       		.byte	0
 1139 0378 0E       		.uleb128 0xe
 1140 0379 2B030000 		.4byte	.LASF38
 1141 037d 01       		.byte	0x1
 1142 037e 4A05     		.2byte	0x54a
 1143 0380 00000000 		.4byte	.LFB15
 1144 0384 24000000 		.4byte	.LFE15-.LFB15
 1145 0388 01       		.uleb128 0x1
 1146 0389 9C       		.byte	0x9c
 1147 038a B1030000 		.4byte	0x3b1
 1148 038e 11       		.uleb128 0x11
 1149 038f 51010000 		.4byte	.LASF21
 1150 0393 01       		.byte	0x1
 1151 0394 4C05     		.2byte	0x54c
 1152 0396 6B000000 		.4byte	0x6b
 1153 039a B0010000 		.4byte	.LLST9
 1154 039e 09       		.uleb128 0x9
 1155 039f 06000000 		.4byte	.LVL45
 1156 03a3 3A040000 		.4byte	0x43a
 1157 03a7 09       		.uleb128 0x9
 1158 03a8 1E000000 		.4byte	.LVL46
 1159 03ac 50040000 		.4byte	0x450
 1160 03b0 00       		.byte	0
 1161 03b1 0E       		.uleb128 0xe
 1162 03b2 85010000 		.4byte	.LASF39
 1163 03b6 01       		.byte	0x1
 1164 03b7 A005     		.2byte	0x5a0
 1165 03b9 00000000 		.4byte	.LFB16
 1166 03bd 60000000 		.4byte	.LFE16-.LFB16
 1167 03c1 01       		.uleb128 0x1
 1168 03c2 9C       		.byte	0x9c
 1169 03c3 04040000 		.4byte	0x404
 1170 03c7 10       		.uleb128 0x10
 1171 03c8 19030000 		.4byte	.LASF40
 1172 03cc 01       		.byte	0x1
 1173 03cd A005     		.2byte	0x5a0
 1174 03cf 6B000000 		.4byte	0x6b
 1175 03d3 C3010000 		.4byte	.LLST10
 1176 03d7 15       		.uleb128 0x15
 1177 03d8 08000000 		.4byte	.LBB2
 1178 03dc 44000000 		.4byte	.LBE2-.LBB2
 1179 03e0 11       		.uleb128 0x11
 1180 03e1 32000000 		.4byte	.LASF41
 1181 03e5 01       		.byte	0x1
 1182 03e6 A805     		.2byte	0x5a8
 1183 03e8 6B000000 		.4byte	0x6b
 1184 03ec E4010000 		.4byte	.LLST11
 1185 03f0 16       		.uleb128 0x16
 1186 03f1 0E000000 		.4byte	.LASF42
 1187 03f5 01       		.byte	0x1
 1188 03f6 D005     		.2byte	0x5d0
 1189 03f8 6B000000 		.4byte	0x6b
 1190 03fc 05       		.uleb128 0x5
 1191 03fd 03       		.byte	0x3
 1192 03fe 01000000 		.4byte	txPeriod.5028
 1193 0402 00       		.byte	0
 1194 0403 00       		.byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 50


 1195 0404 0E       		.uleb128 0xe
 1196 0405 50000000 		.4byte	.LASF43
 1197 0409 01       		.byte	0x1
 1198 040a 2406     		.2byte	0x624
 1199 040c 00000000 		.4byte	.LFB17
 1200 0410 02000000 		.4byte	.LFE17-.LFB17
 1201 0414 01       		.uleb128 0x1
 1202 0415 9C       		.byte	0x9c
 1203 0416 29040000 		.4byte	0x429
 1204 041a 0F       		.uleb128 0xf
 1205 041b FB000000 		.4byte	.LASF44
 1206 041f 01       		.byte	0x1
 1207 0420 2406     		.2byte	0x624
 1208 0422 6B000000 		.4byte	0x6b
 1209 0426 01       		.uleb128 0x1
 1210 0427 50       		.byte	0x50
 1211 0428 00       		.byte	0
 1212 0429 17       		.uleb128 0x17
 1213 042a AC000000 		.4byte	.LASF54
 1214 042e 01       		.byte	0x1
 1215 042f 1B       		.byte	0x1b
 1216 0430 6B000000 		.4byte	0x6b
 1217 0434 05       		.uleb128 0x5
 1218 0435 03       		.byte	0x3
 1219 0436 00000000 		.4byte	UART_initVar
 1220 043a 18       		.uleb128 0x18
 1221 043b 94010000 		.4byte	.LASF45
 1222 043f 94010000 		.4byte	.LASF45
 1223 0443 03       		.byte	0x3
 1224 0444 E5       		.byte	0xe5
 1225 0445 18       		.uleb128 0x18
 1226 0446 3A000000 		.4byte	.LASF46
 1227 044a 3A000000 		.4byte	.LASF46
 1228 044e 04       		.byte	0x4
 1229 044f 1D       		.byte	0x1d
 1230 0450 18       		.uleb128 0x18
 1231 0451 E4010000 		.4byte	.LASF47
 1232 0455 E4010000 		.4byte	.LASF47
 1233 0459 03       		.byte	0x3
 1234 045a E6       		.byte	0xe6
 1235 045b 18       		.uleb128 0x18
 1236 045c DC020000 		.4byte	.LASF48
 1237 0460 DC020000 		.4byte	.LASF48
 1238 0464 04       		.byte	0x4
 1239 0465 27       		.byte	0x27
 1240 0466 00       		.byte	0
 1241              		.section	.debug_abbrev,"",%progbits
 1242              	.Ldebug_abbrev0:
 1243 0000 01       		.uleb128 0x1
 1244 0001 11       		.uleb128 0x11
 1245 0002 01       		.byte	0x1
 1246 0003 25       		.uleb128 0x25
 1247 0004 0E       		.uleb128 0xe
 1248 0005 13       		.uleb128 0x13
 1249 0006 0B       		.uleb128 0xb
 1250 0007 03       		.uleb128 0x3
 1251 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 51


 1252 0009 1B       		.uleb128 0x1b
 1253 000a 0E       		.uleb128 0xe
 1254 000b 55       		.uleb128 0x55
 1255 000c 17       		.uleb128 0x17
 1256 000d 11       		.uleb128 0x11
 1257 000e 01       		.uleb128 0x1
 1258 000f 10       		.uleb128 0x10
 1259 0010 17       		.uleb128 0x17
 1260 0011 00       		.byte	0
 1261 0012 00       		.byte	0
 1262 0013 02       		.uleb128 0x2
 1263 0014 24       		.uleb128 0x24
 1264 0015 00       		.byte	0
 1265 0016 0B       		.uleb128 0xb
 1266 0017 0B       		.uleb128 0xb
 1267 0018 3E       		.uleb128 0x3e
 1268 0019 0B       		.uleb128 0xb
 1269 001a 03       		.uleb128 0x3
 1270 001b 0E       		.uleb128 0xe
 1271 001c 00       		.byte	0
 1272 001d 00       		.byte	0
 1273 001e 03       		.uleb128 0x3
 1274 001f 24       		.uleb128 0x24
 1275 0020 00       		.byte	0
 1276 0021 0B       		.uleb128 0xb
 1277 0022 0B       		.uleb128 0xb
 1278 0023 3E       		.uleb128 0x3e
 1279 0024 0B       		.uleb128 0xb
 1280 0025 03       		.uleb128 0x3
 1281 0026 08       		.uleb128 0x8
 1282 0027 00       		.byte	0
 1283 0028 00       		.byte	0
 1284 0029 04       		.uleb128 0x4
 1285 002a 16       		.uleb128 0x16
 1286 002b 00       		.byte	0
 1287 002c 03       		.uleb128 0x3
 1288 002d 0E       		.uleb128 0xe
 1289 002e 3A       		.uleb128 0x3a
 1290 002f 0B       		.uleb128 0xb
 1291 0030 3B       		.uleb128 0x3b
 1292 0031 05       		.uleb128 0x5
 1293 0032 49       		.uleb128 0x49
 1294 0033 13       		.uleb128 0x13
 1295 0034 00       		.byte	0
 1296 0035 00       		.byte	0
 1297 0036 05       		.uleb128 0x5
 1298 0037 35       		.uleb128 0x35
 1299 0038 00       		.byte	0
 1300 0039 49       		.uleb128 0x49
 1301 003a 13       		.uleb128 0x13
 1302 003b 00       		.byte	0
 1303 003c 00       		.byte	0
 1304 003d 06       		.uleb128 0x6
 1305 003e 2E       		.uleb128 0x2e
 1306 003f 00       		.byte	0
 1307 0040 3F       		.uleb128 0x3f
 1308 0041 19       		.uleb128 0x19
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 52


 1309 0042 03       		.uleb128 0x3
 1310 0043 0E       		.uleb128 0xe
 1311 0044 3A       		.uleb128 0x3a
 1312 0045 0B       		.uleb128 0xb
 1313 0046 3B       		.uleb128 0x3b
 1314 0047 0B       		.uleb128 0xb
 1315 0048 27       		.uleb128 0x27
 1316 0049 19       		.uleb128 0x19
 1317 004a 11       		.uleb128 0x11
 1318 004b 01       		.uleb128 0x1
 1319 004c 12       		.uleb128 0x12
 1320 004d 06       		.uleb128 0x6
 1321 004e 40       		.uleb128 0x40
 1322 004f 18       		.uleb128 0x18
 1323 0050 9742     		.uleb128 0x2117
 1324 0052 19       		.uleb128 0x19
 1325 0053 00       		.byte	0
 1326 0054 00       		.byte	0
 1327 0055 07       		.uleb128 0x7
 1328 0056 2E       		.uleb128 0x2e
 1329 0057 01       		.byte	0x1
 1330 0058 3F       		.uleb128 0x3f
 1331 0059 19       		.uleb128 0x19
 1332 005a 03       		.uleb128 0x3
 1333 005b 0E       		.uleb128 0xe
 1334 005c 3A       		.uleb128 0x3a
 1335 005d 0B       		.uleb128 0xb
 1336 005e 3B       		.uleb128 0x3b
 1337 005f 0B       		.uleb128 0xb
 1338 0060 27       		.uleb128 0x27
 1339 0061 19       		.uleb128 0x19
 1340 0062 11       		.uleb128 0x11
 1341 0063 01       		.uleb128 0x1
 1342 0064 12       		.uleb128 0x12
 1343 0065 06       		.uleb128 0x6
 1344 0066 40       		.uleb128 0x40
 1345 0067 18       		.uleb128 0x18
 1346 0068 9742     		.uleb128 0x2117
 1347 006a 19       		.uleb128 0x19
 1348 006b 01       		.uleb128 0x1
 1349 006c 13       		.uleb128 0x13
 1350 006d 00       		.byte	0
 1351 006e 00       		.byte	0
 1352 006f 08       		.uleb128 0x8
 1353 0070 34       		.uleb128 0x34
 1354 0071 00       		.byte	0
 1355 0072 03       		.uleb128 0x3
 1356 0073 0E       		.uleb128 0xe
 1357 0074 3A       		.uleb128 0x3a
 1358 0075 0B       		.uleb128 0xb
 1359 0076 3B       		.uleb128 0x3b
 1360 0077 0B       		.uleb128 0xb
 1361 0078 49       		.uleb128 0x49
 1362 0079 13       		.uleb128 0x13
 1363 007a 02       		.uleb128 0x2
 1364 007b 17       		.uleb128 0x17
 1365 007c 00       		.byte	0
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 53


 1366 007d 00       		.byte	0
 1367 007e 09       		.uleb128 0x9
 1368 007f 898201   		.uleb128 0x4109
 1369 0082 00       		.byte	0
 1370 0083 11       		.uleb128 0x11
 1371 0084 01       		.uleb128 0x1
 1372 0085 31       		.uleb128 0x31
 1373 0086 13       		.uleb128 0x13
 1374 0087 00       		.byte	0
 1375 0088 00       		.byte	0
 1376 0089 0A       		.uleb128 0xa
 1377 008a 898201   		.uleb128 0x4109
 1378 008d 01       		.byte	0x1
 1379 008e 11       		.uleb128 0x11
 1380 008f 01       		.uleb128 0x1
 1381 0090 31       		.uleb128 0x31
 1382 0091 13       		.uleb128 0x13
 1383 0092 01       		.uleb128 0x1
 1384 0093 13       		.uleb128 0x13
 1385 0094 00       		.byte	0
 1386 0095 00       		.byte	0
 1387 0096 0B       		.uleb128 0xb
 1388 0097 8A8201   		.uleb128 0x410a
 1389 009a 00       		.byte	0
 1390 009b 02       		.uleb128 0x2
 1391 009c 18       		.uleb128 0x18
 1392 009d 9142     		.uleb128 0x2111
 1393 009f 18       		.uleb128 0x18
 1394 00a0 00       		.byte	0
 1395 00a1 00       		.byte	0
 1396 00a2 0C       		.uleb128 0xc
 1397 00a3 898201   		.uleb128 0x4109
 1398 00a6 01       		.byte	0x1
 1399 00a7 11       		.uleb128 0x11
 1400 00a8 01       		.uleb128 0x1
 1401 00a9 31       		.uleb128 0x31
 1402 00aa 13       		.uleb128 0x13
 1403 00ab 00       		.byte	0
 1404 00ac 00       		.byte	0
 1405 00ad 0D       		.uleb128 0xd
 1406 00ae 2E       		.uleb128 0x2e
 1407 00af 00       		.byte	0
 1408 00b0 3F       		.uleb128 0x3f
 1409 00b1 19       		.uleb128 0x19
 1410 00b2 03       		.uleb128 0x3
 1411 00b3 0E       		.uleb128 0xe
 1412 00b4 3A       		.uleb128 0x3a
 1413 00b5 0B       		.uleb128 0xb
 1414 00b6 3B       		.uleb128 0x3b
 1415 00b7 05       		.uleb128 0x5
 1416 00b8 27       		.uleb128 0x27
 1417 00b9 19       		.uleb128 0x19
 1418 00ba 49       		.uleb128 0x49
 1419 00bb 13       		.uleb128 0x13
 1420 00bc 11       		.uleb128 0x11
 1421 00bd 01       		.uleb128 0x1
 1422 00be 12       		.uleb128 0x12
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 54


 1423 00bf 06       		.uleb128 0x6
 1424 00c0 40       		.uleb128 0x40
 1425 00c1 18       		.uleb128 0x18
 1426 00c2 9742     		.uleb128 0x2117
 1427 00c4 19       		.uleb128 0x19
 1428 00c5 00       		.byte	0
 1429 00c6 00       		.byte	0
 1430 00c7 0E       		.uleb128 0xe
 1431 00c8 2E       		.uleb128 0x2e
 1432 00c9 01       		.byte	0x1
 1433 00ca 3F       		.uleb128 0x3f
 1434 00cb 19       		.uleb128 0x19
 1435 00cc 03       		.uleb128 0x3
 1436 00cd 0E       		.uleb128 0xe
 1437 00ce 3A       		.uleb128 0x3a
 1438 00cf 0B       		.uleb128 0xb
 1439 00d0 3B       		.uleb128 0x3b
 1440 00d1 05       		.uleb128 0x5
 1441 00d2 27       		.uleb128 0x27
 1442 00d3 19       		.uleb128 0x19
 1443 00d4 11       		.uleb128 0x11
 1444 00d5 01       		.uleb128 0x1
 1445 00d6 12       		.uleb128 0x12
 1446 00d7 06       		.uleb128 0x6
 1447 00d8 40       		.uleb128 0x40
 1448 00d9 18       		.uleb128 0x18
 1449 00da 9742     		.uleb128 0x2117
 1450 00dc 19       		.uleb128 0x19
 1451 00dd 01       		.uleb128 0x1
 1452 00de 13       		.uleb128 0x13
 1453 00df 00       		.byte	0
 1454 00e0 00       		.byte	0
 1455 00e1 0F       		.uleb128 0xf
 1456 00e2 05       		.uleb128 0x5
 1457 00e3 00       		.byte	0
 1458 00e4 03       		.uleb128 0x3
 1459 00e5 0E       		.uleb128 0xe
 1460 00e6 3A       		.uleb128 0x3a
 1461 00e7 0B       		.uleb128 0xb
 1462 00e8 3B       		.uleb128 0x3b
 1463 00e9 05       		.uleb128 0x5
 1464 00ea 49       		.uleb128 0x49
 1465 00eb 13       		.uleb128 0x13
 1466 00ec 02       		.uleb128 0x2
 1467 00ed 18       		.uleb128 0x18
 1468 00ee 00       		.byte	0
 1469 00ef 00       		.byte	0
 1470 00f0 10       		.uleb128 0x10
 1471 00f1 05       		.uleb128 0x5
 1472 00f2 00       		.byte	0
 1473 00f3 03       		.uleb128 0x3
 1474 00f4 0E       		.uleb128 0xe
 1475 00f5 3A       		.uleb128 0x3a
 1476 00f6 0B       		.uleb128 0xb
 1477 00f7 3B       		.uleb128 0x3b
 1478 00f8 05       		.uleb128 0x5
 1479 00f9 49       		.uleb128 0x49
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 55


 1480 00fa 13       		.uleb128 0x13
 1481 00fb 02       		.uleb128 0x2
 1482 00fc 17       		.uleb128 0x17
 1483 00fd 00       		.byte	0
 1484 00fe 00       		.byte	0
 1485 00ff 11       		.uleb128 0x11
 1486 0100 34       		.uleb128 0x34
 1487 0101 00       		.byte	0
 1488 0102 03       		.uleb128 0x3
 1489 0103 0E       		.uleb128 0xe
 1490 0104 3A       		.uleb128 0x3a
 1491 0105 0B       		.uleb128 0xb
 1492 0106 3B       		.uleb128 0x3b
 1493 0107 05       		.uleb128 0x5
 1494 0108 49       		.uleb128 0x49
 1495 0109 13       		.uleb128 0x13
 1496 010a 02       		.uleb128 0x2
 1497 010b 17       		.uleb128 0x17
 1498 010c 00       		.byte	0
 1499 010d 00       		.byte	0
 1500 010e 12       		.uleb128 0x12
 1501 010f 0F       		.uleb128 0xf
 1502 0110 00       		.byte	0
 1503 0111 0B       		.uleb128 0xb
 1504 0112 0B       		.uleb128 0xb
 1505 0113 49       		.uleb128 0x49
 1506 0114 13       		.uleb128 0x13
 1507 0115 00       		.byte	0
 1508 0116 00       		.byte	0
 1509 0117 13       		.uleb128 0x13
 1510 0118 26       		.uleb128 0x26
 1511 0119 00       		.byte	0
 1512 011a 49       		.uleb128 0x49
 1513 011b 13       		.uleb128 0x13
 1514 011c 00       		.byte	0
 1515 011d 00       		.byte	0
 1516 011e 14       		.uleb128 0x14
 1517 011f 2E       		.uleb128 0x2e
 1518 0120 01       		.byte	0x1
 1519 0121 3F       		.uleb128 0x3f
 1520 0122 19       		.uleb128 0x19
 1521 0123 03       		.uleb128 0x3
 1522 0124 0E       		.uleb128 0xe
 1523 0125 3A       		.uleb128 0x3a
 1524 0126 0B       		.uleb128 0xb
 1525 0127 3B       		.uleb128 0x3b
 1526 0128 05       		.uleb128 0x5
 1527 0129 27       		.uleb128 0x27
 1528 012a 19       		.uleb128 0x19
 1529 012b 49       		.uleb128 0x49
 1530 012c 13       		.uleb128 0x13
 1531 012d 11       		.uleb128 0x11
 1532 012e 01       		.uleb128 0x1
 1533 012f 12       		.uleb128 0x12
 1534 0130 06       		.uleb128 0x6
 1535 0131 40       		.uleb128 0x40
 1536 0132 18       		.uleb128 0x18
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 56


 1537 0133 9742     		.uleb128 0x2117
 1538 0135 19       		.uleb128 0x19
 1539 0136 01       		.uleb128 0x1
 1540 0137 13       		.uleb128 0x13
 1541 0138 00       		.byte	0
 1542 0139 00       		.byte	0
 1543 013a 15       		.uleb128 0x15
 1544 013b 0B       		.uleb128 0xb
 1545 013c 01       		.byte	0x1
 1546 013d 11       		.uleb128 0x11
 1547 013e 01       		.uleb128 0x1
 1548 013f 12       		.uleb128 0x12
 1549 0140 06       		.uleb128 0x6
 1550 0141 00       		.byte	0
 1551 0142 00       		.byte	0
 1552 0143 16       		.uleb128 0x16
 1553 0144 34       		.uleb128 0x34
 1554 0145 00       		.byte	0
 1555 0146 03       		.uleb128 0x3
 1556 0147 0E       		.uleb128 0xe
 1557 0148 3A       		.uleb128 0x3a
 1558 0149 0B       		.uleb128 0xb
 1559 014a 3B       		.uleb128 0x3b
 1560 014b 05       		.uleb128 0x5
 1561 014c 49       		.uleb128 0x49
 1562 014d 13       		.uleb128 0x13
 1563 014e 02       		.uleb128 0x2
 1564 014f 18       		.uleb128 0x18
 1565 0150 00       		.byte	0
 1566 0151 00       		.byte	0
 1567 0152 17       		.uleb128 0x17
 1568 0153 34       		.uleb128 0x34
 1569 0154 00       		.byte	0
 1570 0155 03       		.uleb128 0x3
 1571 0156 0E       		.uleb128 0xe
 1572 0157 3A       		.uleb128 0x3a
 1573 0158 0B       		.uleb128 0xb
 1574 0159 3B       		.uleb128 0x3b
 1575 015a 0B       		.uleb128 0xb
 1576 015b 49       		.uleb128 0x49
 1577 015c 13       		.uleb128 0x13
 1578 015d 3F       		.uleb128 0x3f
 1579 015e 19       		.uleb128 0x19
 1580 015f 02       		.uleb128 0x2
 1581 0160 18       		.uleb128 0x18
 1582 0161 00       		.byte	0
 1583 0162 00       		.byte	0
 1584 0163 18       		.uleb128 0x18
 1585 0164 2E       		.uleb128 0x2e
 1586 0165 00       		.byte	0
 1587 0166 3F       		.uleb128 0x3f
 1588 0167 19       		.uleb128 0x19
 1589 0168 3C       		.uleb128 0x3c
 1590 0169 19       		.uleb128 0x19
 1591 016a 6E       		.uleb128 0x6e
 1592 016b 0E       		.uleb128 0xe
 1593 016c 03       		.uleb128 0x3
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 57


 1594 016d 0E       		.uleb128 0xe
 1595 016e 3A       		.uleb128 0x3a
 1596 016f 0B       		.uleb128 0xb
 1597 0170 3B       		.uleb128 0x3b
 1598 0171 0B       		.uleb128 0xb
 1599 0172 00       		.byte	0
 1600 0173 00       		.byte	0
 1601 0174 00       		.byte	0
 1602              		.section	.debug_loc,"",%progbits
 1603              	.Ldebug_loc0:
 1604              	.LLST0:
 1605 0000 08000000 		.4byte	.LVL1
 1606 0004 20000000 		.4byte	.LVL4
 1607 0008 0100     		.2byte	0x1
 1608 000a 54       		.byte	0x54
 1609 000b 00000000 		.4byte	0
 1610 000f 00000000 		.4byte	0
 1611              	.LLST1:
 1612 0013 08000000 		.4byte	.LVL8
 1613 0017 1C000000 		.4byte	.LVL11
 1614 001b 0100     		.2byte	0x1
 1615 001d 54       		.byte	0x54
 1616 001e 00000000 		.4byte	0
 1617 0022 00000000 		.4byte	0
 1618              	.LLST2:
 1619 0026 00000000 		.4byte	.LVL16
 1620 002a 0E000000 		.4byte	.LVL18
 1621 002e 0100     		.2byte	0x1
 1622 0030 50       		.byte	0x50
 1623 0031 0E000000 		.4byte	.LVL18
 1624 0035 18000000 		.4byte	.LVL22
 1625 0039 0100     		.2byte	0x1
 1626 003b 55       		.byte	0x55
 1627 003c 18000000 		.4byte	.LVL22
 1628 0040 1A000000 		.4byte	.LVL23
 1629 0044 0100     		.2byte	0x1
 1630 0046 50       		.byte	0x50
 1631 0047 1A000000 		.4byte	.LVL23
 1632 004b 20000000 		.4byte	.LVL25
 1633 004f 0100     		.2byte	0x1
 1634 0051 55       		.byte	0x55
 1635 0052 20000000 		.4byte	.LVL25
 1636 0056 28000000 		.4byte	.LFE11
 1637 005a 0400     		.2byte	0x4
 1638 005c F3       		.byte	0xf3
 1639 005d 01       		.uleb128 0x1
 1640 005e 50       		.byte	0x50
 1641 005f 9F       		.byte	0x9f
 1642 0060 00000000 		.4byte	0
 1643 0064 00000000 		.4byte	0
 1644              	.LLST3:
 1645 0068 04000000 		.4byte	.LVL17
 1646 006c 0E000000 		.4byte	.LVL18
 1647 0070 0200     		.2byte	0x2
 1648 0072 30       		.byte	0x30
 1649 0073 9F       		.byte	0x9f
 1650 0074 0E000000 		.4byte	.LVL18
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 58


 1651 0078 14000000 		.4byte	.LVL20
 1652 007c 0100     		.2byte	0x1
 1653 007e 54       		.byte	0x54
 1654 007f 16000000 		.4byte	.LVL21
 1655 0083 18000000 		.4byte	.LVL22
 1656 0087 0100     		.2byte	0x1
 1657 0089 54       		.byte	0x54
 1658 008a 18000000 		.4byte	.LVL22
 1659 008e 1A000000 		.4byte	.LVL23
 1660 0092 0200     		.2byte	0x2
 1661 0094 30       		.byte	0x30
 1662 0095 9F       		.byte	0x9f
 1663 0096 1A000000 		.4byte	.LVL23
 1664 009a 20000000 		.4byte	.LVL24
 1665 009e 0100     		.2byte	0x1
 1666 00a0 54       		.byte	0x54
 1667 00a1 00000000 		.4byte	0
 1668 00a5 00000000 		.4byte	0
 1669              	.LLST4:
 1670 00a9 00000000 		.4byte	.LVL26
 1671 00ad 10000000 		.4byte	.LVL28
 1672 00b1 0100     		.2byte	0x1
 1673 00b3 50       		.byte	0x50
 1674 00b4 10000000 		.4byte	.LVL28
 1675 00b8 1C000000 		.4byte	.LVL32
 1676 00bc 0100     		.2byte	0x1
 1677 00be 56       		.byte	0x56
 1678 00bf 1C000000 		.4byte	.LVL32
 1679 00c3 1E000000 		.4byte	.LVL33
 1680 00c7 0100     		.2byte	0x1
 1681 00c9 50       		.byte	0x50
 1682 00ca 1E000000 		.4byte	.LVL33
 1683 00ce 22000000 		.4byte	.LVL35
 1684 00d2 0100     		.2byte	0x1
 1685 00d4 56       		.byte	0x56
 1686 00d5 22000000 		.4byte	.LVL35
 1687 00d9 28000000 		.4byte	.LFE12
 1688 00dd 0400     		.2byte	0x4
 1689 00df F3       		.byte	0xf3
 1690 00e0 01       		.uleb128 0x1
 1691 00e1 50       		.byte	0x50
 1692 00e2 9F       		.byte	0x9f
 1693 00e3 00000000 		.4byte	0
 1694 00e7 00000000 		.4byte	0
 1695              	.LLST5:
 1696 00eb 00000000 		.4byte	.LVL26
 1697 00ef 10000000 		.4byte	.LVL28
 1698 00f3 0100     		.2byte	0x1
 1699 00f5 51       		.byte	0x51
 1700 00f6 10000000 		.4byte	.LVL28
 1701 00fa 1C000000 		.4byte	.LVL32
 1702 00fe 0400     		.2byte	0x4
 1703 0100 F3       		.byte	0xf3
 1704 0101 01       		.uleb128 0x1
 1705 0102 51       		.byte	0x51
 1706 0103 9F       		.byte	0x9f
 1707 0104 1C000000 		.4byte	.LVL32
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 59


 1708 0108 1E000000 		.4byte	.LVL33
 1709 010c 0100     		.2byte	0x1
 1710 010e 51       		.byte	0x51
 1711 010f 1E000000 		.4byte	.LVL33
 1712 0113 28000000 		.4byte	.LFE12
 1713 0117 0400     		.2byte	0x4
 1714 0119 F3       		.byte	0xf3
 1715 011a 01       		.uleb128 0x1
 1716 011b 51       		.byte	0x51
 1717 011c 9F       		.byte	0x9f
 1718 011d 00000000 		.4byte	0
 1719 0121 00000000 		.4byte	0
 1720              	.LLST6:
 1721 0125 06000000 		.4byte	.LVL27
 1722 0129 10000000 		.4byte	.LVL28
 1723 012d 0200     		.2byte	0x2
 1724 012f 30       		.byte	0x30
 1725 0130 9F       		.byte	0x9f
 1726 0131 10000000 		.4byte	.LVL28
 1727 0135 18000000 		.4byte	.LVL30
 1728 0139 0100     		.2byte	0x1
 1729 013b 54       		.byte	0x54
 1730 013c 1A000000 		.4byte	.LVL31
 1731 0140 1C000000 		.4byte	.LVL32
 1732 0144 0100     		.2byte	0x1
 1733 0146 54       		.byte	0x54
 1734 0147 1C000000 		.4byte	.LVL32
 1735 014b 1E000000 		.4byte	.LVL33
 1736 014f 0200     		.2byte	0x2
 1737 0151 30       		.byte	0x30
 1738 0152 9F       		.byte	0x9f
 1739 0153 1E000000 		.4byte	.LVL33
 1740 0157 22000000 		.4byte	.LVL34
 1741 015b 0100     		.2byte	0x1
 1742 015d 54       		.byte	0x54
 1743 015e 00000000 		.4byte	0
 1744 0162 00000000 		.4byte	0
 1745              	.LLST7:
 1746 0166 00000000 		.4byte	.LVL36
 1747 016a 0D000000 		.4byte	.LVL37-1
 1748 016e 0100     		.2byte	0x1
 1749 0170 50       		.byte	0x50
 1750 0171 0D000000 		.4byte	.LVL37-1
 1751 0175 20000000 		.4byte	.LFE13
 1752 0179 0400     		.2byte	0x4
 1753 017b F3       		.byte	0xf3
 1754 017c 01       		.uleb128 0x1
 1755 017d 50       		.byte	0x50
 1756 017e 9F       		.byte	0x9f
 1757 017f 00000000 		.4byte	0
 1758 0183 00000000 		.4byte	0
 1759              	.LLST8:
 1760 0187 06000000 		.4byte	.LVL40
 1761 018b 0E000000 		.4byte	.LVL41
 1762 018f 0100     		.2byte	0x1
 1763 0191 53       		.byte	0x53
 1764 0192 12000000 		.4byte	.LVL42
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 60


 1765 0196 16000000 		.4byte	.LVL43
 1766 019a 0100     		.2byte	0x1
 1767 019c 53       		.byte	0x53
 1768 019d 18000000 		.4byte	.LVL44
 1769 01a1 20000000 		.4byte	.LFE14
 1770 01a5 0100     		.2byte	0x1
 1771 01a7 50       		.byte	0x50
 1772 01a8 00000000 		.4byte	0
 1773 01ac 00000000 		.4byte	0
 1774              	.LLST9:
 1775 01b0 06000000 		.4byte	.LVL45
 1776 01b4 1D000000 		.4byte	.LVL46-1
 1777 01b8 0100     		.2byte	0x1
 1778 01ba 50       		.byte	0x50
 1779 01bb 00000000 		.4byte	0
 1780 01bf 00000000 		.4byte	0
 1781              	.LLST10:
 1782 01c3 00000000 		.4byte	.LVL47
 1783 01c7 3E000000 		.4byte	.LVL52
 1784 01cb 0100     		.2byte	0x1
 1785 01cd 50       		.byte	0x50
 1786 01ce 3E000000 		.4byte	.LVL52
 1787 01d2 60000000 		.4byte	.LFE16
 1788 01d6 0400     		.2byte	0x4
 1789 01d8 F3       		.byte	0xf3
 1790 01d9 01       		.uleb128 0x1
 1791 01da 50       		.byte	0x50
 1792 01db 9F       		.byte	0x9f
 1793 01dc 00000000 		.4byte	0
 1794 01e0 00000000 		.4byte	0
 1795              	.LLST11:
 1796 01e4 26000000 		.4byte	.LVL48
 1797 01e8 2A000000 		.4byte	.LVL49
 1798 01ec 0100     		.2byte	0x1
 1799 01ee 53       		.byte	0x53
 1800 01ef 36000000 		.4byte	.LVL50
 1801 01f3 3C000000 		.4byte	.LVL51
 1802 01f7 0100     		.2byte	0x1
 1803 01f9 52       		.byte	0x52
 1804 01fa 00000000 		.4byte	0
 1805 01fe 00000000 		.4byte	0
 1806              		.section	.debug_aranges,"",%progbits
 1807 0000 9C000000 		.4byte	0x9c
 1808 0004 0200     		.2byte	0x2
 1809 0006 00000000 		.4byte	.Ldebug_info0
 1810 000a 04       		.byte	0x4
 1811 000b 00       		.byte	0
 1812 000c 0000     		.2byte	0
 1813 000e 0000     		.2byte	0
 1814 0010 00000000 		.4byte	.LFB2
 1815 0014 20000000 		.4byte	.LFE2-.LFB2
 1816 0018 00000000 		.4byte	.LFB3
 1817 001c 28000000 		.4byte	.LFE3-.LFB3
 1818 0020 00000000 		.4byte	.LFB1
 1819 0024 20000000 		.4byte	.LFE1-.LFB1
 1820 0028 00000000 		.4byte	.LFB4
 1821 002c 24000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 61


 1822 0030 00000000 		.4byte	.LFB5
 1823 0034 04000000 		.4byte	.LFE5-.LFB5
 1824 0038 00000000 		.4byte	.LFB6
 1825 003c 02000000 		.4byte	.LFE6-.LFB6
 1826 0040 00000000 		.4byte	.LFB7
 1827 0044 0C000000 		.4byte	.LFE7-.LFB7
 1828 0048 00000000 		.4byte	.LFB8
 1829 004c 18000000 		.4byte	.LFE8-.LFB8
 1830 0050 00000000 		.4byte	.LFB9
 1831 0054 0C000000 		.4byte	.LFE9-.LFB9
 1832 0058 00000000 		.4byte	.LFB10
 1833 005c 18000000 		.4byte	.LFE10-.LFB10
 1834 0060 00000000 		.4byte	.LFB11
 1835 0064 28000000 		.4byte	.LFE11-.LFB11
 1836 0068 00000000 		.4byte	.LFB12
 1837 006c 28000000 		.4byte	.LFE12-.LFB12
 1838 0070 00000000 		.4byte	.LFB13
 1839 0074 20000000 		.4byte	.LFE13-.LFB13
 1840 0078 00000000 		.4byte	.LFB14
 1841 007c 20000000 		.4byte	.LFE14-.LFB14
 1842 0080 00000000 		.4byte	.LFB15
 1843 0084 24000000 		.4byte	.LFE15-.LFB15
 1844 0088 00000000 		.4byte	.LFB16
 1845 008c 60000000 		.4byte	.LFE16-.LFB16
 1846 0090 00000000 		.4byte	.LFB17
 1847 0094 02000000 		.4byte	.LFE17-.LFB17
 1848 0098 00000000 		.4byte	0
 1849 009c 00000000 		.4byte	0
 1850              		.section	.debug_ranges,"",%progbits
 1851              	.Ldebug_ranges0:
 1852 0000 00000000 		.4byte	.LFB2
 1853 0004 20000000 		.4byte	.LFE2
 1854 0008 00000000 		.4byte	.LFB3
 1855 000c 28000000 		.4byte	.LFE3
 1856 0010 00000000 		.4byte	.LFB1
 1857 0014 20000000 		.4byte	.LFE1
 1858 0018 00000000 		.4byte	.LFB4
 1859 001c 24000000 		.4byte	.LFE4
 1860 0020 00000000 		.4byte	.LFB5
 1861 0024 04000000 		.4byte	.LFE5
 1862 0028 00000000 		.4byte	.LFB6
 1863 002c 02000000 		.4byte	.LFE6
 1864 0030 00000000 		.4byte	.LFB7
 1865 0034 0C000000 		.4byte	.LFE7
 1866 0038 00000000 		.4byte	.LFB8
 1867 003c 18000000 		.4byte	.LFE8
 1868 0040 00000000 		.4byte	.LFB9
 1869 0044 0C000000 		.4byte	.LFE9
 1870 0048 00000000 		.4byte	.LFB10
 1871 004c 18000000 		.4byte	.LFE10
 1872 0050 00000000 		.4byte	.LFB11
 1873 0054 28000000 		.4byte	.LFE11
 1874 0058 00000000 		.4byte	.LFB12
 1875 005c 28000000 		.4byte	.LFE12
 1876 0060 00000000 		.4byte	.LFB13
 1877 0064 20000000 		.4byte	.LFE13
 1878 0068 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 62


 1879 006c 20000000 		.4byte	.LFE14
 1880 0070 00000000 		.4byte	.LFB15
 1881 0074 24000000 		.4byte	.LFE15
 1882 0078 00000000 		.4byte	.LFB16
 1883 007c 60000000 		.4byte	.LFE16
 1884 0080 00000000 		.4byte	.LFB17
 1885 0084 02000000 		.4byte	.LFE17
 1886 0088 00000000 		.4byte	0
 1887 008c 00000000 		.4byte	0
 1888              		.section	.debug_line,"",%progbits
 1889              	.Ldebug_line0:
 1890 0000 01020000 		.section	.debug_str,"MS",%progbits,1
 1890      02005F00 
 1890      00000201 
 1890      FB0E0D00 
 1890      01010101 
 1891              	.LASF6:
 1892 0000 6C6F6E67 		.ascii	"long long int\000"
 1892      206C6F6E 
 1892      6720696E 
 1892      7400
 1893              	.LASF42:
 1894 000e 74785065 		.ascii	"txPeriod\000"
 1894      72696F64 
 1894      00
 1895              	.LASF13:
 1896 0017 63686172 		.ascii	"char8\000"
 1896      3800
 1897              	.LASF53:
 1898 001d 55415254 		.ascii	"UART_GetTxBufferSize\000"
 1898      5F476574 
 1898      54784275 
 1898      66666572 
 1898      53697A65 
 1899              	.LASF41:
 1900 0032 746D7053 		.ascii	"tmpStat\000"
 1900      74617400 
 1901              	.LASF46:
 1902 003a 55415254 		.ascii	"UART_IntClock_StartEx\000"
 1902      5F496E74 
 1902      436C6F63 
 1902      6B5F5374 
 1902      61727445 
 1903              	.LASF43:
 1904 0050 55415254 		.ascii	"UART_SetTxAddressMode\000"
 1904      5F536574 
 1904      54784164 
 1904      64726573 
 1904      734D6F64 
 1905              	.LASF3:
 1906 0066 73686F72 		.ascii	"short unsigned int\000"
 1906      7420756E 
 1906      7369676E 
 1906      65642069 
 1906      6E7400
 1907              	.LASF51:
 1908 0079 443A5C6A 		.ascii	"D:\\job\\MCU\\Others\\PSoC_train\\Workspace01\\I2C."
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 63


 1908      6F625C4D 
 1908      43555C4F 
 1908      74686572 
 1908      735C5053 
 1909 00a6 63796473 		.ascii	"cydsn\000"
 1909      6E00
 1910              	.LASF54:
 1911 00ac 55415254 		.ascii	"UART_initVar\000"
 1911      5F696E69 
 1911      74566172 
 1911      00
 1912              	.LASF50:
 1913 00b9 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART.c\000"
 1913      72617465 
 1913      645F536F 
 1913      75726365 
 1913      5C50536F 
 1914              	.LASF32:
 1915 00d7 73747269 		.ascii	"string\000"
 1915      6E6700
 1916              	.LASF11:
 1917 00de 666C6F61 		.ascii	"float\000"
 1917      7400
 1918              	.LASF7:
 1919 00e4 6C6F6E67 		.ascii	"long long unsigned int\000"
 1919      206C6F6E 
 1919      6720756E 
 1919      7369676E 
 1919      65642069 
 1920              	.LASF44:
 1921 00fb 61646472 		.ascii	"addressMode\000"
 1921      6573734D 
 1921      6F646500 
 1922              	.LASF52:
 1923 0107 55415254 		.ascii	"UART_Init\000"
 1923      5F496E69 
 1923      7400
 1924              	.LASF15:
 1925 0111 72656738 		.ascii	"reg8\000"
 1925      00
 1926              	.LASF5:
 1927 0116 6C6F6E67 		.ascii	"long unsigned int\000"
 1927      20756E73 
 1927      69676E65 
 1927      6420696E 
 1927      7400
 1928              	.LASF9:
 1929 0128 75696E74 		.ascii	"uint8\000"
 1929      3800
 1930              	.LASF19:
 1931 012e 55415254 		.ascii	"UART_Start\000"
 1931      5F537461 
 1931      727400
 1932              	.LASF34:
 1933 0139 55415254 		.ascii	"UART_PutArray\000"
 1933      5F507574 
 1933      41727261 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 64


 1933      7900
 1934              	.LASF35:
 1935 0147 62797465 		.ascii	"byteCount\000"
 1935      436F756E 
 1935      7400
 1936              	.LASF21:
 1937 0151 656E6162 		.ascii	"enableInterrupts\000"
 1937      6C65496E 
 1937      74657272 
 1937      75707473 
 1937      00
 1938              	.LASF1:
 1939 0162 756E7369 		.ascii	"unsigned char\000"
 1939      676E6564 
 1939      20636861 
 1939      7200
 1940              	.LASF12:
 1941 0170 646F7562 		.ascii	"double\000"
 1941      6C6500
 1942              	.LASF25:
 1943 0177 696E7453 		.ascii	"intSrc\000"
 1943      726300
 1944              	.LASF10:
 1945 017e 75696E74 		.ascii	"uint16\000"
 1945      313600
 1946              	.LASF39:
 1947 0185 55415254 		.ascii	"UART_SendBreak\000"
 1947      5F53656E 
 1947      64427265 
 1947      616B00
 1948              	.LASF45:
 1949 0194 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1949      74657243 
 1949      72697469 
 1949      63616C53 
 1949      65637469 
 1950              	.LASF8:
 1951 01ab 756E7369 		.ascii	"unsigned int\000"
 1951      676E6564 
 1951      20696E74 
 1951      00
 1952              	.LASF22:
 1953 01b8 55415254 		.ascii	"UART_WriteControlRegister\000"
 1953      5F577269 
 1953      7465436F 
 1953      6E74726F 
 1953      6C526567 
 1954              	.LASF29:
 1955 01d2 55415254 		.ascii	"UART_ReadTxStatus\000"
 1955      5F526561 
 1955      64547853 
 1955      74617475 
 1955      7300
 1956              	.LASF47:
 1957 01e4 43794578 		.ascii	"CyExitCriticalSection\000"
 1957      69744372 
 1957      69746963 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 65


 1957      616C5365 
 1957      6374696F 
 1958              	.LASF28:
 1959 01fa 55415254 		.ascii	"UART_ReadControlRegister\000"
 1959      5F526561 
 1959      64436F6E 
 1959      74726F6C 
 1959      52656769 
 1960              	.LASF36:
 1961 0213 55415254 		.ascii	"UART_PutCRLF\000"
 1961      5F507574 
 1961      43524C46 
 1961      00
 1962              	.LASF33:
 1963 0220 62756649 		.ascii	"bufIndex\000"
 1963      6E646578 
 1963      00
 1964              	.LASF23:
 1965 0229 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 1965      5F536574 
 1965      5478496E 
 1965      74657272 
 1965      7570744D 
 1966              	.LASF49:
 1967 0241 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1967      43313120 
 1967      352E342E 
 1967      31203230 
 1967      31363036 
 1968 0274 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1968      20726576 
 1968      6973696F 
 1968      6E203233 
 1968      37373135 
 1969 02a7 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1969      66756E63 
 1969      74696F6E 
 1969      2D736563 
 1969      74696F6E 
 1970              	.LASF30:
 1971 02cf 55415254 		.ascii	"UART_PutChar\000"
 1971      5F507574 
 1971      43686172 
 1971      00
 1972              	.LASF48:
 1973 02dc 55415254 		.ascii	"UART_IntClock_Stop\000"
 1973      5F496E74 
 1973      436C6F63 
 1973      6B5F5374 
 1973      6F7000
 1974              	.LASF17:
 1975 02ef 73697A65 		.ascii	"sizetype\000"
 1975      74797065 
 1975      00
 1976              	.LASF27:
 1977 02f8 74784461 		.ascii	"txDataByte\000"
 1977      74614279 
ARM GAS  C:\Users\LUCASC~1\AppData\Local\Temp\ccCa6VjS.s 			page 66


 1977      746500
 1978              	.LASF14:
 1979 0303 63686172 		.ascii	"char\000"
 1979      00
 1980              	.LASF26:
 1981 0308 55415254 		.ascii	"UART_WriteTxData\000"
 1981      5F577269 
 1981      74655478 
 1981      44617461 
 1981      00
 1982              	.LASF40:
 1983 0319 7265744D 		.ascii	"retMode\000"
 1983      6F646500 
 1984              	.LASF2:
 1985 0321 73686F72 		.ascii	"short int\000"
 1985      7420696E 
 1985      7400
 1986              	.LASF38:
 1987 032b 55415254 		.ascii	"UART_ClearTxBuffer\000"
 1987      5F436C65 
 1987      61725478 
 1987      42756666 
 1987      657200
 1988              	.LASF20:
 1989 033e 55415254 		.ascii	"UART_Stop\000"
 1989      5F53746F 
 1989      7000
 1990              	.LASF24:
 1991 0348 636F6E74 		.ascii	"control\000"
 1991      726F6C00 
 1992              	.LASF4:
 1993 0350 6C6F6E67 		.ascii	"long int\000"
 1993      20696E74 
 1993      00
 1994              	.LASF16:
 1995 0359 6C6F6E67 		.ascii	"long double\000"
 1995      20646F75 
 1995      626C6500 
 1996              	.LASF18:
 1997 0365 55415254 		.ascii	"UART_Enable\000"
 1997      5F456E61 
 1997      626C6500 
 1998              	.LASF0:
 1999 0371 7369676E 		.ascii	"signed char\000"
 1999      65642063 
 1999      68617200 
 2000              	.LASF31:
 2001 037d 55415254 		.ascii	"UART_PutString\000"
 2001      5F507574 
 2001      53747269 
 2001      6E6700
 2002              	.LASF37:
 2003 038c 73697A65 		.ascii	"size\000"
 2003      00
 2004              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
